{"mappings":"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","sources":["node_modules/css-paint-polyfill/src/util.js","node_modules/css-paint-polyfill/src/index.js","node_modules/css-paint-polyfill/src/realm.js"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Canvas#toBlob() ponyfill */\nexport function canvasToBlob(canvas, callback, type, quality) {\n\tif (canvas.toBlob) return canvas.toBlob(callback, type, quality);\n\n\tlet bin = atob(canvas.toDataURL(type, quality).split(',')[1]),\n\t\tarr = new Uint8Array(bin.length);\n\tfor (let i=0; i<bin.length; i++) arr[i] = bin.charCodeAt(i);\n\tcallback(new Blob([arr], { type }));\n}\n\n/** Basically fetch(u).then( r => r.text() ) */\nexport function fetchText(url, callback) {\n\tlet xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = () => {\n\t\tif (xhr.readyState===4) {\n\t\t\tcallback(xhr.responseText);\n\t\t}\n\t};\n\txhr.open('GET', url, true);\n\txhr.send();\n}\n\n/** Object.defineProperty() ponyfill */\nexport function defineProperty(obj, name, def) {\n\tif (Object.defineProperty) {\n\t\tObject.defineProperty(obj, name, def);\n\t}\n\telse {\n\t\tobj[name] = def.get();\n\t}\n}\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Realm } from './realm';\nimport { defineProperty, fetchText } from './util';\n\nlet paintWorklet;\n\nlet CSS = window.CSS;\nif (!CSS) window.CSS = CSS = {};\n\nif (!CSS.supports) CSS.supports = function s(property, value) {\n\tif (property == 'paint') return true;\n\tif (value) {\n\t\tconst el = styleIsolationFrame.contentDocument.body;\n\t\tel.style.cssText = property + ':' + value;\n\t\treturn el.style.cssText.length > 0;\n\t}\n\tlet tokenizer = /(^|not|(or)|(and))\\s*\\(\\s*(.+?)\\s*:(.+?)\\)\\s*|(.)/gi,\n\t\tcomparison, v, t, n;\n\t// [, not, or, and, key, value, unknown]\n\twhile ((t = tokenizer.exec(property))) {\n\t\tif (t[6]) return false;\n\t\tn = s(t[4], t[5]);\n\t\tv = t[2] ? (v || n) : t[3] ? (v && n) : (comparison = !t[1], n);\n\t}\n\treturn v == comparison;\n};\n\nif (!CSS.escape) CSS.escape = s => s.replace(/([^\\w-])/g,'\\\\$1');\n\n/** @type {{ [name: string]: { name: string, syntax: string, inherits: boolean, initialValue: string }} } */\nconst CSS_PROPERTIES = {};\nif (!CSS.registerProperty) CSS.registerProperty = function (def) {\n\tCSS_PROPERTIES[def.name] = def;\n};\n\n// Minimal poorlyfill for CSS properties+values\nfunction CSSUnitValue(value, unit) {\n\tconst num = parseFloat(value);\n\tthis.value = isNaN(num) ? value : num;\n\tthis.unit = unit;\n}\nCSSUnitValue.prototype.toString = function() {\n\treturn this.value + (this.unit == 'number' ? '' : this.unit);\n};\nCSSUnitValue.prototype.valueOf = function() {\n\treturn this.value;\n};\n\n'Hz Q ch cm deg dpcm dpi ddpx em ex fr grad in kHz mm ms number pc percent pt px rad rem s turn vh vmax vmin vw'.split(' ').forEach(unit => {\n\tif (!CSS[unit]) {\n\t\tCSS[unit] = v => new CSSUnitValue(v, unit);\n\t}\n});\n\n// Matches CSS properties that can accept a paint() value:\nconst IMAGE_CSS_PROPERTIES = /(background|mask|cursor|-image|-source)/;\n\nconst supportsPaintWorklet = !!CSS.paintWorklet;\nif (!supportsPaintWorklet) {\n\tpaintWorklet = new PaintWorklet();\n\tdefineProperty(CSS, 'paintWorklet', {\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t\tget: () => paintWorklet\n\t});\n}\n\nconst GLOBAL_ID = 'css-paint-polyfill';\n\nlet root = document.createElement(GLOBAL_ID);\nif (!supportsPaintWorklet) {\n\tdocument.documentElement.appendChild(root);\n}\n\nlet styleIsolationFrame = document.createElement('iframe');\nstyleIsolationFrame.style.cssText = 'position:absolute; left:0; top:-999px; width:1px; height:1px;';\nroot.appendChild(styleIsolationFrame);\n\nlet overridesStylesheet = document.createElement('style');\noverridesStylesheet.id = GLOBAL_ID;\noverridesStylesheet.$$isPaint = true;\nroot.appendChild(overridesStylesheet);\nlet overrideStyles = overridesStylesheet.sheet;\nlet testStyles = root.style;\n\n// when `true`, interception of styles is disabled\nlet bypassStyleHooks = false;\n\nconst EMPTY_ARRAY = [];\nconst HAS_PAINT = /(paint\\(|-moz-element\\(#paint-|-webkit-canvas\\(paint-|[('\"]blob:[^'\"#]+#paint=|[('\"]data:image\\/paint-)/;\nconst USE_CSS_CANVAS_CONTEXT = 'getCSSCanvasContext' in document;\nconst USE_CSS_ELEMENT = (testStyles.backgroundImage = `-moz-element(#${GLOBAL_ID})`) === testStyles.backgroundImage;\nconst HAS_PROMISE = (typeof Promise === 'function');\ntestStyles.cssText = 'display:none !important;';\n\nlet defer = window.requestAnimationFrame || setTimeout;\nlet getDevicePixelRatio = () => window.devicePixelRatio || 1;\n\nlet painters = {};\nlet trackedRules = {};\nlet styleSheetCounter = 0;\n\nfunction registerPaint(name, Painter, worklet) {\n\t// if (painters[name]!=null) throw Error(`registerPaint(${name}): name already registered`);\n\tpainters[name] = {\n\t\tworklet,\n\t\tPainter,\n\t\tproperties: Painter.inputProperties ? [].slice.call(Painter.inputProperties) : [],\n\t\tbit: 0,\n\t\tinstances: []\n\t};\n\tlet query = '';\n\tfor (let i=overrideStyles.cssRules.length; i--; ) {\n\t\tconst rule = overrideStyles.cssRules[i];\n\t\tif (rule.style.cssText.indexOf('-' + name) !== -1) {\n\t\t\tquery += rule.selectorText;\n\t\t}\n\t}\n\tif (query) processItem(query, true);\n}\n\nfunction getPainter(name) {\n\tlet painter = painters[name];\n\t// if (painter == null) throw Error(`No paint defined for \"${name}\"`);\n\treturn painter;\n}\n\nfunction getPainterInstance(painter) {\n\t// Alternate between two instances.\n\t// @TODO should alternate between two *worklets*. Class instances are meaningless for perf.\n\tlet inst = painter.bit ^= 1;\n\treturn painter.instances[inst] || (painter.instances[inst] = new painter.Painter());\n}\n\nfunction paintRuleWalker(rule, context) {\n\tlet css = rule.cssText;\n\tconst hasPaint = HAS_PAINT.test(css);\n\n\tif (context.isNew === true && hasPaint) {\n\t\tif (css !== (css = escapePaintRules(css))) {\n\t\t\trule = replaceRule(rule, css);\n\t\t}\n\t}\n\n\t// Hello future self!\n\t// This eager exit avoids tracking unpainted rules.\n\t// That seems reasonable, but it wasn't in place in 3.0...\n\t// Perhaps I'm missing something, if so, I apologize.\n\tif (!hasPaint) return;\n\n\tlet selector = rule.selectorText,\n\t\tcssText = getCssText(rule.style),\n\t\tindex, key, cached;\n\n\tif (context.counters[selector] == null) {\n\t\tindex = context.counters[selector] = 1;\n\t}\n\telse {\n\t\tindex = ++context.counters[selector];\n\t}\n\tkey = 'sheet' + context.sheetId + '\\n' + selector + '\\n' + index;\n\tif (trackedRules[key] != null) {\n\t\tcached = trackedRules[key];\n\t\tif (cached.selector === selector) {\n\t\t\tcached.rule = rule;\n\t\t\tif (cached.cssText !== cssText) {\n\t\t\t\tcontext.toProcess.push(cached);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tcontext.toRemove.push(cached);\n\t}\n\telse {\n\t\tcached = trackedRules[key] = { key, selector, cssText, properties: {}, rule };\n\t\tcontext.toProcess.push(cached.selector);\n\t}\n}\n\nfunction walk(node, iterator) {\n\tif ('ownerSVGElement' in node) return;\n\titerator(node);\n\tlet child = node.firstElementChild;\n\twhile (child) {\n\t\twalk(child, iterator);\n\t\tchild = child.nextElementSibling;\n\t}\n}\n\nfunction update() {\n\tlet sheets = [].slice.call(document.styleSheets),\n\t\tcontext = {\n\t\t\ttoProcess: [],\n\t\t\ttoRemove: [],\n\t\t\tcounters: {},\n\t\t\tisNew: false,\n\t\t\tsheetId: null,\n\t\t\t// this property is unused - it's assigned to in order to prevent Terser from removing the try/catch on L220\n\t\t\trules: null\n\t\t},\n\t\tinvalidateAll;\n\n\tfor (let i=0; i<sheets.length; i++) {\n\t\tlet node = sheets[i].ownerNode;\n\t\tif (node.$$isPaint) continue;\n\n\t\t// Check that we can access the sheet.\n\t\t// (assigning to `context.rules` prevents Terser from removing the block)\n\t\ttry { context.rules = node.sheet.cssRules; }\n\t\tcatch (e) { continue; }\n\n\t\tcontext.sheetId = node.$$paintid;\n\t\tcontext.isNew = context.sheetId == null;\n\t\tif (context.isNew) {\n\t\t\tcontext.sheetId = node.$$paintid = ++styleSheetCounter;\n\t\t\t// allow processing to defer parse\n\t\t\tif (processNewSheet(node)===false) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tinvalidateAll = true;\n\t\t}\n\t\twalkStyles(node.sheet, paintRuleWalker, context);\n\t}\n\n\tfor (let i = context.toRemove.length; i--; ) {\n\t\t// @todo cleanup?\n\t\tdelete trackedRules[context.toRemove[i].key];\n\t}\n\n\tif (context.toProcess.length>0) {\n\t\tprocessItem(context.toProcess.join(', '));\n\t}\n\n\t// If a new stylesheet is injected, invalidate all geometry and paint output.\n\tif (invalidateAll) {\n\t\tprocessItem('[data-css-paint]', true);\n\t}\n}\n\nfunction walkStyles(sheet, iterator, context) {\n\tlet stack = [[0, sheet.cssRules]],\n\t\tcurrent = stack[0],\n\t\trules = current[1];\n\tif (rules) {\n\t\tfor (let j=0; stack.length>0; j++) {\n\t\t\tif (j>=rules.length) {\n\t\t\t\tstack.pop();\n\t\t\t\tlet len = stack.length;\n\t\t\t\tif (len > 0) {\n\t\t\t\t\tcurrent = stack[len - 1];\n\t\t\t\t\trules = current[1];\n\t\t\t\t\tj = current[0];\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcurrent[0] = j;\n\t\t\tlet rule = rules[j];\n\t\t\t// process @import rules (requires re-fetching)\n\t\t\tif (rule.type === 3) {\n\t\t\t\tif (rule.$$isPaint) continue;\n\t\t\t\tconst mq = rule.media && rule.media.mediaText;\n\t\t\t\tif (mq && !self.matchMedia(mq).matches) continue;\n\t\t\t\t// don't refetch google font stylesheets\n\t\t\t\tif (/ts\\.g.{7}is\\.com\\/css/.test(rule.href)) continue;\n\t\t\t\trule.$$isPaint = true;\n\t\t\t\tfetchText(rule.href, processRemoteSheet);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (rule.type !== 1) {\n\t\t\t\tif (rule.cssRules && rule.cssRules.length>0) {\n\t\t\t\t\tstack.push([0, rule.cssRules]);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet r = iterator(rule, context);\n\t\t\tif (r!==undefined) context = r;\n\t\t}\n\t}\n\treturn context;\n}\n\nfunction parseCss(css) {\n\tlet parent = styleIsolationFrame.contentDocument.body;\n\tlet style = document.createElement('style');\n\tstyle.media = 'print';\n\tstyle.$$paintid = ++styleSheetCounter;\n\tstyle.appendChild(document.createTextNode(css));\n\tparent.appendChild(style);\n\tstyle.sheet.remove = () => parent.removeChild(style);\n\treturn style.sheet;\n}\n\nfunction replaceRule(rule, newRule) {\n\tlet sheet = rule.parentStyleSheet,\n\t\tparent = rule.parentRule,\n\t\trules = (parent || sheet).cssRules,\n\t\tindex = rules.length - 1;\n\tfor (let i=0; i<=index; i++) {\n\t\tif (rules[i] === rule) {\n\t\t\t(parent || sheet).deleteRule(i);\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (newRule!=null) {\n\t\tif (parent) {\n\t\t\tlet index = parent.appendRule(newRule);\n\t\t\treturn parent.cssRules[index];\n\t\t}\n\t\tsheet.insertRule(newRule, index);\n\t\treturn sheet.cssRules[index];\n\t}\n}\n\n// Replace paint(id) with url(data:image/paint-id) for a newly detected stylesheet\nfunction processNewSheet(node) {\n\tif (node.$$isPaint) return;\n\n\tif (node.href) {\n\t\tfetchText(node.href, processRemoteSheet);\n\t\treturn false;\n\t}\n\n\tfor (let i=node.childNodes.length; i--; ) {\n\t\tlet css = node.childNodes[i].nodeValue;\n\t\tlet escaped = escapePaintRules(css);\n\t\tif (escaped !== css) {\n\t\t\tnode.childNodes[i].nodeValue = escaped;\n\t\t}\n\t}\n}\n\nfunction processRemoteSheet(css) {\n\tlet sheet = parseCss(escapePaintRules(css));\n\n\t// In Firefox, accessing .cssRules in a stylesheet with pending @import rules fails.\n\t// Try to wait for them to resolve, otherwise try again after a long delay.\n\ttry {\n\t\tsheet._ = sheet.cssRules.length;\n\t}\n\tcatch (e) {\n\t\tlet next = () => {\n\t\t\tif (sheet) processRemoteSheetRules(sheet);\n\t\t\tsheet = null;\n\t\t\tclearTimeout(timer);\n\t\t};\n\t\tsheet.ownerNode.onload = sheet.ownerNode.onerror = next;\n\t\tlet timer = setTimeout(next, 5000);\n\t\treturn;\n\t}\n\n\tprocessRemoteSheetRules(sheet);\n}\n\nfunction processRemoteSheetRules(sheet) {\n\tlet newSheet = '';\n\twalkStyles(sheet, (rule) => {\n\t\tif (rule.type !== 1) return;\n\t\tlet css = '';\n\t\tfor (let i=0; i<rule.style.length; i++) {\n\t\t\tconst prop = rule.style.item(i);\n\t\t\tconst value = rule.style.getPropertyValue(prop);\n\t\t\tif (HAS_PAINT.test(value)) {\n\t\t\t\tcss = `${prop}: ${value}${rule.style.getPropertyPriority(prop)};`;\n\t\t\t}\n\t\t}\n\t\tif (!css) return;\n\t\tcss = `${rule.selectorText}{${css}}`;\n\t\t// wrap the StyleRule in any parent ConditionalRules (media queries, etc):\n\t\tlet r = rule;\n\t\twhile ((r = r.parentRule)) {\n\t\t\tcss = `${r.cssText.match(/^[\\s\\S]+?\\{/)[0]}${css}}`;\n\t\t}\n\t\tnewSheet += css;\n\t});\n\n\tsheet.remove();\n\n\tif (newSheet) {\n\t\tconst pageStyles = document.createElement('style');\n\t\t// pageStyles.$$paintid = styleSheetCounter;\n\t\tpageStyles.appendChild(document.createTextNode(newSheet));\n\t\troot.appendChild(pageStyles);\n\t\tupdate();\n\t}\n}\n\nfunction escapePaintRules(css) {\n\treturn css.replace(/(;|,|\\b)paint\\s*\\(\\s*(['\"]?)(.+?)\\2\\s*\\)(;|,|!|\\b|$)/g, '$1url(data:image/paint-$3,=)$4');\n}\n\nlet updateQueue = [];\nfunction queueUpdate(element, forceInvalidate) {\n\tif (forceInvalidate) {\n\t\telement.$$paintObservedProperties = null;\n\t\tif (element.$$paintGeometry && !element.$$paintGeometry.live) {\n\t\t\telement.$$paintGeometry = null;\n\t\t}\n\t}\n\tif (element.$$paintPending===true) return;\n\telement.$$paintPending = true;\n\tif (updateQueue.indexOf(element) === -1 && updateQueue.push(element) === 1) {\n\t\tdefer(processUpdateQueue);\n\t}\n}\nfunction processUpdateQueue() {\n\t// any added stylesheets get processed first before flushing queued elements\n\tlet shouldUpdate;\n\tfor (let i=0; i<updateQueue.length; i++) {\n\t\tif (updateQueue[i] && updateQueue[i].localName === 'style') {\n\t\t\tshouldUpdate = true;\n\t\t\tupdateQueue[i] = null;\n\t\t}\n\t}\n\tif (shouldUpdate) {\n\t\tdefer(processUpdateQueue);\n\t\tupdate();\n\t\treturn;\n\t}\n\t// if we need to disable the override sheet, only do it once:\n\tconst disable = updateQueue.length && updateQueue.some(el => el && el.$$needsOverrides === true);\n\tif (disable) disableOverrides();\n\twhile (updateQueue.length) {\n\t\tlet el = updateQueue.pop();\n\t\tif (el) maybeUpdateElement(el);\n\t}\n\tif (disable) enableOverrides();\n}\n\nfunction processItem(selector, forceInvalidate) {\n\ttry {\n\t\tlet sel = document.querySelectorAll(selector);\n\t\tfor (let i=0; i<sel.length; i++) queueUpdate(sel[i], forceInvalidate);\n\t}\n\tcatch (e) {}\n}\n\nfunction loadImages(images, callback, args) {\n\tlet count = images.length;\n\tlet onload = () => {\n\t\tif (--count) return;\n\t\tcallback.apply(null, args || EMPTY_ARRAY);\n\t};\n\tfor (let i=0; i<images.length; i++) {\n\t\tlet img = new Image();\n\t\timg.onload = onload;\n\t\timg.onerror = onerror;\n\t\timg.src = images[i];\n\t}\n}\n\nfunction ensurePaintId(element) {\n\tlet paintId = element.$$paintId;\n\tif (paintId==null) {\n\t\tpaintId = element.$$paintId = ++idCounter;\n\t}\n\treturn paintId;\n}\n\nfunction getPaintRuleForElement(element) {\n\tlet paintRule = element.$$paintRule,\n\t\tpaintId = ensurePaintId(element);\n\t// Fix cloned DOM trees which can have incorrect data-css-paint attributes:\n\tif (Number(element.getAttribute('data-css-paint')) !== paintId) {\n\t\telement.setAttribute('data-css-paint', paintId);\n\t}\n\tif (paintRule==null) {\n\t\tlet index = overrideStyles.insertRule(`[data-css-paint=\"${paintId}\"] {}`, overrideStyles.cssRules.length);\n\t\tpaintRule = element.$$paintRule = overrideStyles.cssRules[index];\n\t}\n\treturn paintRule;\n}\n\nfunction getCssText(style) {\n\tlet text = style.cssText;\n\tif (text) return text;\n\ttext = '';\n\tfor (let i=0, prop; i<style.length; i++) {\n\t\tprop = style[i];\n\t\tif (i!==0) text += ' ';\n\t\ttext += prop;\n\t\ttext += ':';\n\t\ttext += style.getPropertyValue(prop);\n\t\ttext += ';';\n\t}\n\treturn text;\n}\n\nfunction maybeUpdateElement(element) {\n\tlet computed = getComputedStyle(element);\n\n\tif (element.$$paintObservedProperties && !element.$$needsOverrides) {\n\t\tfor (let i=0; i<element.$$paintObservedProperties.length; i++) {\n\t\t\tlet prop = element.$$paintObservedProperties[i];\n\t\t\tif (computed.getPropertyValue(prop).trim() !== element.$$paintedPropertyValues[prop]) {\n\t\t\t\tupdateElement(element, computed);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse if (element.$$paintId || HAS_PAINT.test(getCssText(computed))) {\n\t\tupdateElement(element, computed);\n\t}\n\telse {\n\t\t// first time we've seen this element, and it has a style attribute with unparsed paint rules.\n\t\tconst styleAttr = element.getAttribute('style');\n\t\tif (HAS_PAINT.test(styleAttr)) {\n\t\t\telement.style.cssText = styleAttr.replace(/;\\s*$/, '') + '; ' + element.style.cssText;\n\t\t\tupdateElement(element);\n\t\t}\n\t}\n\n\telement.$$paintPending = false;\n}\n\n// Invalidate any cached geometry and enqueue an update\nfunction invalidateElementGeometry(element) {\n\tif (element.$$paintGeometry && !element.$$paintGeometry.live) {\n\t\telement.$$paintGeometry = null;\n\t}\n\tqueueUpdate(element);\n}\n\nlet currentProperties, currentElement, propertyContainerCache;\nconst propertiesContainer = {\n\t// .get() is used by worklets\n\tget(name) {\n\t\tconst def = CSS_PROPERTIES[name];\n\t\tlet v = def && def.inherits === false ? currentElement.style.getPropertyValue(name) : propertiesContainer.getRaw(name);\n\t\tif (v == null && def) v = def.initialValue;\n\t\telse if (def && def.syntax) {\n\t\t\tconst s = def.syntax.replace(/[<>\\s]/g, '');\n\t\t\tif (typeof CSS[s] === 'function') v = CSS[s](v);\n\t\t}\n\t\t// Safari returns whitespace around values:\n\t\tif (typeof v === 'string') v = v.trim();\n\t\treturn v;\n\t},\n\tgetRaw(name) {\n\t\tif (name in propertyContainerCache) return propertyContainerCache[name];\n\t\tlet v = currentProperties.getPropertyValue(name);\n\t\t// Safari returns whitespace around values:\n\t\tif (typeof v === 'string') v = v.trim();\n\t\treturn propertyContainerCache[name] = v;\n\t}\n};\n\n// Get element geometry, relying on cached values if possible.\nfunction getElementGeometry(element) {\n\treturn element.$$paintGeometry || (element.$$paintGeometry = {\n\t\twidth: element.clientWidth,\n\t\theight: element.clientHeight,\n\t\tlive: false\n\t});\n}\n\nconst resizeObserver = window.ResizeObserver && new window.ResizeObserver((entries) => {\n\tfor (let i=0; i<entries.length; i++) {\n\t\tconst entry = entries[i];\n\t\tlet geom = entry.target.$$paintGeometry;\n\t\tif (geom) geom.live = true;\n\t\telse geom = entry.target.$$paintGeometry = { width: 0, height: 0, live: true };\n\t\tlet bbox = entry.borderBoxSize;\n\t\t// Firefox returns a single borderBoxSize object, Chrome returns an Array of them:\n\t\tif (bbox && bbox.length) bbox = bbox[0];\n\t\tif (bbox) {\n\t\t\tgeom.width = bbox.inlineSize | 0;\n\t\t\tgeom.height = bbox.blockSize | 0;\n\t\t}\n\t\telse {\n\t\t\t// contentRect is the content box, so we add padding to get border-box:\n\t\t\tconst computed = getComputedStyle(entry.target);\n\t\t\tconst paddingX = parseFloat(computed.paddingLeft) + parseFloat(computed.paddingRight);\n\t\t\tconst paddingY = parseFloat(computed.paddingTop) + parseFloat(computed.paddingBottom);\n\t\t\tgeom.width = Math.round(((entry.contentRect.right - entry.contentRect.left) || entry.contentRect.width) + paddingX);\n\t\t\tgeom.height = Math.round(((entry.contentRect.bottom - entry.contentRect.top) || entry.contentRect.height) + paddingY);\n\t\t}\n\t\tqueueUpdate(entry.target, true);\n\t}\n});\nfunction observeResize(element) {\n\tif (resizeObserver && !element.$$paintGeometry.live) {\n\t\telement.$$paintGeometry.live = true;\n\t\tresizeObserver.observe(element);\n\t}\n}\n\nlet idCounter = 0;\nfunction updateElement(element, computedStyle) {\n\tif (element.$$needsOverrides === true) disableOverrides();\n\tlet style = currentProperties = computedStyle==null ? getComputedStyle(element) : computedStyle;\n\tcurrentElement = element;\n\t// element.$$paintGeom = style;\n\tpropertyContainerCache = {};\n\tlet paintRule;\n\tlet observedProperties = [];\n\n\telement.$$paintPending = false;\n\n\t// @TODO get computed styles and precompute geometry in a rAF after first paint, then re-use w/ invalidation\n\tlet elementGeometry = getElementGeometry(element);\n\tobserveResize(element);\n\telementGeometry = { width: elementGeometry.width, height: elementGeometry.height };\n\n\tlet dpr = getDevicePixelRatio();\n\n\tlet paintedProperties = element.$$paintedProperties;\n\n\tfor (let i=0; i<style.length; i++) {\n\t\tlet property = style[i],\n\t\t\tvalue = propertiesContainer.getRaw(property),\n\t\t\t// I am sorry\n\t\t\treg = /(,|\\b|^)(?:url\\((['\"]?))?((?:-moz-element\\(#|-webkit-canvas\\()paint-\\d+-([^;,]+)|(?:data:image\\/paint-|blob:[^'\"#]+#paint=)([^\"';, ]+)(?:[;,].*?)?)\\2\\)(;|,|\\s|\\b|$)/g,\n\t\t\tnewValue = '',\n\t\t\tindex = 0,\n\t\t\turls = [],\n\t\t\thasChanged = false,\n\t\t\thasPaints = false,\n\t\t\tpaintId,\n\t\t\ttoken,\n\t\t\tdisableScaling = false,\n\t\t\tgeom = elementGeometry;\n\t\t\n\t\tif (!IMAGE_CSS_PROPERTIES.test(property)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore unnecessarily aliased vendor-prefixed properties:\n\t\tif (property === '-webkit-border-image') continue;\n\n\t\t// Support CSS Border Images\n\t\t// NOTE: Safari cannot handle DPI-scaled border-image:-webkit-canvas(), so we disable HiDPI.\n\t\tif (/border-image/.test(property)) {\n\t\t\tlet w = geom.width;\n\t\t\tlet h = geom.height;\n\n\t\t\tconst slice = parseCssDimensions(\n\t\t\t\tpropertiesContainer\n\t\t\t\t\t.getRaw('border-image-slice')\n\t\t\t\t\t.replace(/\\sfill/, '')\n\t\t\t\t\t.split(' ')\n\t\t\t);\n\t\t\tconst borderWidth = parseCssDimensions(propertiesContainer.getRaw('border-width').split(' '));\n\t\t\tconst outset = parseCssDimensions(propertiesContainer.getRaw('border-image-outset').split(' '));\n\n\t\t\t// Add the outside to dimensions, which is a multiple/percentage of each border width:\n\t\t\t// Note: this must first omit any sides that have been sliced to 0px.\n\t\t\tw += applyDimensions(slice.left != '0' && parseFloat(borderWidth.left) || 0, outset.left || 0, true);\n\t\t\tw += applyDimensions(slice.right != '0' && parseFloat(borderWidth.right) || 0, outset.right || 0, true);\n\t\t\th += applyDimensions(slice.top != '0' && parseFloat(borderWidth.top) || 0, outset.top || 0, true);\n\t\t\th += applyDimensions(slice.bottom != '0' && parseFloat(borderWidth.bottom) || 0, outset.bottom || 0, true);\n\n\t\t\tdisableScaling = true;\n\n\t\t\tgeom = { width: w, height: h };\n\t\t}\n\n\t\twhile ((token = reg.exec(value))) {\n\t\t\tif (hasPaints === false) {\n\t\t\t\tpaintId = ensurePaintId(element);\n\t\t\t}\n\n\t\t\thasPaints = true;\n\t\t\tnewValue += value.substring(0, token.index);\n\t\t\tlet painterName = token[4] || token[5];\n\t\t\tlet currentUri = token[3];\n\t\t\tlet painter = getPainter(painterName);\n\t\t\tlet contextOptions = painter && painter.Painter.contextOptions || {};\n\t\t\tlet equivalentDpr = disableScaling || contextOptions.scaling === false ? 1 : dpr;\n\n\t\t\tlet inst;\n\t\t\tif (painter) {\n\t\t\t\tif (painter.Painter.inputProperties) {\n\t\t\t\t\tobservedProperties.push.apply(observedProperties, painter.Painter.inputProperties);\n\t\t\t\t}\n\t\t\t\tinst = getPainterInstance(painter);\n\t\t\t}\n\n\t\t\tif (contextOptions.nativePixels===true) {\n\t\t\t\tgeom.width *= dpr;\n\t\t\t\tgeom.height *= dpr;\n\t\t\t\tequivalentDpr = 1;\n\t\t\t}\n\n\t\t\tlet actualWidth = equivalentDpr * geom.width,\n\t\t\t\tactualHeight = equivalentDpr * geom.height;\n\n\t\t\tlet ctx = element.$$paintContext;\n\t\t\tlet cssContextId = `paint-${paintId}-${painterName}`;\n\t\t\tlet canvas = ctx && ctx.canvas;\n\n\t\t\t// Changing the -webkit-canvas() id requires getting a new context.\n\t\t\tconst requiresNewBackingContext = USE_CSS_CANVAS_CONTEXT===true && ctx && cssContextId !== ctx.id;\n\n\t\t\tif (!canvas || canvas.width!=actualWidth || canvas.height!=actualHeight || requiresNewBackingContext) {\n\t\t\t\tif (USE_CSS_CANVAS_CONTEXT===true) {\n\t\t\t\t\tctx = document.getCSSCanvasContext('2d', cssContextId, actualWidth, actualHeight);\n\t\t\t\t\tctx.id = cssContextId;\n\t\t\t\t\t// Note: even when we replace ctx here, we don't update `canvas`.\n\t\t\t\t\t// This is to enable the id !== check that sets hasChanged=true later.\n\t\t\t\t\tif (element.$$paintContext) {\n\t\t\t\t\t\t// clear any re-used context\n\t\t\t\t\t\tctx.clearRect(0, 0, actualWidth, actualHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet shouldAppend = false;\n\t\t\t\t\tif (!canvas) {\n\t\t\t\t\t\tcanvas = document.createElement('canvas');\n\t\t\t\t\t\tcanvas.id = cssContextId;\n\t\t\t\t\t\tshouldAppend = USE_CSS_ELEMENT;\n\t\t\t\t\t}\n\t\t\t\t\tcanvas.width = actualWidth;\n\t\t\t\t\tcanvas.height = actualHeight;\n\t\t\t\t\tif (shouldAppend) {\n\t\t\t\t\t\tcanvas.style.display = 'none';\n\t\t\t\t\t\troot.appendChild(canvas);\n\t\t\t\t\t}\n\t\t\t\t\tctx = canvas.getContext('2d');\n\t\t\t\t}\n\t\t\t\telement.$$paintContext = ctx;\n\t\t\t\tctx.imageSmoothingEnabled = false;\n\t\t\t\tif (equivalentDpr!==1) ctx.scale(equivalentDpr, equivalentDpr);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tctx.clearRect(0, 0, actualWidth, actualHeight);\n\n\t\t\t\t// This hack is no longer needed thanks to the closePath() fix\n\t\t\t\t// if (USE_CSS_CANVAS_CONTEXT===false) {\n\t\t\t\t// \tctx = ctx.canvas.getContext('2d');\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tif (inst) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.beginPath();\n\t\t\t\tinst.paint(ctx, geom, propertiesContainer);\n\t\t\t\t// Close any open path so clearRect() can dump everything\n\t\t\t\tctx.closePath();\n\t\t\t\t// ctx.stroke();  // useful to verify that the polyfill painted rather than native paint().\n\t\t\t\tctx.restore();\n\t\t\t\t// -webkit-canvas() is scaled based on DPI by default, we don't want to reset that.\n\t\t\t\tif (USE_CSS_CANVAS_CONTEXT===false && !USE_CSS_ELEMENT && 'resetTransform' in ctx) {\n\t\t\t\t\tctx.resetTransform();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewValue += token[1];\n\n\t\t\tif (USE_CSS_CANVAS_CONTEXT===true) {\n\t\t\t\tnewValue += `-webkit-canvas(${cssContextId})`;\n\t\t\t\t// new or replaced context (note: `canvas` is any PRIOR canvas)\n\t\t\t\tif (token[4] == null || canvas && canvas.id !== cssContextId) {\n\t\t\t\t\thasChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (USE_CSS_ELEMENT===true) {\n\t\t\t\tnewValue += `-moz-element(#${cssContextId})`;\n\t\t\t\tif (token[4] == null) hasChanged = true;\n\t\t\t\t// `canvas` here is the current canvas.\n\t\t\t\tif (canvas && canvas.id !== cssContextId) {\n\t\t\t\t\tcanvas.id = cssContextId;\n\t\t\t\t\thasChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet uri = canvas.toDataURL('image/png').replace('/png', '/paint-' + painterName);\n\t\t\t\tif (typeof MSBlobBuilder==='function') {\n\t\t\t\t\turi = dataUrlToBlob(uri, painterName);\n\t\t\t\t}\n\t\t\t\t// let uri = ctx.canvas.toDataURL('image/bmp', 1).replace('/bmp', '/paint-' + painterName);\n\t\t\t\turls.push(uri);\n\t\t\t\tnewValue += 'url(\"' + uri + '\")';\n\t\t\t\tif (uri!==currentUri || !paintRule) {\n\t\t\t\t\tlet j = currentUri ? currentUri.indexOf('#') : -1;\n\t\t\t\t\tif (~j) URL.revokeObjectURL(currentUri.substring(0, j));\n\t\t\t\t\thasChanged = true;\n\t\t\t\t}\n\t\t\t\tcurrentUri = uri;\n\t\t\t}\n\n\t\t\tnewValue += token[6];\n\t\t\tindex = token.index + token[0].length;\n\t\t}\n\n\t\tif (hasPaints===false && paintedProperties!=null && paintedProperties[property]!=null) {\n\t\t\tif (!paintRule) paintRule = getPaintRuleForElement(element);\n\t\t\tpaintRule.style.removeProperty(property);\n\t\t\tif (resizeObserver) resizeObserver.unobserve(element);\n\t\t\tif (element.$$paintGeometry) element.$$paintGeometry.live = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tnewValue += value.substring(index);\n\t\tif (hasChanged) {\n\t\t\tif (!paintRule) paintRule = getPaintRuleForElement(element);\n\n\t\t\tif (paintedProperties==null) {\n\t\t\t\tpaintedProperties = element.$$paintedProperties = {};\n\t\t\t}\n\t\t\tpaintedProperties[property] = true;\n\n\t\t\tif (property.substring(0, 10) === 'background' && dpr !== 1) {\n\t\t\t\t// `${geom.width}px ${geom.height}px` `contain`\n\t\t\t\tapplyStyleRule(paintRule.style, 'background-size', `100% 100%`);\n\t\t\t}\n\n\t\t\tif (/mask/.test(property) && dpr !== 1) {\n\t\t\t\tapplyStyleRule(paintRule.style, 'mask-size', 'contain');\n\t\t\t\t// cheat: \"if this is Safari\"\n\t\t\t\tif (USE_CSS_CANVAS_CONTEXT) {\n\t\t\t\t\tapplyStyleRule(paintRule.style, '-webkit-mask-size', 'contain');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `border-color:transparent` in Safari overrides border-image\n\t\t\tif (/border-image/.test(property) && USE_CSS_CANVAS_CONTEXT) {\n\t\t\t\tapplyStyleRule(paintRule.style, 'border-color', 'initial');\n\t\t\t\tapplyStyleRule(paintRule.style, 'image-rendering', 'optimizeSpeed'); // -webkit-crisp-edges\n\t\t\t}\n\n\t\t\tif (urls.length===0) {\n\t\t\t\tapplyStyleRule(paintRule.style, property, newValue);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadImages(urls, applyStyleRule, [paintRule.style, property, newValue]);\n\t\t\t}\n\t\t}\n\t}\n\n\telement.$$paintObservedProperties = observedProperties.length===0 ? null : observedProperties;\n\tlet propertyValues = element.$$paintedPropertyValues = {};\n\tfor (let i=0; i<observedProperties.length; i++) {\n\t\tlet prop = observedProperties[i];\n\t\t// use propertyContainer here to select cached values\n\t\tpropertyValues[prop] = propertiesContainer.getRaw(prop);\n\t}\n\n\tif (element.$$needsOverrides === true) enableOverrides();\n\telement.$$needsOverrides = null;\n}\n\nlet overrideLocks = 0;\nfunction disableOverrides() {\n\tif (!overrideLocks++) overridesStylesheet.disabled = true;\n}\nfunction enableOverrides() {\n\tif (!--overrideLocks) overridesStylesheet.disabled = false;\n}\n\nfunction dataUrlToBlob(dataUrl, name) {\n\tlet bin = atob(dataUrl.split(',')[1]),\n\t\tarr = new Uint8Array(bin.length);\n\tfor (let i=0; i<bin.length; i++) arr[i] = bin.charCodeAt(i);\n\treturn URL.createObjectURL(new Blob([arr])) + '#paint=' + name;\n}\n\nfunction applyStyleRule(style, property, value) {\n\tlet o = bypassStyleHooks;\n\tbypassStyleHooks = true;\n\tstyle.setProperty(property, value, 'important');\n\tbypassStyleHooks = o;\n}\n\n// apply a dimension offset to a base unit value (used for computing border-image sizes)\nfunction applyDimensions(base, dim, omitBase) {\n\tconst r = omitBase ? 0 : base;\n\tlet v = parseFloat(dim);\n\tif (!dim) return r;\n\tif (dim.match('px')) return r + v;\n\tif (dim.match('%')) v /= 100;\n\treturn base * v;\n}\n\n// Compute dimensions from a CSS unit group\nfunction parseCssDimensions(arr) {\n\treturn {\n\t\ttop: arr[0],\n\t\tbottom: arr[2] || arr[0],\n\t\tleft: arr[3] || arr[1] || arr[0],\n\t\tright: arr[1] || arr[0]\n\t};\n}\n\nfunction PaintWorklet() {}\nPaintWorklet.prototype.addModule = function(url) {\n\tlet p, resolve;\n\tif (HAS_PROMISE) {\n\t\tp = new Promise((r) => resolve = r);\n\t}\n\n\tfetchText(url, code => {\n\t\tlet context = {\n\t\t\tregisterPaint(name, Painter) {\n\t\t\t\tregisterPaint(name, Painter, {\n\t\t\t\t\tcontext,\n\t\t\t\t\trealm\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tdefineProperty(context, 'devicePixelRatio', {\n\t\t\tget: getDevicePixelRatio\n\t\t});\n\t\tcontext.self = context;\n\t\tlet parent = styleIsolationFrame.contentDocument && styleIsolationFrame.contentDocument.body || root;\n\t\tlet realm = new Realm(context, parent);\n\n\t\tcode = (this.transpile || String)(code);\n\n\t\trealm.exec(code);\n\t\tif (resolve) resolve();\n\t});\n\n\treturn p;\n};\n\nfunction init() {\n\tlet lock = false;\n\tnew MutationObserver(records => {\n\t\tif (lock===true || overrideLocks) return;\n\t\tlock = true;\n\t\tfor (let i = 0; i < records.length; i++) {\n\t\t\tlet record = records[i], target = record.target, added, removed;\n\t\t\t// Ignore all inline SVG mutations:\n\t\t\tif (target && 'ownerSVGElement' in target) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (record.type === 'childList') {\n\t\t\t\tif ((added = record.addedNodes)) {\n\t\t\t\t\tfor (let j = 0; j < added.length; j++) {\n\t\t\t\t\t\tif (added[j].nodeType === 1) {\n\t\t\t\t\t\t\t// Newly inserted elements can contain entire subtrees\n\t\t\t\t\t\t\t// if constructed before the root is attached. Only the root\n\t\t\t\t\t\t\t// emits a mutation, so we have to visit all children:\n\t\t\t\t\t\t\twalk(added[j], queueUpdate);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((removed = record.removedNodes)) {\n\t\t\t\t\tfor (let j = 0; j < removed.length; j++) {\n\t\t\t\t\t\tif (resizeObserver && removed[j].$$paintGeometry) {\n\t\t\t\t\t\t\tremoved[j].$$paintGeometry.live = false;\n\t\t\t\t\t\t\tif (resizeObserver) resizeObserver.unobserve(removed[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (record.type==='attributes' && target.nodeType === 1) {\n\t\t\t\t// prevent removal of data-css-paint attribute\n\t\t\t\tif (record.attributeName === 'data-css-paint' && record.oldValue && target.$$paintId != null && !target.getAttribute('data-css-paint')) {\n\t\t\t\t\tensurePaintId(target);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\twalk(target, invalidateElementGeometry);\n\t\t\t}\n\t\t}\n\t\tlock = false;\n\t}).observe(document.body, {\n\t\tchildList: true,\n\t\tattributes: true,\n\t\tattributeOldValue: true,\n\t\tsubtree: true\n\t});\n\n\tconst setAttributeDesc = Object.getOwnPropertyDescriptor(Element.prototype, 'setAttribute');\n\tconst oldSetAttribute = setAttributeDesc.value;\n\tsetAttributeDesc.value = function(name, value) {\n\t\tif (name === 'style' && HAS_PAINT.test(value)) {\n\t\t\tvalue = escapePaintRules(value);\n\t\t\tensurePaintId(this);\n\t\t\tthis.$$needsOverrides = true;\n\t\t\tinvalidateElementGeometry(this);\n\t\t}\n\t\treturn oldSetAttribute.call(this, name, value);\n\t};\n\tdefineProperty(Element.prototype, 'setAttribute', setAttributeDesc);\n\n\t// avoid frameworks removing the data-css-paint attribute:\n\tconst removeAttributeDesc = Object.getOwnPropertyDescriptor(Element.prototype, 'removeAttribute');\n\tconst oldRemoveAttribute = removeAttributeDesc.value;\n\tremoveAttributeDesc.value = function(name) {\n\t\tif (name === 'data-css-paint') return;\n\t\treturn oldRemoveAttribute.call(this, name);\n\t};\n\tdefineProperty(Element.prototype, 'removeAttribute', removeAttributeDesc);\n\n\tlet styleDesc = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'style');\n\tconst oldStyleGetter = styleDesc.get;\n\tstyleDesc.set = function(value) {\n\t\tconst style = styleDesc.get.call(this);\n\t\treturn style.cssText = value;\n\t};\n\tstyleDesc.get = function() {\n\t\tconst style = oldStyleGetter.call(this);\n\t\tif (style.ownerElement !== this) {\n\t\t\tdefineProperty(style, 'ownerElement', { value: this });\n\t\t}\n\t\treturn style;\n\t};\n\tdefineProperty(HTMLElement.prototype, 'style', styleDesc);\n\n\t/** @type {PropertyDescriptorMap} */\n\tconst propDescs = {};\n\n\tlet cssTextDesc = Object.getOwnPropertyDescriptor(CSSStyleDeclaration.prototype, 'cssText');\n\tlet oldSet = cssTextDesc.set;\n\tcssTextDesc.set = function (value) {\n\t\tif (!overrideLocks && HAS_PAINT.test(value)) {\n\t\t\tvalue = value && escapePaintRules(value);\n\t\t\tconst owner = this.ownerElement;\n\t\t\tif (owner) {\n\t\t\t\tensurePaintId(owner);\n\t\t\t\towner.$$needsOverrides = true;\n\t\t\t\tinvalidateElementGeometry(owner);\n\t\t\t}\n\t\t}\n\t\treturn oldSet.call(this, value);\n\t};\n\tpropDescs.cssText = cssTextDesc;\n\n\tconst properties = Object.keys((window.CSS2Properties || CSSStyleDeclaration).prototype).filter(m => IMAGE_CSS_PROPERTIES.test(m));\n\tproperties.forEach((prop) => {\n\t\tconst n = prop.replace(/([A-Z])/g, '-$1').toLowerCase();\n\t\tpropDescs[prop] = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget() {\n\t\t\t\tlet pri = this.getPropertyPriority(n);\n\t\t\t\treturn this.getPropertyValue(n) + (pri ? ' !'+pri : '');\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tconst v = String(value).match(/^(.*?)\\s*(?:!\\s*(important)\\s*)?$/);\n\t\t\t\tthis.setProperty(n, v[1], v[2]);\n\t\t\t\treturn this[prop];\n\t\t\t}\n\t\t};\n\t});\n\n\tlet setPropertyDesc = Object.getOwnPropertyDescriptor(CSSStyleDeclaration.prototype, 'setProperty');\n\tlet oldSetProperty = setPropertyDesc.value;\n\tsetPropertyDesc.value = function (name, value, priority) {\n\t\tif (!bypassStyleHooks && !overrideLocks && HAS_PAINT.test(value)) {\n\t\t\tvalue = value && escapePaintRules(value);\n\t\t\tconst owner = this.ownerElement;\n\t\t\tif (owner) {\n\t\t\t\tensurePaintId(owner);\n\t\t\t\towner.$$needsOverrides = true;\n\t\t\t\tinvalidateElementGeometry(owner);\n\t\t\t}\n\t\t}\n\t\toldSetProperty.call(this, name, value, priority);\n\t};\n\tpropDescs.setProperty = setPropertyDesc;\n\n\tObject.defineProperties(CSSStyleDeclaration.prototype, propDescs);\n\tif (window.CSS2Properties) {\n\t\tObject.defineProperties(window.CSS2Properties.prototype, propDescs);\n\t}\n\n\taddEventListener('resize', () => {\n\t\tprocessItem('[data-css-paint]');\n\t});\n\n\tconst OPTS = { passive: true };\n\n\t[\n\t\t'animationiteration',\n\t\t'animationend',\n\t\t'animationstart',\n\t\t'transitionstart',\n\t\t'transitionend',\n\t\t'transitionrun',\n\t\t'transitioncancel',\n\t\t'mouseover',\n\t\t'mouseout',\n\t\t'mousedown',\n\t\t'mouseup',\n\t\t'focus',\n\t\t'blur'\n\t].forEach(event => {\n\t\taddEventListener(event, updateFromEvent, OPTS);\n\t});\n\n\tfunction updateFromEvent(e) {\n\t\tlet t = e.target;\n\t\twhile (t) {\n\t\t\tif (t.nodeType === 1) queueUpdate(t);\n\t\t\tt = t.parentNode;\n\t\t}\n\t}\n\n\tupdate();\n}\n\nif (!supportsPaintWorklet) {\n\ttry {\n\t\tinit();\n\t}\n\tcatch (e) {\n\t}\n}","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function Realm(scope, parentElement) {\n\tlet frame = document.createElement('iframe');\n\tframe.style.cssText = 'position:absolute; left:0; top:-999px; width:1px; height:1px;';\n\tparentElement.appendChild(frame);\n\tlet win = frame.contentWindow,\n\t\tdoc = win.document,\n\t\tvars = 'var window,$hook';\n\tfor (let i in win) {\n\t\tif (!(i in scope) && i!=='eval') {\n\t\t\tvars += ',';\n\t\t\tvars += i;\n\t\t}\n\t}\n\tfor (let i in scope) {\n\t\tvars += ',';\n\t\tvars += i;\n\t\tvars += '=self.';\n\t\tvars += i;\n\t}\n\tlet script = doc.createElement('script');\n\tscript.appendChild(doc.createTextNode(\n\t\t`function $hook(self,console) {\"use strict\";\n\t\t${vars};return function() {return eval(arguments[0])}}`\n\t));\n\tdoc.body.appendChild(script);\n\tthis.exec = win.$hook(scope, console);\n\t// this.destroy = () => { parentElement.removeChild(frame); };\n}\n"],"names":["fetchText","url","callback","let","xhr","XMLHttpRequest","onreadystatechange","readyState","responseText","open","send","defineProperty","obj","name","def","Object","get","paintWorklet","CSS","window","supports","s","property","value","const","el","styleIsolationFrame","contentDocument","body","style","cssText","length","comparison","v","t","n","tokenizer","exec","escape","replace","CSS_PROPERTIES","CSSUnitValue","unit","num","parseFloat","this","isNaN","registerProperty","prototype","toString","valueOf","split","forEach","IMAGE_CSS_PROPERTIES","supportsPaintWorklet","PaintWorklet","enumerable","configurable","GLOBAL_ID","root","document","createElement","documentElement","appendChild","overridesStylesheet","id","$$isPaint","overrideStyles","sheet","testStyles","bypassStyleHooks","EMPTY_ARRAY","HAS_PAINT","USE_CSS_CANVAS_CONTEXT","USE_CSS_ELEMENT","backgroundImage","HAS_PROMISE","Promise","defer","requestAnimationFrame","setTimeout","getDevicePixelRatio","devicePixelRatio","painters","trackedRules","styleSheetCounter","getPainterInstance","painter","inst","bit","instances","Painter","paintRuleWalker","rule","context","css","hasPaint","test","isNew","escapePaintRules","newRule","parentStyleSheet","parent","parentRule","rules","cssRules","index","i","deleteRule","appendRule","insertRule","key","cached","selector","selectorText","getCssText","counters","sheetId","toProcess","push","toRemove","properties","walk","node","iterator","child","firstElementChild","nextElementSibling","update","invalidateAll","sheets","slice","call","styleSheets","ownerNode","e","$$paintid","processNewSheet","walkStyles","processItem","join","stack","current","j","pop","len","type","r","mq","media","mediaText","self","matchMedia","matches","href","processRemoteSheet","childNodes","nodeValue","escaped","createTextNode","remove","removeChild","_","next","processRemoteSheetRules","clearTimeout","timer","onload","onerror","newSheet","prop","item","getPropertyValue","getPropertyPriority","match","pageStyles","currentProperties","currentElement","propertyContainerCache","updateQueue","queueUpdate","element","forceInvalidate","$$paintObservedProperties","$$paintGeometry","live","$$paintPending","indexOf","processUpdateQueue","shouldUpdate","localName","disable","some","$$needsOverrides","disableOverrides","maybeUpdateElement","enableOverrides","sel","querySelectorAll","loadImages","images","args","count","apply","img","Image","src","ensurePaintId","paintId","$$paintId","idCounter","getPaintRuleForElement","paintRule","$$paintRule","Number","getAttribute","setAttribute","text","computed","getComputedStyle","trim","$$paintedPropertyValues","updateElement","styleAttr","invalidateElementGeometry","propertiesContainer","inherits","getRaw","initialValue","syntax","resizeObserver","ResizeObserver","entries","entry","geom","target","width","height","bbox","borderBoxSize","inlineSize","blockSize","paddingX","paddingLeft","paddingRight","paddingY","paddingTop","paddingBottom","Math","round","contentRect","right","left","bottom","top","computedStyle","observedProperties","elementGeometry","clientWidth","clientHeight","observe","dpr","paintedProperties","$$paintedProperties","reg","newValue","urls","hasChanged","hasPaints","token","disableScaling","w","h","parseCssDimensions","borderWidth","outset","applyDimensions","substring","painterName","currentUri","contextOptions","equivalentDpr","scaling","inputProperties","nativePixels","actualWidth","actualHeight","ctx","$$paintContext","cssContextId","canvas","getCSSCanvasContext","clearRect","shouldAppend","display","getContext","imageSmoothingEnabled","scale","save","beginPath","paint","closePath","restore","resetTransform","uri","toDataURL","MSBlobBuilder","dataUrlToBlob","URL","revokeObjectURL","applyStyleRule","removeProperty","unobserve","propertyValues","overrideLocks","disabled","dataUrl","bin","atob","arr","Uint8Array","charCodeAt","createObjectURL","Blob","o","setProperty","base","dim","omitBase","addModule","p","resolve","code","registerPaint","worklet","query","realm","scope","parentElement","frame","win","contentWindow","doc","vars","script","transpile","String","lock","MutationObserver","records","record","added","removed","addedNodes","nodeType","removedNodes","attributeName","oldValue","childList","attributes","attributeOldValue","subtree","setAttributeDesc","getOwnPropertyDescriptor","Element","oldSetAttribute","removeAttributeDesc","oldRemoveAttribute","styleDesc","HTMLElement","oldStyleGetter","set","ownerElement","propDescs","cssTextDesc","CSSStyleDeclaration","oldSet","owner","keys","CSS2Properties","filter","m","toLowerCase","pri","setPropertyDesc","oldSetProperty","priority","defineProperties","addEventListener","OPTS","passive","updateFromEvent","parentNode","event","init"],"version":3,"file":"css-paint-polyfill.97aea7f6.js.map"}