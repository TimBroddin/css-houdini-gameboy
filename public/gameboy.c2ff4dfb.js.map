{"mappings":"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AAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAEtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAEtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAEtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAU,E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","sources":["src/gameboy_core/instance.js","src/gameboy_core/saveState.js","src/gameboy_core/settings.js","src/gameboy_core/gameboy.js","src/gameboy_core/architecture/ffxxDump.js","src/gameboy_core/architecture/OPCODE.js","src/gameboy_core/architecture/CBOPCODE.js","src/gameboy_core/architecture/TICKTable.js","src/gameboy_core/architecture/SecondaryTICKTable.js","src/interface.js","node_modules/@parcel/node-libs-browser/node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","src/gameboy.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-2e238243f572a701.js"],"sourcesContent":["function Instance(ROMImage) {\n\n\t//My added variables--------------\n\tthis.frameDone = false;\n\tthis.currentScreen = []; //this.currentScreenContents;\n\tthis.lastScreen = []; //A copy of the last frame's screen.\n\tthis.partialScreen = {}; //An object with the differences from the last screen.\n\n\n\t//Params, etc...\n\tthis.currentFrame = [];\t\t\t\t\t\t//Array of the most recent frame.\n\tthis.drawContext = null;\t\t\t\t\t// LCD Context\n\tthis.ROMImage = ROMImage;\t\t\t\t\t//The game's ROM. \n\t//CPU Registers and Flags:\n\tthis.registerA = 0x01; \t\t\t\t\t\t//Register A (Accumulator)\n\tthis.FZero = true; \t\t\t\t\t\t\t//Register F  - Result was zero\n\tthis.FSubtract = false;\t\t\t\t\t\t//Register F  - Subtraction was executed\n\tthis.FHalfCarry = true;\t\t\t\t\t\t//Register F  - Half carry or half borrow\n\tthis.FCarry = true;\t\t\t\t\t\t\t//Register F  - Carry or borrow\n\tthis.registerB = 0x00;\t\t\t\t\t\t//Register B\n\tthis.registerC = 0x13;\t\t\t\t\t\t//Register C\n\tthis.registerD = 0x00;\t\t\t\t\t\t//Register D\n\tthis.registerE = 0xD8;\t\t\t\t\t\t//Register E\n\tthis.registersHL = 0x014D;\t\t\t\t\t//Registers H and L combined\n\tthis.stackPointer = 0xFFFE;\t\t\t\t\t//Stack Pointer\n\tthis.programCounter = 0x0100;\t\t\t\t//Program Counter\n\t//Some CPU Emulation State Variables:\n\tthis.CPUCyclesTotal = 0;\t\t\t\t\t//Relative CPU clocking to speed set, rounded appropriately.\n\tthis.CPUCyclesTotalBase = 0;\t\t\t\t//Relative CPU clocking to speed set base.\n\tthis.CPUCyclesTotalCurrent = 0;\t\t\t\t//Relative CPU clocking to speed set, the directly used value.\n\tthis.CPUCyclesTotalRoundoff = 0;\t\t\t//Clocking per iteration rounding catch.\n\tthis.baseCPUCyclesPerIteration\t= 0;\t\t//CPU clocks per iteration at 1x speed.\n\tthis.remainingClocks = 0;\t\t\t\t\t//HALT clocking overrun carry over.\n\tthis.inBootstrap = true;\t\t\t\t\t//Whether we're in the GBC boot ROM.\n\tthis.usedBootROM = false;\t\t\t\t\t//Updated upon ROM loading...\n\tthis.usedGBCBootROM = false;\t\t\t\t//Did we boot to the GBC boot ROM?\n\tthis.halt = false;\t\t\t\t\t\t\t//Has the CPU been suspended until the next interrupt?\n\tthis.skipPCIncrement = false;\t\t\t\t//Did we trip the DMG Halt bug?\n\tthis.stopEmulator = 3;\t\t\t\t\t\t//Has the emulation been paused or a frame has ended?\n\tthis.IME = true;\t\t\t\t\t\t\t//Are interrupts enabled?\n\tthis.IRQLineMatched = 0;\t\t\t\t\t//CPU IRQ assertion.\n\tthis.interruptsRequested = 0;\t\t\t\t//IF Register\n\tthis.interruptsEnabled = 0;\t\t\t\t\t//IE Register\n\tthis.hdmaRunning = false;\t\t\t\t\t//HDMA Transfer Flag - GBC only\n\tthis.CPUTicks = 0;\t\t\t\t\t\t\t//The number of clock cycles emulated.\n\tthis.doubleSpeedShifter = 0;\t\t\t\t//GBC double speed clocking shifter.\n\tthis.JoyPad = 0xFF;\t\t\t\t\t\t\t//Joypad State (two four-bit states actually)\n\tthis.CPUStopped = false;\t\t\t\t\t//CPU STOP status.\n\t//Main RAM, MBC RAM, GBC Main RAM, VRAM, etc.\n\tthis.memoryReader = [];\t\t\t\t\t\t//Array of functions mapped to read back memory\n\tthis.memoryWriter = [];\t\t\t\t\t\t//Array of functions mapped to write to memory\n\tthis.memoryHighReader = [];\t\t\t\t\t//Array of functions mapped to read back 0xFFXX memory\n\tthis.memoryHighWriter = [];\t\t\t\t\t//Array of functions mapped to write to 0xFFXX memory\n\tthis.ROM = [];\t\t\t\t\t\t\t\t//The full ROM file dumped to an array.\n\tthis.memory = [];\t\t\t\t\t\t\t//Main Core Memory\n\tthis.MBCRam = [];\t\t\t\t\t\t\t//Switchable RAM (Used by games for more RAM) for the main memory range 0xA000 - 0xC000.\n\tthis.VRAM = [];\t\t\t\t\t\t\t\t//Extra VRAM bank for GBC.\n\tthis.GBCMemory = [];\t\t\t\t\t\t//GBC main RAM Banks\n\tthis.MBC1Mode = false;\t\t\t\t\t\t//MBC1 Type (4/32, 16/8)\n\tthis.MBCRAMBanksEnabled = false;\t\t\t//MBC RAM Access Control.\n\tthis.currMBCRAMBank = 0;\t\t\t\t\t//MBC Currently Indexed RAM Bank\n\tthis.currMBCRAMBankPosition = -0xA000;\t\t//MBC Position Adder;\n\tthis.cGBC = false;\t\t\t\t\t\t\t//GameBoy Color detection.\n\tthis.gbcRamBank = 1;\t\t\t\t\t\t//Currently Switched GameBoy Color ram bank\n\tthis.gbcRamBankPosition = -0xD000;\t\t\t//GBC RAM offset from address start.\n\tthis.gbcRamBankPositionECHO = -0xF000;\t\t//GBC RAM (ECHO mirroring) offset from address start.\n\tthis.RAMBanks = [0, 1, 2, 4, 16];\t\t\t//Used to map the RAM banks to maximum size the MBC used can do.\n\tthis.ROMBank1offs = 0;\t\t\t\t\t\t//Offset of the ROM bank switching.\n\tthis.currentROMBank = 0;\t\t\t\t\t//The parsed current ROM bank selection.\n\tthis.cartridgeType = 0;\t\t\t\t\t\t//Cartridge Type\n\tthis.name = \"\";\t\t\t\t\t\t\t\t//Name of the game\n\tthis.gameCode = \"\";\t\t\t\t\t\t\t//Game code (Suffix for older games)\n\tthis.fromSaveState = false;\t\t\t\t\t//A boolean to see if this was loaded in as a save state.\n\tthis.savedStateFileName = \"\";\t\t\t\t//When loaded in as a save state, this will not be empty.\n\tthis.STATTracker = 0;\t\t\t\t\t\t//Tracker for STAT triggering.\n\tthis.modeSTAT = 0;\t\t\t\t\t\t\t//The scan line mode (for lines 1-144 it's 2-3-0, for 145-154 it's 1)\n\tthis.spriteCount = 252;\t\t\t\t\t\t//Mode 3 extra clocking counter (Depends on how many sprites are on the current line.).\n\tthis.LYCMatchTriggerSTAT = false;\t\t\t//Should we trigger an interrupt if LY==LYC?\n\tthis.mode2TriggerSTAT = false;\t\t\t\t//Should we trigger an interrupt if in mode 2?\n\tthis.mode1TriggerSTAT = false;\t\t\t\t//Should we trigger an interrupt if in mode 1?\n\tthis.mode0TriggerSTAT = false;\t\t\t\t//Should we trigger an interrupt if in mode 0?\n\tthis.LCDisOn = false;\t\t\t\t\t\t//Is the emulated LCD controller on?\n\tthis.LINECONTROL = [];\t\t\t\t\t\t//Array of functions to handle each scan line we do (onscreen + offscreen)\n\tthis.DISPLAYOFFCONTROL = [function (parentObj) {\n\t\t//Array of line 0 function to handle the LCD controller when it's off (Do nothing!).\n\t}];\n\tthis.LCDCONTROL = null;\t\t\t\t\t\t//Pointer to either LINECONTROL or DISPLAYOFFCONTROL.\n\tthis.initializeLCDController();\t\t\t\t//Compile the LCD controller functions.\n\t//RTC (Real Time Clock for MBC3):\n\tthis.RTCisLatched = false;\n\tthis.latchedSeconds = 0;\t\t\t\t\t//RTC latched seconds.\n\tthis.latchedMinutes = 0;\t\t\t\t\t//RTC latched minutes.\n\tthis.latchedHours = 0;\t\t\t\t\t\t//RTC latched hours.\n\tthis.latchedLDays = 0;\t\t\t\t\t\t//RTC latched lower 8-bits of the day counter.\n\tthis.latchedHDays = 0;\t\t\t\t\t\t//RTC latched high-bit of the day counter.\n\tthis.RTCSeconds = 0;\t\t\t\t\t\t//RTC seconds counter.\n\tthis.RTCMinutes = 0;\t\t\t\t\t\t//RTC minutes counter.\n\tthis.RTCHours = 0;\t\t\t\t\t\t\t//RTC hours counter.\n\tthis.RTCDays = 0;\t\t\t\t\t\t\t//RTC days counter.\n\tthis.RTCDayOverFlow = false;\t\t\t\t//Did the RTC overflow and wrap the day counter?\n\tthis.RTCHALT = false;\t\t\t\t\t\t//Is the RTC allowed to clock up?\n\t//Gyro:\n\tthis.highX = 127;\n\tthis.lowX = 127;\n\tthis.highY = 127;\n\tthis.lowY = 127;\n\t//Sound variables:\n\tthis.audioHandle = null;\t\t\t\t\t\t//XAudioJS handle\n\tthis.numSamplesTotal = 0;\t\t\t\t\t\t//Length of the sound buffers.\n\tthis.dutyLookup = [\t\t\t\t\t\t\t\t//Map the duty values given to ones we can work with.\n\t\t[false, false, false, false, false, false, false, true],\n\t\t[true, false, false, false, false, false, false, true],\n\t\t[true, false, false, false, false, true, true, true],\n\t\t[false, true, true, true, true, true, true, false]\n\t];\n\tthis.bufferContainAmount = 0;\t\t\t\t\t//Buffer maintenance metric.\n\tthis.LSFR15Table = null;\n\tthis.LSFR7Table = null;\n\tthis.noiseSampleTable = null;\n\tthis.initializeAudioStartState();\n\tthis.soundMasterEnabled = false;\t\t\t//As its name implies\n\tthis.channel3PCM = null;\t\t\t\t\t//Channel 3 adjusted sample buffer.\n\t//Vin Shit:\n\tthis.VinLeftChannelMasterVolume = 8;\t\t//Computed post-mixing volume.\n\tthis.VinRightChannelMasterVolume = 8;\t\t//Computed post-mixing volume.\n\t//Channel paths enabled:\n\tthis.leftChannel1 = false;\n\tthis.leftChannel2 = false;\n\tthis.leftChannel3 = false;\n\tthis.leftChannel4 = false;\n\tthis.rightChannel1 = false;\n\tthis.rightChannel2 = false;\n\tthis.rightChannel3 = false;\n\tthis.rightChannel4 = false;\n\tthis.audioClocksUntilNextEvent = 1;\n\tthis.audioClocksUntilNextEventCounter = 1;\n\t//Channel output level caches:\n\tthis.channel1currentSampleLeft = 0;\n\tthis.channel1currentSampleRight = 0;\n\tthis.channel2currentSampleLeft = 0;\n\tthis.channel2currentSampleRight = 0;\n\tthis.channel3currentSampleLeft = 0;\n\tthis.channel3currentSampleRight = 0;\n\tthis.channel4currentSampleLeft = 0;\n\tthis.channel4currentSampleRight = 0;\n\tthis.channel1currentSampleLeftSecondary = 0;\n\tthis.channel1currentSampleRightSecondary = 0;\n\tthis.channel2currentSampleLeftSecondary = 0;\n\tthis.channel2currentSampleRightSecondary = 0;\n\tthis.channel3currentSampleLeftSecondary = 0;\n\tthis.channel3currentSampleRightSecondary = 0;\n\tthis.channel4currentSampleLeftSecondary = 0;\n\tthis.channel4currentSampleRightSecondary = 0;\n\tthis.channel1currentSampleLeftTrimary = 0;\n\tthis.channel1currentSampleRightTrimary = 0;\n\tthis.channel2currentSampleLeftTrimary = 0;\n\tthis.channel2currentSampleRightTrimary = 0;\n\tthis.mixerOutputCache = 0;\n\t//Pre-multipliers to cache some calculations:\n\tthis.emulatorSpeed = 1;\n\tthis.initializeTiming();\n\t//Audio generation counters:\n\tthis.audioTicks = 0;\t\t\t\t//Used to sample the audio system every x CPU instructions.\n\tthis.audioIndex = 0;\t\t\t\t//Used to keep alignment on audio generation.\n\tthis.downsampleInput = 0;\n\tthis.audioDestinationPosition = 0;\t//Used to keep alignment on audio generation.\n\tthis.rollover = 0;\t\t\t\t\t//Used to keep alignment on the number of samples to output (Realign from counter alias).\n\t//Timing Variables\n\tthis.emulatorTicks = 0;\t\t\t\t//Times for how many instructions to execute before ending the loop.\n\tthis.DIVTicks = 56;\t\t\t\t\t//DIV Ticks Counter (Invisible lower 8-bit)\n\tthis.LCDTicks = 60;\t\t\t\t\t//Counter for how many instructions have been executed on a scanline so far.\n\tthis.timerTicks = 0;\t\t\t\t//Counter for the TIMA timer.\n\tthis.TIMAEnabled = false;\t\t\t//Is TIMA enabled?\n\tthis.TACClocker = 1024;\t\t\t\t//Timer Max Ticks\n\tthis.serialTimer = 0;\t\t\t\t//Serial IRQ Timer\n\tthis.serialShiftTimer = 0;\t\t\t//Serial Transfer Shift Timer\n\tthis.serialShiftTimerAllocated = 0;\t//Serial Transfer Shift Timer Refill\n\tthis.IRQEnableDelay = 0;\t\t\t//Are the interrupts on queue to be enabled?\n\tvar dateVar = new Date();\n\tthis.lastIteration = dateVar.getTime();//The last time we iterated the main loop.\n\tdateVar = new Date();\n\tthis.firstIteration = dateVar.getTime();\n\tthis.iterations = 0;\n\tthis.actualScanLine = 0;\t\t\t//Actual scan line...\n\tthis.lastUnrenderedLine = 0;\t\t//Last rendered scan line...\n\tthis.queuedScanLines = 0;\n\tthis.totalLinesPassed = 0;\n\tthis.haltPostClocks = 0;\t\t\t//Post-Halt clocking.\n\t//ROM Cartridge Components:\n\tthis.cMBC1 = false;\t\t\t\t\t//Does the cartridge use MBC1?\n\tthis.cMBC2 = false;\t\t\t\t\t//Does the cartridge use MBC2?\n\tthis.cMBC3 = false;\t\t\t\t\t//Does the cartridge use MBC3?\n\tthis.cMBC5 = false;\t\t\t\t\t//Does the cartridge use MBC5?\n\tthis.cMBC7 = false;\t\t\t\t\t//Does the cartridge use MBC7?\n\tthis.cSRAM = false;\t\t\t\t\t//Does the cartridge use save RAM?\n\tthis.cMMMO1 = false;\t\t\t\t//...\n\tthis.cRUMBLE = false;\t\t\t\t//Does the cartridge use the RUMBLE addressing (modified MBC5)?\n\tthis.cCamera = false;\t\t\t\t//Is the cartridge actually a GameBoy Camera?\n\tthis.cTAMA5 = false;\t\t\t\t//Does the cartridge use TAMA5? (Tamagotchi Cartridge)\n\tthis.cHuC3 = false;\t\t\t\t\t//Does the cartridge use HuC3 (Hudson Soft / modified MBC3)?\n\tthis.cHuC1 = false;\t\t\t\t\t//Does the cartridge use HuC1 (Hudson Soft / modified MBC1)?\n\tthis.cTIMER = false;\t\t\t\t//Does the cartridge have an RTC?\n\tthis.ROMBanks = [\t\t\t\t\t// 1 Bank = 16 KBytes = 256 Kbits\n\t\t2, 4, 8, 16, 32, 64, 128, 256, 512\n\t];\n\tthis.ROMBanks[0x52] = 72;\n\tthis.ROMBanks[0x53] = 80;\n\tthis.ROMBanks[0x54] = 96;\n\tthis.numRAMBanks = 0;\t\t\t\t\t//How many RAM banks were actually allocated?\n\t////Graphics Variables\n\tthis.currVRAMBank = 0;\t\t\t\t\t//Current VRAM bank for GBC.\n\tthis.backgroundX = 0;\t\t\t\t\t//Register SCX (X-Scroll)\n\tthis.backgroundY = 0;\t\t\t\t\t//Register SCY (Y-Scroll)\n\tthis.gfxWindowDisplay = false;\t\t\t//Is the windows enabled?\n\tthis.gfxSpriteShow = false;\t\t\t\t//Are sprites enabled?\n\tthis.gfxSpriteNormalHeight = true;\t\t//Are we doing 8x8 or 8x16 sprites?\n\tthis.bgEnabled = true;\t\t\t\t\t//Is the BG enabled?\n\tthis.BGPriorityEnabled = true;\t\t\t//Can we flag the BG for priority over sprites?\n\tthis.gfxWindowCHRBankPosition = 0;\t\t//The current bank of the character map the window uses.\n\tthis.gfxBackgroundCHRBankPosition = 0;\t//The current bank of the character map the BG uses.\n\tthis.gfxBackgroundBankOffset = 0x80;\t//Fast mapping of the tile numbering/\n\tthis.windowY = 0;\t\t\t\t\t\t//Current Y offset of the window.\n\tthis.windowX = 0;\t\t\t\t\t\t//Current X offset of the window.\n\tthis.drewBlank = 0;\t\t\t\t\t\t//To prevent the repeating of drawing a blank screen.\n\tthis.drewFrame = false;\t\t\t\t\t//Throttle how many draws we can do to once per iteration.\n\tthis.midScanlineOffset = -1;\t\t\t//mid-scanline rendering offset.\n\tthis.pixelEnd = 0;\t\t\t\t\t\t//track the x-coord limit for line rendering (mid-scanline usage).\n\tthis.currentX = 0;\t\t\t\t\t\t//The x-coord we left off at for mid-scanline rendering.\n\t//BG Tile Pointer Caches:\n\tthis.BGCHRBank1 = null;\n\tthis.BGCHRBank2 = null;\n\tthis.BGCHRCurrentBank = null;\n\t//Tile Data Cache:\n\tthis.tileCache = null;\n\t//Palettes:\n\tthis.colors = [0xEFFFDE, 0xADD794, 0x529273, 0x183442];\t\t\t//\"Classic\" GameBoy palette colors.\n\tthis.OBJPalette = null;\n\tthis.BGPalette = null;\n\tthis.gbcOBJRawPalette = null;\n\tthis.gbcBGRawPalette = null;\n\tthis.gbOBJPalette = null;\n\tthis.gbBGPalette = null;\n\tthis.gbcOBJPalette = null;\n\tthis.gbcBGPalette = null;\n\tthis.gbBGColorizedPalette = null;\n\tthis.gbOBJColorizedPalette = null;\n\tthis.cachedBGPaletteConversion = null;\n\tthis.cachedOBJPaletteConversion = null;\n\tthis.updateGBBGPalette = this.updateGBRegularBGPalette;\n\tthis.updateGBOBJPalette = this.updateGBRegularOBJPalette;\n\tthis.colorizedGBPalettes = false;\n\tthis.BGLayerRender = null;\t\t\t//Reference to the BG rendering function.\n\tthis.WindowLayerRender = null;\t\t//Reference to the window rendering function.\n\tthis.SpriteLayerRender = null;\t\t//Reference to the OAM rendering function.\n\tthis.frameBuffer = [];\t\t\t\t//The internal frame-buffer.\n\tthis.swizzledFrame = null;\t\t\t//The secondary gfx buffer that holds the converted RGBA values.\n\tthis.canvasBuffer = null;\t\t\t//imageData handle\n\tthis.pixelStart = 0;\t\t\t\t//Temp variable for holding the current working framebuffer offset.\n\t//Variables used for scaling in JS:\n\tthis.onscreenWidth = this.offscreenWidth = 160;\n\tthis.onscreenHeight = this.offScreenheight = 144;\n\tthis.offscreenRGBCount = this.onscreenWidth * this.onscreenHeight * 4;\n\tthis.resizePathClear = true;\n\t//Initialize the white noise cache tables ahead of time:\n\tthis.intializeWhiteNoise();\n\n}\n\nmodule.exports = Instance;","var saveState = function () {\n\treturn [\n\t\tthis.fromTypedArray(this.ROM),\n\t\tthis.inBootstrap,\n\t\tthis.registerA,\n\t\tthis.FZero,\n\t\tthis.FSubtract,\n\t\tthis.FHalfCarry,\n\t\tthis.FCarry,\n\t\tthis.registerB,\n\t\tthis.registerC,\n\t\tthis.registerD,\n\t\tthis.registerE,\n\t\tthis.registersHL,\n\t\tthis.stackPointer,\n\t\tthis.programCounter,\n\t\tthis.halt,\n\t\tthis.IME,\n\t\tthis.hdmaRunning,\n\t\tthis.CPUTicks,\n\t\tthis.doubleSpeedShifter,\n\t\tthis.fromTypedArray(this.memory),\n\t\tthis.fromTypedArray(this.MBCRam),\n\t\tthis.fromTypedArray(this.VRAM),\n\t\tthis.currVRAMBank,\n\t\tthis.fromTypedArray(this.GBCMemory),\n\t\tthis.MBC1Mode,\n\t\tthis.MBCRAMBanksEnabled,\n\t\tthis.currMBCRAMBank,\n\t\tthis.currMBCRAMBankPosition,\n\t\tthis.cGBC,\n\t\tthis.gbcRamBank,\n\t\tthis.gbcRamBankPosition,\n\t\tthis.ROMBank1offs,\n\t\tthis.currentROMBank,\n\t\tthis.cartridgeType,\n\t\tthis.name,\n\t\tthis.gameCode,\n\t\tthis.modeSTAT,\n\t\tthis.LYCMatchTriggerSTAT,\n\t\tthis.mode2TriggerSTAT,\n\t\tthis.mode1TriggerSTAT,\n\t\tthis.mode0TriggerSTAT,\n\t\tthis.LCDisOn,\n\t\tthis.gfxWindowCHRBankPosition,\n\t\tthis.gfxWindowDisplay,\n\t\tthis.gfxSpriteShow,\n\t\tthis.gfxSpriteNormalHeight,\n\t\tthis.gfxBackgroundCHRBankPosition,\n\t\tthis.gfxBackgroundBankOffset,\n\t\tthis.TIMAEnabled,\n\t\tthis.DIVTicks,\n\t\tthis.LCDTicks,\n\t\tthis.timerTicks,\n\t\tthis.TACClocker,\n\t\tthis.serialTimer,\n\t\tthis.serialShiftTimer,\n\t\tthis.serialShiftTimerAllocated,\n\t\tthis.IRQEnableDelay,\n\t\tthis.lastIteration,\n\t\tthis.cMBC1,\n\t\tthis.cMBC2,\n\t\tthis.cMBC3,\n\t\tthis.cMBC5,\n\t\tthis.cMBC7,\n\t\tthis.cSRAM,\n\t\tthis.cMMMO1,\n\t\tthis.cRUMBLE,\n\t\tthis.cCamera,\n\t\tthis.cTAMA5,\n\t\tthis.cHuC3,\n\t\tthis.cHuC1,\n\t\tthis.drewBlank,\n\t\tthis.fromTypedArray(this.frameBuffer),\n\t\tthis.bgEnabled,\n\t\tthis.BGPriorityEnabled,\n\t\tthis.channel1FrequencyTracker,\n\t\tthis.channel1FrequencyCounter,\n\t\tthis.channel1totalLength,\n\t\tthis.channel1envelopeVolume,\n\t\tthis.channel1envelopeType,\n\t\tthis.channel1envelopeSweeps,\n\t\tthis.channel1envelopeSweepsLast,\n\t\tthis.channel1consecutive,\n\t\tthis.channel1frequency,\n\t\tthis.channel1SweepFault,\n\t\tthis.channel1ShadowFrequency,\n\t\tthis.channel1timeSweep,\n\t\tthis.channel1lastTimeSweep,\n\t\tthis.channel1Swept,\n\t\tthis.channel1frequencySweepDivider,\n\t\tthis.channel1decreaseSweep,\n\t\tthis.channel2FrequencyTracker,\n\t\tthis.channel2FrequencyCounter,\n\t\tthis.channel2totalLength,\n\t\tthis.channel2envelopeVolume,\n\t\tthis.channel2envelopeType,\n\t\tthis.channel2envelopeSweeps,\n\t\tthis.channel2envelopeSweepsLast,\n\t\tthis.channel2consecutive,\n\t\tthis.channel2frequency,\n\t\tthis.channel3canPlay,\n\t\tthis.channel3totalLength,\n\t\tthis.channel3patternType,\n\t\tthis.channel3frequency,\n\t\tthis.channel3consecutive,\n\t\tthis.fromTypedArray(this.channel3PCM),\n\t\tthis.channel4FrequencyPeriod,\n\t\tthis.channel4lastSampleLookup,\n\t\tthis.channel4totalLength,\n\t\tthis.channel4envelopeVolume,\n\t\tthis.channel4currentVolume,\n\t\tthis.channel4envelopeType,\n\t\tthis.channel4envelopeSweeps,\n\t\tthis.channel4envelopeSweepsLast,\n\t\tthis.channel4consecutive,\n\t\tthis.channel4BitRange,\n\t\tthis.soundMasterEnabled,\n\t\tthis.VinLeftChannelMasterVolume,\n\t\tthis.VinRightChannelMasterVolume,\n\t\tthis.leftChannel1,\n\t\tthis.leftChannel2,\n\t\tthis.leftChannel3,\n\t\tthis.leftChannel4,\n\t\tthis.rightChannel1,\n\t\tthis.rightChannel2,\n\t\tthis.rightChannel3,\n\t\tthis.rightChannel4,\n\t\tthis.channel1currentSampleLeft,\n\t\tthis.channel1currentSampleRight,\n\t\tthis.channel2currentSampleLeft,\n\t\tthis.channel2currentSampleRight,\n\t\tthis.channel3currentSampleLeft,\n\t\tthis.channel3currentSampleRight,\n\t\tthis.channel4currentSampleLeft,\n\t\tthis.channel4currentSampleRight,\n\t\tthis.channel1currentSampleLeftSecondary,\n\t\tthis.channel1currentSampleRightSecondary,\n\t\tthis.channel2currentSampleLeftSecondary,\n\t\tthis.channel2currentSampleRightSecondary,\n\t\tthis.channel3currentSampleLeftSecondary,\n\t\tthis.channel3currentSampleRightSecondary,\n\t\tthis.channel4currentSampleLeftSecondary,\n\t\tthis.channel4currentSampleRightSecondary,\n\t\tthis.channel1currentSampleLeftTrimary,\n\t\tthis.channel1currentSampleRightTrimary,\n\t\tthis.channel2currentSampleLeftTrimary,\n\t\tthis.channel2currentSampleRightTrimary,\n\t\tthis.mixerOutputCache,\n\t\tthis.channel1DutyTracker,\n\t\tthis.channel1CachedDuty,\n\t\tthis.channel2DutyTracker,\n\t\tthis.channel2CachedDuty,\n\t\tthis.channel1Enabled,\n\t\tthis.channel2Enabled,\n\t\tthis.channel3Enabled,\n\t\tthis.channel4Enabled,\n\t\tthis.sequencerClocks,\n\t\tthis.sequencePosition,\n\t\tthis.channel3Counter,\n\t\tthis.channel4Counter,\n\t\tthis.cachedChannel3Sample,\n\t\tthis.cachedChannel4Sample,\n\t\tthis.channel3FrequencyPeriod,\n\t\tthis.channel3lastSampleLookup,\n\t\tthis.actualScanLine,\n\t\tthis.lastUnrenderedLine,\n\t\tthis.queuedScanLines,\n\t\tthis.RTCisLatched,\n\t\tthis.latchedSeconds,\n\t\tthis.latchedMinutes,\n\t\tthis.latchedHours,\n\t\tthis.latchedLDays,\n\t\tthis.latchedHDays,\n\t\tthis.RTCSeconds,\n\t\tthis.RTCMinutes,\n\t\tthis.RTCHours,\n\t\tthis.RTCDays,\n\t\tthis.RTCDayOverFlow,\n\t\tthis.RTCHALT,\n\t\tthis.usedBootROM,\n\t\tthis.skipPCIncrement,\n\t\tthis.STATTracker,\n\t\tthis.gbcRamBankPositionECHO,\n\t\tthis.numRAMBanks,\n\t\tthis.windowY,\n\t\tthis.windowX,\n\t\tthis.fromTypedArray(this.gbcOBJRawPalette),\n\t\tthis.fromTypedArray(this.gbcBGRawPalette),\n\t\tthis.fromTypedArray(this.gbOBJPalette),\n\t\tthis.fromTypedArray(this.gbBGPalette),\n\t\tthis.fromTypedArray(this.gbcOBJPalette),\n\t\tthis.fromTypedArray(this.gbcBGPalette),\n\t\tthis.fromTypedArray(this.gbBGColorizedPalette),\n\t\tthis.fromTypedArray(this.gbOBJColorizedPalette),\n\t\tthis.fromTypedArray(this.cachedBGPaletteConversion),\n\t\tthis.fromTypedArray(this.cachedOBJPaletteConversion),\n\t\tthis.fromTypedArray(this.BGCHRBank1),\n\t\tthis.fromTypedArray(this.BGCHRBank2),\n\t\tthis.haltPostClocks,\n\t\tthis.interruptsRequested,\n\t\tthis.interruptsEnabled,\n\t\tthis.remainingClocks,\n\t\tthis.colorizedGBPalettes,\n\t\tthis.backgroundY,\n\t\tthis.backgroundX,\n\t\tthis.CPUStopped,\n\t\tthis.audioClocksUntilNextEvent,\n\t\tthis.audioClocksUntilNextEventCounter\n\t];\n}\nvar returnFromState = function (returnedFrom) {\n\tvar index = 0;\n\tvar state = returnedFrom.slice(0);\n\tthis.ROM = this.toTypedArray(state[index++], \"uint8\");\n\tthis.ROMBankEdge = Math.floor(this.ROM.length / 0x4000);\n\tthis.inBootstrap = state[index++];\n\tthis.registerA = state[index++];\n\tthis.FZero = state[index++];\n\tthis.FSubtract = state[index++];\n\tthis.FHalfCarry = state[index++];\n\tthis.FCarry = state[index++];\n\tthis.registerB = state[index++];\n\tthis.registerC = state[index++];\n\tthis.registerD = state[index++];\n\tthis.registerE = state[index++];\n\tthis.registersHL = state[index++];\n\tthis.stackPointer = state[index++];\n\tthis.programCounter = state[index++];\n\tthis.halt = state[index++];\n\tthis.IME = state[index++];\n\tthis.hdmaRunning = state[index++];\n\tthis.CPUTicks = state[index++];\n\tthis.doubleSpeedShifter = state[index++];\n\tthis.memory = this.toTypedArray(state[index++], \"uint8\");\n\tthis.MBCRam = this.toTypedArray(state[index++], \"uint8\");\n\tthis.VRAM = this.toTypedArray(state[index++], \"uint8\");\n\tthis.currVRAMBank = state[index++];\n\tthis.GBCMemory = this.toTypedArray(state[index++], \"uint8\");\n\tthis.MBC1Mode = state[index++];\n\tthis.MBCRAMBanksEnabled = state[index++];\n\tthis.currMBCRAMBank = state[index++];\n\tthis.currMBCRAMBankPosition = state[index++];\n\tthis.cGBC = state[index++];\n\tthis.gbcRamBank = state[index++];\n\tthis.gbcRamBankPosition = state[index++];\n\tthis.ROMBank1offs = state[index++];\n\tthis.currentROMBank = state[index++];\n\tthis.cartridgeType = state[index++];\n\tthis.name = state[index++];\n\tthis.gameCode = state[index++];\n\tthis.modeSTAT = state[index++];\n\tthis.LYCMatchTriggerSTAT = state[index++];\n\tthis.mode2TriggerSTAT = state[index++];\n\tthis.mode1TriggerSTAT = state[index++];\n\tthis.mode0TriggerSTAT = state[index++];\n\tthis.LCDisOn = state[index++];\n\tthis.gfxWindowCHRBankPosition = state[index++];\n\tthis.gfxWindowDisplay = state[index++];\n\tthis.gfxSpriteShow = state[index++];\n\tthis.gfxSpriteNormalHeight = state[index++];\n\tthis.gfxBackgroundCHRBankPosition = state[index++];\n\tthis.gfxBackgroundBankOffset = state[index++];\n\tthis.TIMAEnabled = state[index++];\n\tthis.DIVTicks = state[index++];\n\tthis.LCDTicks = state[index++];\n\tthis.timerTicks = state[index++];\n\tthis.TACClocker = state[index++];\n\tthis.serialTimer = state[index++];\n\tthis.serialShiftTimer = state[index++];\n\tthis.serialShiftTimerAllocated = state[index++];\n\tthis.IRQEnableDelay = state[index++];\n\tthis.lastIteration = state[index++];\n\tthis.cMBC1 = state[index++];\n\tthis.cMBC2 = state[index++];\n\tthis.cMBC3 = state[index++];\n\tthis.cMBC5 = state[index++];\n\tthis.cMBC7 = state[index++];\n\tthis.cSRAM = state[index++];\n\tthis.cMMMO1 = state[index++];\n\tthis.cRUMBLE = state[index++];\n\tthis.cCamera = state[index++];\n\tthis.cTAMA5 = state[index++];\n\tthis.cHuC3 = state[index++];\n\tthis.cHuC1 = state[index++];\n\tthis.drewBlank = state[index++];\n\tthis.frameBuffer = this.toTypedArray(state[index++], \"int32\");\n\tthis.bgEnabled = state[index++];\n\tthis.BGPriorityEnabled = state[index++];\n\tthis.channel1FrequencyTracker = state[index++];\n\tthis.channel1FrequencyCounter = state[index++];\n\tthis.channel1totalLength = state[index++];\n\tthis.channel1envelopeVolume = state[index++];\n\tthis.channel1envelopeType = state[index++];\n\tthis.channel1envelopeSweeps = state[index++];\n\tthis.channel1envelopeSweepsLast = state[index++];\n\tthis.channel1consecutive = state[index++];\n\tthis.channel1frequency = state[index++];\n\tthis.channel1SweepFault = state[index++];\n\tthis.channel1ShadowFrequency = state[index++];\n\tthis.channel1timeSweep = state[index++];\n\tthis.channel1lastTimeSweep = state[index++];\n\tthis.channel1Swept = state[index++];\n\tthis.channel1frequencySweepDivider = state[index++];\n\tthis.channel1decreaseSweep = state[index++];\n\tthis.channel2FrequencyTracker = state[index++];\n\tthis.channel2FrequencyCounter = state[index++];\n\tthis.channel2totalLength = state[index++];\n\tthis.channel2envelopeVolume = state[index++];\n\tthis.channel2envelopeType = state[index++];\n\tthis.channel2envelopeSweeps = state[index++];\n\tthis.channel2envelopeSweepsLast = state[index++];\n\tthis.channel2consecutive = state[index++];\n\tthis.channel2frequency = state[index++];\n\tthis.channel3canPlay = state[index++];\n\tthis.channel3totalLength = state[index++];\n\tthis.channel3patternType = state[index++];\n\tthis.channel3frequency = state[index++];\n\tthis.channel3consecutive = state[index++];\n\tthis.channel3PCM = this.toTypedArray(state[index++], \"int8\");\n\tthis.channel4FrequencyPeriod = state[index++];\n\tthis.channel4lastSampleLookup = state[index++];\n\tthis.channel4totalLength = state[index++];\n\tthis.channel4envelopeVolume = state[index++];\n\tthis.channel4currentVolume = state[index++];\n\tthis.channel4envelopeType = state[index++];\n\tthis.channel4envelopeSweeps = state[index++];\n\tthis.channel4envelopeSweepsLast = state[index++];\n\tthis.channel4consecutive = state[index++];\n\tthis.channel4BitRange = state[index++];\n\tthis.soundMasterEnabled = state[index++];\n\tthis.VinLeftChannelMasterVolume = state[index++];\n\tthis.VinRightChannelMasterVolume = state[index++];\n\tthis.leftChannel1 = state[index++];\n\tthis.leftChannel2 = state[index++];\n\tthis.leftChannel3 = state[index++];\n\tthis.leftChannel4 = state[index++];\n\tthis.rightChannel1 = state[index++];\n\tthis.rightChannel2 = state[index++];\n\tthis.rightChannel3 = state[index++];\n\tthis.rightChannel4 = state[index++];\n\tthis.channel1currentSampleLeft = state[index++];\n\tthis.channel1currentSampleRight = state[index++];\n\tthis.channel2currentSampleLeft = state[index++];\n\tthis.channel2currentSampleRight = state[index++];\n\tthis.channel3currentSampleLeft = state[index++];\n\tthis.channel3currentSampleRight = state[index++];\n\tthis.channel4currentSampleLeft = state[index++];\n\tthis.channel4currentSampleRight = state[index++];\n\tthis.channel1currentSampleLeftSecondary = state[index++];\n\tthis.channel1currentSampleRightSecondary = state[index++];\n\tthis.channel2currentSampleLeftSecondary = state[index++];\n\tthis.channel2currentSampleRightSecondary = state[index++];\n\tthis.channel3currentSampleLeftSecondary = state[index++];\n\tthis.channel3currentSampleRightSecondary = state[index++];\n\tthis.channel4currentSampleLeftSecondary = state[index++];\n\tthis.channel4currentSampleRightSecondary = state[index++];\n\tthis.channel1currentSampleLeftTrimary = state[index++];\n\tthis.channel1currentSampleRightTrimary = state[index++];\n\tthis.channel2currentSampleLeftTrimary = state[index++];\n\tthis.channel2currentSampleRightTrimary = state[index++];\n\tthis.mixerOutputCache = state[index++];\n\tthis.channel1DutyTracker = state[index++];\n\tthis.channel1CachedDuty = state[index++];\n\tthis.channel2DutyTracker = state[index++];\n\tthis.channel2CachedDuty = state[index++];\n\tthis.channel1Enabled = state[index++];\n\tthis.channel2Enabled = state[index++];\n\tthis.channel3Enabled = state[index++];\n\tthis.channel4Enabled = state[index++];\n\tthis.sequencerClocks = state[index++];\n\tthis.sequencePosition = state[index++];\n\tthis.channel3Counter = state[index++];\n\tthis.channel4Counter = state[index++];\n\tthis.cachedChannel3Sample = state[index++];\n\tthis.cachedChannel4Sample = state[index++];\n\tthis.channel3FrequencyPeriod = state[index++];\n\tthis.channel3lastSampleLookup = state[index++];\n\tthis.actualScanLine = state[index++];\n\tthis.lastUnrenderedLine = state[index++];\n\tthis.queuedScanLines = state[index++];\n\tthis.RTCisLatched = state[index++];\n\tthis.latchedSeconds = state[index++];\n\tthis.latchedMinutes = state[index++];\n\tthis.latchedHours = state[index++];\n\tthis.latchedLDays = state[index++];\n\tthis.latchedHDays = state[index++];\n\tthis.RTCSeconds = state[index++];\n\tthis.RTCMinutes = state[index++];\n\tthis.RTCHours = state[index++];\n\tthis.RTCDays = state[index++];\n\tthis.RTCDayOverFlow = state[index++];\n\tthis.RTCHALT = state[index++];\n\tthis.usedBootROM = state[index++];\n\tthis.skipPCIncrement = state[index++];\n\tthis.STATTracker = state[index++];\n\tthis.gbcRamBankPositionECHO = state[index++];\n\tthis.numRAMBanks = state[index++];\n\tthis.windowY = state[index++];\n\tthis.windowX = state[index++];\n\tthis.gbcOBJRawPalette = this.toTypedArray(state[index++], \"uint8\");\n\tthis.gbcBGRawPalette = this.toTypedArray(state[index++], \"uint8\");\n\tthis.gbOBJPalette = this.toTypedArray(state[index++], \"int32\");\n\tthis.gbBGPalette = this.toTypedArray(state[index++], \"int32\");\n\tthis.gbcOBJPalette = this.toTypedArray(state[index++], \"int32\");\n\tthis.gbcBGPalette = this.toTypedArray(state[index++], \"int32\");\n\tthis.gbBGColorizedPalette = this.toTypedArray(state[index++], \"int32\");\n\tthis.gbOBJColorizedPalette = this.toTypedArray(state[index++], \"int32\");\n\tthis.cachedBGPaletteConversion = this.toTypedArray(state[index++], \"int32\");\n\tthis.cachedOBJPaletteConversion = this.toTypedArray(state[index++], \"int32\");\n\tthis.BGCHRBank1 = this.toTypedArray(state[index++], \"uint8\");\n\tthis.BGCHRBank2 = this.toTypedArray(state[index++], \"uint8\");\n\tthis.haltPostClocks = state[index++];\n\tthis.interruptsRequested = state[index++];\n\tthis.interruptsEnabled = state[index++];\n\tthis.checkIRQMatching();\n\tthis.remainingClocks = state[index++];\n\tthis.colorizedGBPalettes = state[index++];\n\tthis.backgroundY = state[index++];\n\tthis.backgroundX = state[index++];\n\tthis.CPUStopped = state[index++];\n\tthis.audioClocksUntilNextEvent = state[index++];\n\tthis.audioClocksUntilNextEventCounter = state[index];\n\tthis.fromSaveState = true;\n\tthis.TICKTable = this.toTypedArray(this.TICKTable, \"uint8\");\n\tthis.SecondaryTICKTable = this.toTypedArray(this.SecondaryTICKTable, \"uint8\");\n\tthis.initializeReferencesFromSaveState();\n\tthis.memoryReadJumpCompile();\n\tthis.memoryWriteJumpCompile();\n\tthis.initLCD();\n\tthis.initSound();\n\tthis.noiseSampleTable = (this.channel4BitRange == 0x7FFF) ? this.LSFR15Table : this.LSFR7Table;\n\tthis.channel4VolumeShifter = (this.channel4BitRange == 0x7FFF) ? 15 : 7;\n}\n\nmodule.exports.saveState = saveState;\nmodule.exports.returnFromState = returnFromState;","var settings = [\t\t\t\t\t\t//Some settings.\n\t  true,//false, \t\t\t\t\t\t\t\t//Turn on sound.\n\ttrue,\t\t\t\t\t\t\t\t//Boot with boot ROM first?\n\tfalse,\t\t\t\t\t\t\t\t//Give priority to GameBoy mode\n\t1,\t\t\t\t\t\t\t\t\t//Volume level set.\n\ttrue,\t\t\t\t\t\t\t\t//Colorize GB mode?\n\tfalse,\t\t\t\t\t\t\t\t//Disallow typed arrays?\n\t8,\t\t\t\t\t\t\t\t\t//Interval for the emulator loop.\n\t10,\t\t\t\t\t\t\t\t\t//Audio buffer minimum span amount over x interpreter iterations.\n\t20,\t\t\t\t\t\t\t\t\t//Audio buffer maximum span amount over x interpreter iterations.\n\tfalse,\t\t\t\t\t\t\t\t//Override to allow for MBC1 instead of ROM only (compatibility for broken 3rd-party cartridges).\n\tfalse,\t\t\t\t\t\t\t\t//Override MBC RAM disabling and always allow reading and writing to the banks.\n\tfalse,\t\t\t\t\t\t\t\t//Use the GameBoy boot ROM instead of the GameBoy Color boot ROM.\n\tfalse,\t\t\t\t\t\t\t\t//Scale the canvas in JS, or let the browser scale the canvas?\n\ttrue,\t\t\t\t\t\t\t\t//Use image smoothing based scaling?\n    [true, true, true, true]            //User controlled channel enables.\n];\n\nmodule.exports = settings;\n","\"use strict\";\n/*\n * JavaScript GameBoy Color Emulator\n * Copyright (C) 2010 - 2012 Grant Galitz\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * version 2 as published by the Free Software Foundation.\n * The full license is available at http://www.gnu.org/licenses/gpl.html\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n */\nvar Instance = require(\"./instance.js\");\nvar settings = require(\"./settings.js\");\nvar saving = require(\"./saveState.js\");\n\n//I need to mock a whole bunch of stuff on top of this.\n//var XAudioServer = require('./audio/XAudioServer.js');\n\n//TODO: Fix and reimplement missing function.\nfunction cout() { };\nfunction pause() { };\n\nfunction GameBoyCore(ROMImage) {\n    Instance.call(this, ROMImage);\n    this.ROMImageIsString = 'string' == typeof ROMImage;\n}\n\nGameBoyCore.prototype = {\n    constructor: GameBoyCore,\n\n    //-----------------ARCHITECTURE-------------------------\n    GBBOOTROM : [], //Add 256 byte boot rom here if you are going to use it.\n    GBCBOOTROM : [], //Add 2048 byte boot rom here if you are going to use it.\n    ffxxDump : require('./architecture/ffxxDump.js'),\n    OPCODE : require('./architecture/OPCODE.js'),\n    CBOPCODE : require('./architecture/CBOPCODE.js'),\n    TICKTable : require('./architecture/TICKTable.js'),\n    SecondaryTICKTable : require('./architecture/SecondaryTICKTable.js'),\n    //-------------------------------------------------------\n\n\n    //------------SAVE/LOAD----------------------------------\n\n    saveState : saving.saveState,\n    saving : saving.returnFromState,\n\n    saveSRAMState : function () {\n        if (!this.cBATT || this.MBCRam.length == 0) {\n            return []; //No bettery backup...\n        }\n\n        return this.fromTypedArray(this.MBCRam);\n    },\n\n    saveRTCState : function () {\n        if (!this.cTIMER) {\n            return []; //No battery backup\n        }\n\n        //Return the MBC RAM for backup...\n        return [\n            this.lastIteration,\n            this.RTCisLatched,\n            this.latchedSeconds,\n            this.latchedMinutes,\n            this.latchedHours,\n            this.latchedLDays,\n            this.latchedHDays,\n            this.RTCSeconds,\n            this.RTCMinutes,\n            this.RTCHours,\n            this.RTCDays,\n            this.RTCDayOverFlow,\n            this.RTCHALT\n        ];\n    }\n};\n\n\nGameBoyCore.prototype.returnFromRTCState = function () {\n    if (typeof this.openRTC == \"function\" && this.cTIMER) {\n        var rtcData = this.openRTC(this.name);\n        var index = 0;\n        this.lastIteration = rtcData[index++];\n        this.RTCisLatched = rtcData[index++];\n        this.latchedSeconds = rtcData[index++];\n        this.latchedMinutes = rtcData[index++];\n        this.latchedHours = rtcData[index++];\n        this.latchedLDays = rtcData[index++];\n        this.latchedHDays = rtcData[index++];\n        this.RTCSeconds = rtcData[index++];\n        this.RTCMinutes = rtcData[index++];\n        this.RTCHours = rtcData[index++];\n        this.RTCDays = rtcData[index++];\n        this.RTCDayOverFlow = rtcData[index++];\n        this.RTCHALT = rtcData[index];\n    }\n};\n\nGameBoyCore.prototype.start = function () {\n    this.initMemory();  //Write the startup memory.\n    this.ROMLoad();     //Load the ROM into memory and get cartridge information from it.\n    this.initLCD();     //Initialize the graphics.\n    this.initSound(); //Sound object initialization. Optional.\n    this.run();         //Start the emulation.\n}\nGameBoyCore.prototype.initMemory = function () {\n    //Initialize the RAM:\n    this.memory = this.getTypedArray(0x10000, 0, \"uint8\");\n    this.frameBuffer = this.getTypedArray(23040, 0xF8F8F8, \"int32\");\n    this.BGCHRBank1 = this.getTypedArray(0x800, 0, \"uint8\");\n    this.TICKTable = this.toTypedArray(this.TICKTable, \"uint8\");\n    this.SecondaryTICKTable = this.toTypedArray(this.SecondaryTICKTable, \"uint8\");\n    this.channel3PCM = this.getTypedArray(0x20, 0, \"int8\");\n}\n\nGameBoyCore.prototype.generateCacheArray = function (tileAmount) {\n    var tileArray = [];\n    var tileNumber = 0;\n    while (tileNumber < tileAmount) {\n        tileArray[tileNumber++] = this.getTypedArray(64, 0, \"uint8\");\n    }\n    return tileArray;\n}\nGameBoyCore.prototype.initSkipBootstrap = function () {\n    //Fill in the boot ROM set register values\n    //Default values to the GB boot ROM values, then fill in the GBC boot ROM values after ROM loading\n    var index = 0xFF;\n    while (index >= 0) {\n        if (index >= 0x30 && index < 0x40) {\n            this.memoryWrite(0xFF00 | index, this.ffxxDump[index]);\n        }\n        else {\n            switch (index) {\n                case 0x00:\n                case 0x01:\n                case 0x02:\n                case 0x05:\n                case 0x07:\n                case 0x0F:\n                case 0xFF:\n                    this.memoryWrite(0xFF00 | index, this.ffxxDump[index]);\n                    break;\n                default:\n                    this.memory[0xFF00 | index] = this.ffxxDump[index];\n            }\n        }\n        --index;\n    }\n    if (this.cGBC) {\n        this.memory[0xFF6C] = 0xFE;\n        this.memory[0xFF74] = 0xFE;\n    }\n    else {\n        this.memory[0xFF48] = 0xFF;\n        this.memory[0xFF49] = 0xFF;\n        this.memory[0xFF6C] = 0xFF;\n        this.memory[0xFF74] = 0xFF;\n    }\n    //Start as an unset device:\n    cout(\"Starting without the GBC boot ROM.\", 0);\n    this.registerA = (this.cGBC) ? 0x11 : 0x1;\n    this.registerB = 0;\n    this.registerC = 0x13;\n    this.registerD = 0;\n    this.registerE = 0xD8;\n    this.FZero = true;\n    this.FSubtract = false;\n    this.FHalfCarry = true;\n    this.FCarry = true;\n    this.registersHL = 0x014D;\n    this.LCDCONTROL = this.LINECONTROL;\n    this.IME = false;\n    this.IRQLineMatched = 0;\n    this.interruptsRequested = 225;\n    this.interruptsEnabled = 0;\n    this.hdmaRunning = false;\n    this.CPUTicks = 12;\n    this.STATTracker = 0;\n    this.modeSTAT = 1;\n    this.spriteCount = 252;\n    this.LYCMatchTriggerSTAT = false;\n    this.mode2TriggerSTAT = false;\n    this.mode1TriggerSTAT = false;\n    this.mode0TriggerSTAT = false;\n    this.LCDisOn = true;\n    this.channel1FrequencyTracker = 0x2000;\n    this.channel1DutyTracker = 0;\n    this.channel1CachedDuty = this.dutyLookup[2];\n    this.channel1totalLength = 0;\n    this.channel1envelopeVolume = 0;\n    this.channel1envelopeType = false;\n    this.channel1envelopeSweeps = 0;\n    this.channel1envelopeSweepsLast = 0;\n    this.channel1consecutive = true;\n    this.channel1frequency = 1985;\n    this.channel1SweepFault = true;\n    this.channel1ShadowFrequency = 1985;\n    this.channel1timeSweep = 1;\n    this.channel1lastTimeSweep = 0;\n    this.channel1Swept = false;\n    this.channel1frequencySweepDivider = 0;\n    this.channel1decreaseSweep = false;\n    this.channel2FrequencyTracker = 0x2000;\n    this.channel2DutyTracker = 0;\n    this.channel2CachedDuty = this.dutyLookup[2];\n    this.channel2totalLength = 0;\n    this.channel2envelopeVolume = 0;\n    this.channel2envelopeType = false;\n    this.channel2envelopeSweeps = 0;\n    this.channel2envelopeSweepsLast = 0;\n    this.channel2consecutive = true;\n    this.channel2frequency = 0;\n    this.channel3canPlay = false;\n    this.channel3totalLength = 0;\n    this.channel3patternType = 4;\n    this.channel3frequency = 0;\n    this.channel3consecutive = true;\n    this.channel3Counter = 0x418;\n    this.channel4FrequencyPeriod = 8;\n    this.channel4totalLength = 0;\n    this.channel4envelopeVolume = 0;\n    this.channel4currentVolume = 0;\n    this.channel4envelopeType = false;\n    this.channel4envelopeSweeps = 0;\n    this.channel4envelopeSweepsLast = 0;\n    this.channel4consecutive = true;\n    this.channel4BitRange = 0x7FFF;\n    this.channel4VolumeShifter = 15;\n    this.channel1FrequencyCounter = 0x200;\n    this.channel2FrequencyCounter = 0x200;\n    this.channel3Counter = 0x800;\n    this.channel3FrequencyPeriod = 0x800;\n    this.channel3lastSampleLookup = 0;\n    this.channel4lastSampleLookup = 0;\n    this.VinLeftChannelMasterVolume = 8;\n    this.VinRightChannelMasterVolume = 8;\n    this.soundMasterEnabled = true;\n    this.leftChannel1 = true;\n    this.leftChannel2 = true;\n    this.leftChannel3 = true;\n    this.leftChannel4 = true;\n    this.rightChannel1 = true;\n    this.rightChannel2 = true;\n    this.rightChannel3 = false;\n    this.rightChannel4 = false;\n    this.DIVTicks = 27044;\n    this.LCDTicks = 160;\n    this.timerTicks = 0;\n    this.TIMAEnabled = false;\n    this.TACClocker = 1024;\n    this.serialTimer = 0;\n    this.serialShiftTimer = 0;\n    this.serialShiftTimerAllocated = 0;\n    this.IRQEnableDelay = 0;\n    this.actualScanLine = 144;\n    this.lastUnrenderedLine = 0;\n    this.gfxWindowDisplay = false;\n    this.gfxSpriteShow = false;\n    this.gfxSpriteNormalHeight = true;\n    this.bgEnabled = true;\n    this.BGPriorityEnabled = true;\n    this.gfxWindowCHRBankPosition = 0;\n    this.gfxBackgroundCHRBankPosition = 0;\n    this.gfxBackgroundBankOffset = 0;\n    this.windowY = 0;\n    this.windowX = 0;\n    this.drewBlank = 0;\n    this.midScanlineOffset = -1;\n    this.currentX = 0;\n}\nGameBoyCore.prototype.initBootstrap = function () {\n    //Start as an unset device:\n    cout(\"Starting the selected boot ROM.\", 0);\n    this.programCounter = 0;\n    this.stackPointer = 0;\n    this.IME = false;\n    this.LCDTicks = 0;\n    this.DIVTicks = 0;\n    this.registerA = 0;\n    this.registerB = 0;\n    this.registerC = 0;\n    this.registerD = 0;\n    this.registerE = 0;\n    this.FZero = this.FSubtract = this.FHalfCarry = this.FCarry = false;\n    this.registersHL = 0;\n    this.leftChannel1 = false;\n    this.leftChannel2 = false;\n    this.leftChannel3 = false;\n    this.leftChannel4 = false;\n    this.rightChannel1 = false;\n    this.rightChannel2 = false;\n    this.rightChannel3 = false;\n    this.rightChannel4 = false;\n    this.channel2frequency = this.channel1frequency = 0;\n    this.channel4consecutive = this.channel2consecutive = this.channel1consecutive = false;\n    this.VinLeftChannelMasterVolume = 8;\n    this.VinRightChannelMasterVolume = 8;\n    this.memory[0xFF00] = 0xF;  //Set the joypad state.\n}\nGameBoyCore.prototype.ROMLoad = function () {\n  //Load the first two ROM banks (0x0000 - 0x7FFF) into regular gameboy memory:\n  this.ROM = [];\n  this.usedBootROM = settings[1] && ((!settings[11] && this.GBCBOOTROM.length == 0x800) || (settings[11] && this.GBBOOTROM.length == 0x100));\n  var maxLength = this.ROMImage.length;\n  if (maxLength < 0x4000) {\n    throw(new Error(\"ROM image size too small.\"));\n  }\n  this.ROM = this.getTypedArray(maxLength, 0, \"uint8\");\n  var romIndex = 0;\n  if (this.usedBootROM) {\n    if (!settings[11]) {\n      //Patch in the GBC boot ROM into the memory map:\n      if (this.ROMImageIsString) {\n        for (; romIndex < 0x100; ++romIndex) {\n          this.memory[romIndex] = this.GBCBOOTROM[romIndex];                      //Load in the GameBoy Color BOOT ROM.\n          this.ROM[romIndex] = (this.ROMImage.charCodeAt(romIndex) & 0xFF);             //Decode the ROM binary for the switch out.\n        }\n        for (; romIndex < 0x200; ++romIndex) {\n          this.memory[romIndex] = this.ROM[romIndex] = (this.ROMImage.charCodeAt(romIndex) & 0xFF); //Load in the game ROM.\n        }\n        for (; romIndex < 0x900; ++romIndex) {\n          this.memory[romIndex] = this.GBCBOOTROM[romIndex - 0x100];                  //Load in the GameBoy Color BOOT ROM.\n          this.ROM[romIndex] = (this.ROMImage.charCodeAt(romIndex) & 0xFF);             //Decode the ROM binary for the switch out.\n        }\n      } else {\n        for (; romIndex < 0x100; ++romIndex) {\n          this.memory[romIndex] = this.GBCBOOTROM[romIndex];                      //Load in the GameBoy Color BOOT ROM.\n          this.ROM[romIndex] = this.ROMImage[romIndex];             //Decode the ROM binary for the switch out.\n        }\n        for (; romIndex < 0x200; ++romIndex) {\n          this.memory[romIndex] = this.ROM[romIndex] = this.ROMImage[romIndex]; //Load in the game ROM.\n        }\n        for (; romIndex < 0x900; ++romIndex) {\n          this.memory[romIndex] = this.GBCBOOTROM[romIndex - 0x100];                  //Load in the GameBoy Color BOOT ROM.\n          this.ROM[romIndex] = this.ROMImage[romIndex];             //Decode the ROM binary for the switch out.\n        }\n      }\n\n      this.usedGBCBootROM = true;\n    }\n    else {\n      if (this.ROMImageIsString) {\n        //Patch in the GBC boot ROM into the memory map:\n        for (; romIndex < 0x100; ++romIndex) {\n          this.memory[romIndex] = this.GBBOOTROM[romIndex];                     //Load in the GameBoy Color BOOT ROM.\n          this.ROM[romIndex] = (this.ROMImage.charCodeAt(romIndex) & 0xFF);             //Decode the ROM binary for the switch out.\n        }\n      } else {\n        //Patch in the GBC boot ROM into the memory map:\n        for (; romIndex < 0x100; ++romIndex) {\n          this.memory[romIndex] = this.GBBOOTROM[romIndex];                     //Load in the GameBoy Color BOOT ROM.\n          this.ROM[romIndex] = this.ROMImage.romIndex;             //Decode the ROM binary for the switch out.\n        }\n      }\n    }\n    if (this.ROMImageIsString) {\n      for (; romIndex < 0x4000; ++romIndex) {\n        this.memory[romIndex] = this.ROM[romIndex] = (this.ROMImage.charCodeAt(romIndex) & 0xFF); //Load in the game ROM.\n      }\n    } else {\n      for (; romIndex < 0x4000; ++romIndex) {\n        this.memory[romIndex] = this.ROM[romIndex] = this.ROMImage[romIndex]; //Load in the game ROM.\n      }\n    }\n  }\n  else {\n    if (this.ROMImageIsString) {\n      //Don't load in the boot ROM:\n      for (; romIndex < 0x4000; ++romIndex) {\n        this.memory[romIndex] = this.ROM[romIndex] = (this.ROMImage.charCodeAt(romIndex) & 0xFF); //Load in the game ROM.\n      }\n    } else {\n      //Don't load in the boot ROM:\n      for (; romIndex < 0x4000; ++romIndex) {\n        this.memory[romIndex] = this.ROM[romIndex] = this.ROMImage[romIndex]; //Load in the game ROM.\n      }\n    }\n  }\n  //Finish the decoding of the ROM binary:\n  if (this.ROMImageIsString) {\n    for (; romIndex < maxLength; ++romIndex) {\n      this.ROM[romIndex] = this.ROMImage.charCodeAt(romIndex) & 0xFF;\n    }\n  } else {\n    for (; romIndex < maxLength; ++romIndex) {\n      this.ROM[romIndex] = this.ROMImage[romIndex];\n    }\n  }\n  this.ROMBankEdge = Math.floor(this.ROM.length / 0x4000);\n  //Set up the emulator for the cartidge specifics:\n  this.interpretCartridge();\n  //Check for IRQ matching upon initialization:\n  this.checkIRQMatching();\n};\nGameBoyCore.prototype.getROMImage = function () {\n    //Return the binary version of the ROM image currently running:\n    if (this.ROMImage.length > 0) {\n        return this.ROMImage.length;\n    }\n    var length = this.ROM.length;\n    for (var index = 0; index < length; index++) {\n        this.ROMImage += String.fromCharCode(this.ROM[index]);\n    }\n    return this.ROMImage;\n}\nGameBoyCore.prototype.interpretCartridge = function () {\n    var extra;\n\n    if (this.ROMImageIsString) {\n        // ROM name\n        for (var index = 0x134; index < 0x13F; index++) {\n            if (this.ROMImage[index] > 0) {\n                this.name += this.ROMImage[index];\n            }\n        }\n        // ROM game code (for newer games)\n        for (var index = 0x13F; index < 0x143; index++) {\n            if (this.ROMImage[index] > 0) {\n                this.gameCode += this.ROMImage[index];\n            }\n        }\n\n        extra = this.ROMImage[0x143];\n    } else {\n        // ROM name\n        for (var index = 0x134; index < 0x13F; index++) {\n          if (this.ROMImage[index] > 0) {\n            this.name += String.fromCharCode(this.ROMImage[index]);\n          }\n        }\n        // ROM game code (for newer games)\n        for (var index = 0x13F; index < 0x143; index++) {\n          if (this.ROMImage[index] > 0) {\n            this.gameCode += String.fromCharCode(this.ROMImage[index]);\n          }\n        }\n\n        extra = String.fromCharCode(this.ROMImage[0x143]);\n    }\n\n\n    // You don't want extra output, do you?\n    // console.log(\"Game Title: \" + this.name + \"[\" + this.gameCode + \"][\" + this.ROMImage[0x143] + \"]\");\n\n    // Cartridge type\n    this.cartridgeType = this.ROM[0x147];\n    //console.log(\"Cartridge type #\" + this.cartridgeType);\n    //Map out ROM cartridge sub-types.\n    var MBCType = \"\";\n    switch (this.cartridgeType) {\n        case 0x00:\n            //ROM w/o bank switching\n            if (!settings[9]) {\n                MBCType = \"ROM\";\n                break;\n            }\n        case 0x01:\n            this.cMBC1 = true;\n            MBCType = \"MBC1\";\n            break;\n        case 0x02:\n            this.cMBC1 = true;\n            this.cSRAM = true;\n            MBCType = \"MBC1 + SRAM\";\n            break;\n        case 0x03:\n            this.cMBC1 = true;\n            this.cSRAM = true;\n            this.cBATT = true;\n            MBCType = \"MBC1 + SRAM + BATT\";\n            break;\n        case 0x05:\n            this.cMBC2 = true;\n            MBCType = \"MBC2\";\n            break;\n        case 0x06:\n            this.cMBC2 = true;\n            this.cBATT = true;\n            MBCType = \"MBC2 + BATT\";\n            break;\n        case 0x08:\n            this.cSRAM = true;\n            MBCType = \"ROM + SRAM\";\n            break;\n        case 0x09:\n            this.cSRAM = true;\n            this.cBATT = true;\n            MBCType = \"ROM + SRAM + BATT\";\n            break;\n        case 0x0B:\n            this.cMMMO1 = true;\n            MBCType = \"MMMO1\";\n            break;\n        case 0x0C:\n            this.cMMMO1 = true;\n            this.cSRAM = true;\n            MBCType = \"MMMO1 + SRAM\";\n            break;\n        case 0x0D:\n            this.cMMMO1 = true;\n            this.cSRAM = true;\n            this.cBATT = true;\n            MBCType = \"MMMO1 + SRAM + BATT\";\n            break;\n        case 0x0F:\n            this.cMBC3 = true;\n            this.cTIMER = true;\n            this.cBATT = true;\n            MBCType = \"MBC3 + TIMER + BATT\";\n            break;\n        case 0x10:\n            this.cMBC3 = true;\n            this.cTIMER = true;\n            this.cBATT = true;\n            this.cSRAM = true;\n            MBCType = \"MBC3 + TIMER + BATT + SRAM\";\n            break;\n        case 0x11:\n            this.cMBC3 = true;\n            MBCType = \"MBC3\";\n            break;\n        case 0x12:\n            this.cMBC3 = true;\n            this.cSRAM = true;\n            MBCType = \"MBC3 + SRAM\";\n            break;\n        case 0x13:\n            this.cMBC3 = true;\n            this.cSRAM = true;\n            this.cBATT = true;\n            MBCType = \"MBC3 + SRAM + BATT\";\n            break;\n        case 0x19:\n            this.cMBC5 = true;\n            MBCType = \"MBC5\";\n            break;\n        case 0x1A:\n            this.cMBC5 = true;\n            this.cSRAM = true;\n            MBCType = \"MBC5 + SRAM\";\n            break;\n        case 0x1B:\n            this.cMBC5 = true;\n            this.cSRAM = true;\n            this.cBATT = true;\n            MBCType = \"MBC5 + SRAM + BATT\";\n            break;\n        case 0x1C:\n            this.cRUMBLE = true;\n            MBCType = \"RUMBLE\";\n            break;\n        case 0x1D:\n            this.cRUMBLE = true;\n            this.cSRAM = true;\n            MBCType = \"RUMBLE + SRAM\";\n            break;\n        case 0x1E:\n            this.cRUMBLE = true;\n            this.cSRAM = true;\n            this.cBATT = true;\n            MBCType = \"RUMBLE + SRAM + BATT\";\n            break;\n        case 0x1F:\n            this.cCamera = true;\n            MBCType = \"GameBoy Camera\";\n            break;\n        case 0x22:\n            this.cMBC7 = true;\n            this.cSRAM = true;\n            this.cBATT = true;\n            MBCType = \"MBC7 + SRAM + BATT\";\n            break;\n        case 0xFD:\n            this.cTAMA5 = true;\n            MBCType = \"TAMA5\";\n            break;\n        case 0xFE:\n            this.cHuC3 = true;\n            MBCType = \"HuC3\";\n            break;\n        case 0xFF:\n            this.cHuC1 = true;\n            MBCType = \"HuC1\";\n            break;\n        default:\n            MBCType = \"Unknown\";\n            console.log(\"Cartridge type is unknown.\");\n            pause();\n    }\n    cout(\"Cartridge Type: \" + MBCType + \".\", 0);\n    // ROM and RAM banks\n    this.numROMBanks = this.ROMBanks[this.ROM[0x148]];\n    cout(this.numROMBanks + \" ROM banks.\", 0);\n    switch (this.RAMBanks[this.ROM[0x149]]) {\n        case 0:\n            cout(\"No RAM banking requested for allocation or MBC is of type 2.\", 0);\n            break;\n        case 2:\n            cout(\"1 RAM bank requested for allocation.\", 0);\n            break;\n        case 3:\n            cout(\"4 RAM banks requested for allocation.\", 0);\n            break;\n        case 4:\n            cout(\"16 RAM banks requested for allocation.\", 0);\n            break;\n        default:\n            cout(\"RAM bank amount requested is unknown, will use maximum allowed by specified MBC type.\", 0);\n    }\n    //Check the GB/GBC mode byte:\n    if (!this.usedBootROM) {\n        switch (this.ROM[0x143]) {\n            case 0x00:  //Only GB mode\n                this.cGBC = false;\n                cout(\"Only GB mode detected.\", 0);\n                break;\n            case 0x32:  //Exception to the GBC identifying code:\n                if (!settings[2] && this.name + this.gameCode + this.ROM[0x143] == \"Game and Watch 50\") {\n                    this.cGBC = true;\n                    cout(\"Created a boot exception for Game and Watch Gallery 2 (GBC ID byte is wrong on the cartridge).\", 1);\n                }\n                else {\n                    this.cGBC = false;\n                }\n                break;\n            case 0x80:  //Both GB + GBC modes\n                this.cGBC = !settings[2];\n                cout(\"GB and GBC mode detected.\", 0);\n                break;\n            case 0xC0:  //Only GBC mode\n                this.cGBC = true;\n                cout(\"Only GBC mode detected.\", 0);\n                break;\n            default:\n                this.cGBC = false;\n                cout(\"Unknown GameBoy game type code #\" + this.ROM[0x143] + \", defaulting to GB mode (Old games don't have a type code).\", 1);\n        }\n        this.inBootstrap = false;\n        this.setupRAM();    //CPU/(V)RAM initialization.\n        this.initSkipBootstrap();\n    }\n    else {\n        this.cGBC = this.usedGBCBootROM;    //Allow the GBC boot ROM to run in GBC mode...\n        this.setupRAM();    //CPU/(V)RAM initialization.\n        this.initBootstrap();\n    }\n    this.initializeModeSpecificArrays();\n    //License Code Lookup:\n    var cOldLicense = this.ROM[0x14B];\n    var cNewLicense = (this.ROM[0x144] & 0xFF00) | (this.ROM[0x145] & 0xFF);\n    if (cOldLicense != 0x33) {\n        //Old Style License Header\n        cout(\"Old style license code: \" + cOldLicense, 0);\n    }\n    else {\n        //New Style License Header\n        cout(\"New style license code: \" + cNewLicense, 0);\n    }\n    this.ROMImage = \"\"; //Memory consumption reduction.\n};\nGameBoyCore.prototype.disableBootROM = function () {\n    //Remove any traces of the boot ROM from ROM memory.\n    for (var index = 0; index < 0x100; ++index) {\n        this.memory[index] = this.ROM[index];   //Replace the GameBoy or GameBoy Color boot ROM with the game ROM.\n    }\n    if (this.usedGBCBootROM) {\n        //Remove any traces of the boot ROM from ROM memory.\n        for (index = 0x200; index < 0x900; ++index) {\n            this.memory[index] = this.ROM[index];   //Replace the GameBoy Color boot ROM with the game ROM.\n        }\n        if (!this.cGBC) {\n            //Clean up the post-boot (GB mode only) state:\n            this.GBCtoGBModeAdjust();\n        }\n        else {\n            this.recompileBootIOWriteHandling();\n        }\n    }\n    else {\n        this.recompileBootIOWriteHandling();\n    }\n};\nGameBoyCore.prototype.initializeTiming = function () {\n    //Emulator Timing:\n    this.clocksPerSecond = this.emulatorSpeed * 0x400000;\n    this.baseCPUCyclesPerIteration = this.clocksPerSecond / 1000 * settings[6];\n    this.CPUCyclesTotalRoundoff = this.baseCPUCyclesPerIteration % 4;\n    this.CPUCyclesTotalBase = this.CPUCyclesTotal = (this.baseCPUCyclesPerIteration - this.CPUCyclesTotalRoundoff) | 0;\n    this.CPUCyclesTotalCurrent = 0;\n};\nGameBoyCore.prototype.setSpeed = function (speed) {\n    this.emulatorSpeed = speed;\n    this.initializeTiming();\n    if (this.audioHandle) {\n        this.initSound();\n    }\n};\nGameBoyCore.prototype.setupRAM = function () {\n    //Setup the auxilliary/switchable RAM:\n    if (this.cMBC2) {\n        this.numRAMBanks = 1 / 16;\n    }\n    else if (this.cMBC1 || this.cRUMBLE || this.cMBC3 || this.cHuC3) {\n        this.numRAMBanks = 4;\n    }\n    else if (this.cMBC5) {\n        this.numRAMBanks = 16;\n    }\n    else if (this.cSRAM) {\n        this.numRAMBanks = 1;\n    }\n    if (this.numRAMBanks > 0) {\n        if (!this.MBCRAMUtilized()) {\n            //For ROM and unknown MBC cartridges using the external RAM:\n            this.MBCRAMBanksEnabled = true;\n        }\n        //Switched RAM Used\n        var MBCRam = (typeof this.openMBC == \"function\") ? this.openMBC(this.name) : [];\n        if (MBCRam.length > 0) {\n            //Flash the SRAM into memory:\n            this.MBCRam = this.toTypedArray(MBCRam, \"uint8\");\n        }\n        else {\n            this.MBCRam = this.getTypedArray(this.numRAMBanks * 0x2000, 0, \"uint8\");\n        }\n    }\n    cout(\"Actual bytes of MBC RAM allocated: \" + (this.numRAMBanks * 0x2000), 0);\n    this.returnFromRTCState();\n    //Setup the RAM for GBC mode.\n    if (this.cGBC) {\n        this.VRAM = this.getTypedArray(0x2000, 0, \"uint8\");\n        this.GBCMemory = this.getTypedArray(0x7000, 0, \"uint8\");\n    }\n    this.memoryReadJumpCompile();\n    this.memoryWriteJumpCompile();\n};\nGameBoyCore.prototype.MBCRAMUtilized = function () {\n    return this.cMBC1 || this.cMBC2 || this.cMBC3 || this.cMBC5 || this.cMBC7 || this.cRUMBLE;\n};\nGameBoyCore.prototype.recomputeDimension = function () {\n    //Cache some dimension info:\n    this.onscreenWidth = 160;\n    this.onscreenHeight = 144;\n\n    this.offscreenWidth = 160;\n    this.offscreenHeight = 144;\n    this.offscreenRGBCount = this.offscreenWidth * this.offscreenHeight * 4;\n};\nGameBoyCore.prototype.initLCD = function () {\n    this.recomputeDimension();\n    if (this.offscreenRGBCount != 92160) {\n        //Only create the resizer handle if we need it:\n        this.compileResizeFrameBufferFunction();\n    }\n    else {\n        //Resizer not needed:\n        this.resizer = null;\n    }\n\n    try {\n        this.canvasBuffer = {\n            \"data\": new Uint8ClampedArray(92160),\n            \"height\": 144,\n            \"width\": 160\n        };\n\n        //Taking canvas out of the picture.\n        //this.canvasBuffer = this.drawContextOffScreen.createImageData(144, 160);\n            //this.canvasBuffer.prototype = ImageData;\n            //new ImageData(160, 144);//{'width':160, 'height':144, 'data':new Array(160*144*4)};//this.drawContextOffscreen.createImageData(this.offscreenWidth, this.offscreenHeight);\n    }\n    catch (error) {\n        console.log('hack failed: ' + error.message + ': falling back to getImageData initialization');\n        //cout(\"Falling back to the getImageData initialization (Error \\\"\" + error.message + \"\\\").\", 1);\n        //this.canvasBuffer = this.drawContextOffscreen.getImageData(0, 0, this.offscreenWidth, this.offscreenHeight);\n    }\n    var index = this.offscreenRGBCount;\n    while (index > 0) {\n        this.canvasBuffer.data[index -= 4] = 0xF8;\n        this.canvasBuffer.data[index + 1] = 0xF8;\n        this.canvasBuffer.data[index + 2] = 0xF8;\n        this.canvasBuffer.data[index + 3] = 0xFF;\n    }\n    //this.graphicsBlit();\n    if (this.swizzledFrame == null) {\n        this.swizzledFrame = this.getTypedArray(69120, 0xFF, \"uint8\");\n    }\n\n    //Test the draw system and browser vblank latching:\n    this.drewFrame = true; //Copy the latest graphics to buffer.\n    this.requestDraw();\n};\n\n//I think I'm just copying out framebuffer.  So maybe I dont' need to do anything?\nGameBoyCore.prototype.graphicsBlit = function () {\n\n    if(!this.currentScreenFixed) { this.currentScreenFixed = []; }\n    this.lastScreen = this.currentScreenFixed;\n\n    this.currentScreen = [];//new Uint8Array(this.canvasBuffer.data.length);\n    this.partialScreen = [];\n\n\n    for (var i=0; i < this.canvasBuffer.data.length; i++){\n       //Build partial frame.\n       if(this.lastScreen[i] != this.canvasBuffer.data[i]) {\n           this.partialScreen.push(i);\n           this.partialScreen.push(this.canvasBuffer.data[i]);\n       }\n\n        //Build full frame.\n       this.currentScreenFixed[i] = this.canvasBuffer.data[i];\n       //this.currentScreen.push(i);\n       this.currentScreen.push(this.canvasBuffer.data[i]);\n\n    }\n};\nGameBoyCore.prototype.JoyPadEvent = function (key, down) {\n    if (down) {\n        this.JoyPad &= 0xFF ^ (1 << key);\n        if (!this.cGBC && (!this.usedBootROM || !this.usedGBCBootROM)) {\n            this.interruptsRequested |= 0x10;   //A real GBC doesn't set this!\n            this.remainingClocks = 0;\n            this.checkIRQMatching();\n        }\n    }\n    else {\n        this.JoyPad |= (1 << key);\n    }\n    this.memory[0xFF00] = (this.memory[0xFF00] & 0x30) + ((((this.memory[0xFF00] & 0x20) == 0) ? (this.JoyPad >> 4) : 0xF) & (((this.memory[0xFF00] & 0x10) == 0) ? (this.JoyPad & 0xF) : 0xF));\n    this.CPUStopped = false;\n}\nGameBoyCore.prototype.GyroEvent = function (x, y) {\n    x *= -100;\n    x += 2047;\n    this.highX = x >> 8;\n    this.lowX = x & 0xFF;\n    y *= -100;\n    y += 2047;\n    this.highY = y >> 8;\n    this.lowY = y & 0xFF;\n}\nGameBoyCore.prototype.initSound = function () {\n    this.audioResamplerFirstPassFactor = Math.max(Math.min(Math.floor(this.clocksPerSecond / 44100), Math.floor(0xFFFF / 0x1E0)), 1);\n    this.downSampleInputDivider = 1 / (this.audioResamplerFirstPassFactor * 0xF0);\n\n\n    if (settings[0]) {\n        // this.audioHandle = new XAudioServer(\n        //     2,\n        //     this.clocksPerSecond / this.audioResamplerFirstPassFactor,\n        //     0,\n        //     Math.max(this.baseCPUCyclesPerIteration * settings[8] / this.audioResamplerFirstPassFactor, 8192) << 1,\n        //     null,\n        //     settings[3],\n        //     function () {\n        //         settings[0] = false;\n        //     });\n\n        // console.log('Initializing Audio Buffer:');\n        // console.log(`Sample Rate: ${ this.clocksPerSecond / this.audioResamplerFirstPassFactor }`);\n        // console.log(`Max Buffer Size: ${ Math.max(this.baseCPUCyclesPerIteration * settings[8] / this.audioResamplerFirstPassFactor, 8192) << 1 }`);\n\n        this.initAudioBuffer();\n    }\n    else if (this.audioHandle) {\n        //Mute the audio output, as it has an immediate silencing effect:\n        this.audioHandle.changeVolume(0);\n    }\n}\nGameBoyCore.prototype.changeVolume = function () {\n    if (settings[0] && this.audioHandle) {\n        this.audioHandle.changeVolume(settings[3]);\n    }\n}\nGameBoyCore.prototype.initAudioBuffer = function () {\n    this.audioIndex = 0;\n    this.audioDestinationPosition = 0;\n    this.downsampleInput = 0;\n    this.bufferContainAmount = Math.max(this.baseCPUCyclesPerIteration * settings[7] / this.audioResamplerFirstPassFactor, 4096) << 1;\n    this.numSamplesTotal = (this.baseCPUCyclesPerIteration / this.audioResamplerFirstPassFactor) << 1;\n    this.audioBuffer = this.getTypedArray(this.numSamplesTotal, 0, \"float32\");\n}\nGameBoyCore.prototype.intializeWhiteNoise = function () {\n    //Noise Sample Tables:\n    var randomFactor = 1;\n    //15-bit LSFR Cache Generation:\n    this.LSFR15Table = this.getTypedArray(0x80000, 0, \"int8\");\n    var LSFR = 0x7FFF;  //Seed value has all its bits set.\n    var LSFRShifted = 0x3FFF;\n    for (var index = 0; index < 0x8000; ++index) {\n        //Normalize the last LSFR value for usage:\n        randomFactor = 1 - (LSFR & 1);  //Docs say it's the inverse.\n        //Cache the different volume level results:\n        this.LSFR15Table[0x08000 | index] = randomFactor;\n        this.LSFR15Table[0x10000 | index] = randomFactor * 0x2;\n        this.LSFR15Table[0x18000 | index] = randomFactor * 0x3;\n        this.LSFR15Table[0x20000 | index] = randomFactor * 0x4;\n        this.LSFR15Table[0x28000 | index] = randomFactor * 0x5;\n        this.LSFR15Table[0x30000 | index] = randomFactor * 0x6;\n        this.LSFR15Table[0x38000 | index] = randomFactor * 0x7;\n        this.LSFR15Table[0x40000 | index] = randomFactor * 0x8;\n        this.LSFR15Table[0x48000 | index] = randomFactor * 0x9;\n        this.LSFR15Table[0x50000 | index] = randomFactor * 0xA;\n        this.LSFR15Table[0x58000 | index] = randomFactor * 0xB;\n        this.LSFR15Table[0x60000 | index] = randomFactor * 0xC;\n        this.LSFR15Table[0x68000 | index] = randomFactor * 0xD;\n        this.LSFR15Table[0x70000 | index] = randomFactor * 0xE;\n        this.LSFR15Table[0x78000 | index] = randomFactor * 0xF;\n        //Recompute the LSFR algorithm:\n        LSFRShifted = LSFR >> 1;\n        LSFR = LSFRShifted | (((LSFRShifted ^ LSFR) & 0x1) << 14);\n    }\n    //7-bit LSFR Cache Generation:\n    this.LSFR7Table = this.getTypedArray(0x800, 0, \"int8\");\n    LSFR = 0x7F;    //Seed value has all its bits set.\n    for (index = 0; index < 0x80; ++index) {\n        //Normalize the last LSFR value for usage:\n        randomFactor = 1 - (LSFR & 1);  //Docs say it's the inverse.\n        //Cache the different volume level results:\n        this.LSFR7Table[0x080 | index] = randomFactor;\n        this.LSFR7Table[0x100 | index] = randomFactor * 0x2;\n        this.LSFR7Table[0x180 | index] = randomFactor * 0x3;\n        this.LSFR7Table[0x200 | index] = randomFactor * 0x4;\n        this.LSFR7Table[0x280 | index] = randomFactor * 0x5;\n        this.LSFR7Table[0x300 | index] = randomFactor * 0x6;\n        this.LSFR7Table[0x380 | index] = randomFactor * 0x7;\n        this.LSFR7Table[0x400 | index] = randomFactor * 0x8;\n        this.LSFR7Table[0x480 | index] = randomFactor * 0x9;\n        this.LSFR7Table[0x500 | index] = randomFactor * 0xA;\n        this.LSFR7Table[0x580 | index] = randomFactor * 0xB;\n        this.LSFR7Table[0x600 | index] = randomFactor * 0xC;\n        this.LSFR7Table[0x680 | index] = randomFactor * 0xD;\n        this.LSFR7Table[0x700 | index] = randomFactor * 0xE;\n        this.LSFR7Table[0x780 | index] = randomFactor * 0xF;\n        //Recompute the LSFR algorithm:\n        LSFRShifted = LSFR >> 1;\n        LSFR = LSFRShifted | (((LSFRShifted ^ LSFR) & 0x1) << 6);\n    }\n    //Set the default noise table:\n    this.noiseSampleTable = this.LSFR15Table;\n}\nGameBoyCore.prototype.audioUnderrunAdjustment = function () {\n    if (settings[0]) {\n        //var underrunAmount = this.audioHandle.remainingBuffer();\n        var underrunAmount = null; //I don't know what this is or why it matters.\n        //From what I can tell, this is basically just \"how much space do I have left in this buffer.\"\n        //I'm gonna need to care about that.\n        //But I'm not sure how *much* I'm going to need to care about it.\n        //If I'm working with the raw buffer, then maybe... maybe I can just change the size to fit?\n        //For now I'm going to ignore it and see what happens.\n        //I need to know what the output format of the audio is.\n\n        if (typeof underrunAmount == \"number\") {\n            underrunAmount = this.bufferContainAmount - Math.max(underrunAmount, 0);\n            if (underrunAmount > 0) {\n                this.recalculateIterationClockLimitForAudio((underrunAmount >> 1) * this.audioResamplerFirstPassFactor);\n            }\n        }\n    }\n}\nGameBoyCore.prototype.initializeAudioStartState = function () {\n    this.channel1FrequencyTracker = 0x2000;\n    this.channel1DutyTracker = 0;\n    this.channel1CachedDuty = this.dutyLookup[2];\n    this.channel1totalLength = 0;\n    this.channel1envelopeVolume = 0;\n    this.channel1envelopeType = false;\n    this.channel1envelopeSweeps = 0;\n    this.channel1envelopeSweepsLast = 0;\n    this.channel1consecutive = true;\n    this.channel1frequency = 0;\n    this.channel1SweepFault = false;\n    this.channel1ShadowFrequency = 0;\n    this.channel1timeSweep = 1;\n    this.channel1lastTimeSweep = 0;\n    this.channel1Swept = false;\n    this.channel1frequencySweepDivider = 0;\n    this.channel1decreaseSweep = false;\n    this.channel2FrequencyTracker = 0x2000;\n    this.channel2DutyTracker = 0;\n    this.channel2CachedDuty = this.dutyLookup[2];\n    this.channel2totalLength = 0;\n    this.channel2envelopeVolume = 0;\n    this.channel2envelopeType = false;\n    this.channel2envelopeSweeps = 0;\n    this.channel2envelopeSweepsLast = 0;\n    this.channel2consecutive = true;\n    this.channel2frequency = 0;\n    this.channel3canPlay = false;\n    this.channel3totalLength = 0;\n    this.channel3patternType = 4;\n    this.channel3frequency = 0;\n    this.channel3consecutive = true;\n    this.channel3Counter = 0x800;\n    this.channel4FrequencyPeriod = 8;\n    this.channel4totalLength = 0;\n    this.channel4envelopeVolume = 0;\n    this.channel4currentVolume = 0;\n    this.channel4envelopeType = false;\n    this.channel4envelopeSweeps = 0;\n    this.channel4envelopeSweepsLast = 0;\n    this.channel4consecutive = true;\n    this.channel4BitRange = 0x7FFF;\n    this.noiseSampleTable = this.LSFR15Table;\n    this.channel4VolumeShifter = 15;\n    this.channel1FrequencyCounter = 0x2000;\n    this.channel2FrequencyCounter = 0x2000;\n    this.channel3Counter = 0x800;\n    this.channel3FrequencyPeriod = 0x800;\n    this.channel3lastSampleLookup = 0;\n    this.channel4lastSampleLookup = 0;\n    this.VinLeftChannelMasterVolume = 8;\n    this.VinRightChannelMasterVolume = 8;\n    this.mixerOutputCache = 0;\n    this.sequencerClocks = 0x2000;\n    this.sequencePosition = 0;\n    this.channel4FrequencyPeriod = 8;\n    this.channel4Counter = 8;\n    this.cachedChannel3Sample = 0;\n    this.cachedChannel4Sample = 0;\n    this.channel1Enabled = false;\n    this.channel2Enabled = false;\n    this.channel3Enabled = false;\n    this.channel4Enabled = false;\n    this.channel1canPlay = false;\n    this.channel2canPlay = false;\n    this.channel4canPlay = false;\n    this.audioClocksUntilNextEvent = 1;\n    this.audioClocksUntilNextEventCounter = 1;\n    this.channel1OutputLevelCache();\n    this.channel2OutputLevelCache();\n    this.channel3OutputLevelCache();\n    this.channel4OutputLevelCache();\n    this.noiseSampleTable = this.LSFR15Table;\n}\nGameBoyCore.prototype.outputAudio = function () {\n    this.audioBuffer[this.audioDestinationPosition++] = (this.downsampleInput >>> 16) * this.downSampleInputDivider - 1;\n    this.audioBuffer[this.audioDestinationPosition++] = (this.downsampleInput & 0xFFFF) * this.downSampleInputDivider - 1;\n    if (this.audioDestinationPosition == this.numSamplesTotal) {\n        //this.audioHandle.writeAudioNoCallback(this.audioBuffer);\n        this.audioDestinationPosition = 0;\n    }\n    this.downsampleInput = 0;\n}\n//Below are the audio generation functions timed against the CPU:\nGameBoyCore.prototype.generateAudio = function (numSamples) {\n    var multiplier = 0;\n    if (this.soundMasterEnabled && !this.CPUStopped) {\n        for (var clockUpTo = 0; numSamples > 0;) {\n            clockUpTo = Math.min(this.audioClocksUntilNextEventCounter, this.sequencerClocks, numSamples);\n            this.audioClocksUntilNextEventCounter -= clockUpTo;\n            this.sequencerClocks -= clockUpTo;\n            numSamples -= clockUpTo;\n            while (clockUpTo > 0) {\n                multiplier = Math.min(clockUpTo, this.audioResamplerFirstPassFactor - this.audioIndex);\n                clockUpTo -= multiplier;\n                this.audioIndex += multiplier;\n                this.downsampleInput += this.mixerOutputCache * multiplier;\n                if (this.audioIndex == this.audioResamplerFirstPassFactor) {\n                    this.audioIndex = 0;\n                    this.outputAudio();\n                }\n            }\n            if (this.sequencerClocks == 0) {\n                this.audioComputeSequencer();\n                this.sequencerClocks = 0x2000;\n            }\n            if (this.audioClocksUntilNextEventCounter == 0) {\n                this.computeAudioChannels();\n            }\n        }\n    }\n    else {\n        //SILENT OUTPUT:\n        while (numSamples > 0) {\n            multiplier = Math.min(numSamples, this.audioResamplerFirstPassFactor - this.audioIndex);\n            numSamples -= multiplier;\n            this.audioIndex += multiplier;\n            if (this.audioIndex == this.audioResamplerFirstPassFactor) {\n                this.audioIndex = 0;\n                this.outputAudio();\n            }\n        }\n    }\n}\n//Generate audio, but don't actually output it (Used for when sound is disabled by user/browser):\nGameBoyCore.prototype.generateAudioFake = function (numSamples) {\n    if (this.soundMasterEnabled && !this.CPUStopped) {\n        for (var clockUpTo = 0; numSamples > 0;) {\n            clockUpTo = Math.min(this.audioClocksUntilNextEventCounter, this.sequencerClocks, numSamples);\n            this.audioClocksUntilNextEventCounter -= clockUpTo;\n            this.sequencerClocks -= clockUpTo;\n            numSamples -= clockUpTo;\n            if (this.sequencerClocks == 0) {\n                this.audioComputeSequencer();\n                this.sequencerClocks = 0x2000;\n            }\n            if (this.audioClocksUntilNextEventCounter == 0) {\n                this.computeAudioChannels();\n            }\n        }\n    }\n}\nGameBoyCore.prototype.audioJIT = function () {\n    //Audio Sample Generation Timing:\n    if (settings[0]) {\n        this.generateAudio(this.audioTicks);\n    }\n    else {\n        this.generateAudioFake(this.audioTicks);\n    }\n    this.audioTicks = 0;\n}\nGameBoyCore.prototype.audioComputeSequencer = function () {\n    switch (this.sequencePosition++) {\n        case 0:\n            this.clockAudioLength();\n            break;\n        case 2:\n            this.clockAudioLength();\n            this.clockAudioSweep();\n            break;\n        case 4:\n            this.clockAudioLength();\n            break;\n        case 6:\n            this.clockAudioLength();\n            this.clockAudioSweep();\n            break;\n        case 7:\n            this.clockAudioEnvelope();\n            this.sequencePosition = 0;\n    }\n}\nGameBoyCore.prototype.clockAudioLength = function () {\n    //Channel 1:\n    if (this.channel1totalLength > 1) {\n        --this.channel1totalLength;\n    }\n    else if (this.channel1totalLength == 1) {\n        this.channel1totalLength = 0;\n        this.channel1EnableCheck();\n        this.memory[0xFF26] &= 0xFE;    //Channel #1 On Flag Off\n    }\n    //Channel 2:\n    if (this.channel2totalLength > 1) {\n        --this.channel2totalLength;\n    }\n    else if (this.channel2totalLength == 1) {\n        this.channel2totalLength = 0;\n        this.channel2EnableCheck();\n        this.memory[0xFF26] &= 0xFD;    //Channel #2 On Flag Off\n    }\n    //Channel 3:\n    if (this.channel3totalLength > 1) {\n        --this.channel3totalLength;\n    }\n    else if (this.channel3totalLength == 1) {\n        this.channel3totalLength = 0;\n        this.channel3EnableCheck();\n        this.memory[0xFF26] &= 0xFB;    //Channel #3 On Flag Off\n    }\n    //Channel 4:\n    if (this.channel4totalLength > 1) {\n        --this.channel4totalLength;\n    }\n    else if (this.channel4totalLength == 1) {\n        this.channel4totalLength = 0;\n        this.channel4EnableCheck();\n        this.memory[0xFF26] &= 0xF7;    //Channel #4 On Flag Off\n    }\n}\nGameBoyCore.prototype.clockAudioSweep = function () {\n    //Channel 1:\n    if (!this.channel1SweepFault && this.channel1timeSweep > 0) {\n        if (--this.channel1timeSweep == 0) {\n            this.runAudioSweep();\n        }\n    }\n}\nGameBoyCore.prototype.runAudioSweep = function () {\n    //Channel 1:\n    if (this.channel1lastTimeSweep > 0) {\n        if (this.channel1frequencySweepDivider > 0) {\n            this.channel1Swept = true;\n            if (this.channel1decreaseSweep) {\n                this.channel1ShadowFrequency -= this.channel1ShadowFrequency >> this.channel1frequencySweepDivider;\n                this.channel1frequency = this.channel1ShadowFrequency & 0x7FF;\n                this.channel1FrequencyTracker = (0x800 - this.channel1frequency) << 2;\n            }\n            else {\n                this.channel1ShadowFrequency += this.channel1ShadowFrequency >> this.channel1frequencySweepDivider;\n                this.channel1frequency = this.channel1ShadowFrequency;\n                if (this.channel1ShadowFrequency <= 0x7FF) {\n                    this.channel1FrequencyTracker = (0x800 - this.channel1frequency) << 2;\n                    //Run overflow check twice:\n                    if ((this.channel1ShadowFrequency + (this.channel1ShadowFrequency >> this.channel1frequencySweepDivider)) > 0x7FF) {\n                        this.channel1SweepFault = true;\n                        this.channel1EnableCheck();\n                        this.memory[0xFF26] &= 0xFE;    //Channel #1 On Flag Off\n                    }\n                }\n                else {\n                    this.channel1frequency &= 0x7FF;\n                    this.channel1SweepFault = true;\n                    this.channel1EnableCheck();\n                    this.memory[0xFF26] &= 0xFE;    //Channel #1 On Flag Off\n                }\n            }\n            this.channel1timeSweep = this.channel1lastTimeSweep;\n        }\n        else {\n            //Channel has sweep disabled and timer becomes a length counter:\n            this.channel1SweepFault = true;\n            this.channel1EnableCheck();\n        }\n    }\n}\nGameBoyCore.prototype.channel1AudioSweepPerformDummy = function () {\n    //Channel 1:\n    if (this.channel1frequencySweepDivider > 0) {\n        if (!this.channel1decreaseSweep) {\n            var channel1ShadowFrequency = this.channel1ShadowFrequency + (this.channel1ShadowFrequency >> this.channel1frequencySweepDivider);\n            if (channel1ShadowFrequency <= 0x7FF) {\n                //Run overflow check twice:\n                if ((channel1ShadowFrequency + (channel1ShadowFrequency >> this.channel1frequencySweepDivider)) > 0x7FF) {\n                    this.channel1SweepFault = true;\n                    this.channel1EnableCheck();\n                    this.memory[0xFF26] &= 0xFE;    //Channel #1 On Flag Off\n                }\n            }\n            else {\n                this.channel1SweepFault = true;\n                this.channel1EnableCheck();\n                this.memory[0xFF26] &= 0xFE;    //Channel #1 On Flag Off\n            }\n        }\n    }\n}\nGameBoyCore.prototype.clockAudioEnvelope = function () {\n    //Channel 1:\n    if (this.channel1envelopeSweepsLast > -1) {\n        if (this.channel1envelopeSweeps > 0) {\n            --this.channel1envelopeSweeps;\n        }\n        else {\n            if (!this.channel1envelopeType) {\n                if (this.channel1envelopeVolume > 0) {\n                    --this.channel1envelopeVolume;\n                    this.channel1envelopeSweeps = this.channel1envelopeSweepsLast;\n                    this.channel1OutputLevelCache();\n                }\n                else {\n                    this.channel1envelopeSweepsLast = -1;\n                }\n            }\n            else if (this.channel1envelopeVolume < 0xF) {\n                ++this.channel1envelopeVolume;\n                this.channel1envelopeSweeps = this.channel1envelopeSweepsLast;\n                this.channel1OutputLevelCache();\n            }\n            else {\n                this.channel1envelopeSweepsLast = -1;\n            }\n        }\n    }\n    //Channel 2:\n    if (this.channel2envelopeSweepsLast > -1) {\n        if (this.channel2envelopeSweeps > 0) {\n            --this.channel2envelopeSweeps;\n        }\n        else {\n            if (!this.channel2envelopeType) {\n                if (this.channel2envelopeVolume > 0) {\n                    --this.channel2envelopeVolume;\n                    this.channel2envelopeSweeps = this.channel2envelopeSweepsLast;\n                    this.channel2OutputLevelCache();\n                }\n                else {\n                    this.channel2envelopeSweepsLast = -1;\n                }\n            }\n            else if (this.channel2envelopeVolume < 0xF) {\n                ++this.channel2envelopeVolume;\n                this.channel2envelopeSweeps = this.channel2envelopeSweepsLast;\n                this.channel2OutputLevelCache();\n            }\n            else {\n                this.channel2envelopeSweepsLast = -1;\n            }\n        }\n    }\n    //Channel 4:\n    if (this.channel4envelopeSweepsLast > -1) {\n        if (this.channel4envelopeSweeps > 0) {\n            --this.channel4envelopeSweeps;\n        }\n        else {\n            if (!this.channel4envelopeType) {\n                if (this.channel4envelopeVolume > 0) {\n                    this.channel4currentVolume = --this.channel4envelopeVolume << this.channel4VolumeShifter;\n                    this.channel4envelopeSweeps = this.channel4envelopeSweepsLast;\n                    this.channel4UpdateCache();\n                }\n                else {\n                    this.channel4envelopeSweepsLast = -1;\n                }\n            }\n            else if (this.channel4envelopeVolume < 0xF) {\n                this.channel4currentVolume = ++this.channel4envelopeVolume << this.channel4VolumeShifter;\n                this.channel4envelopeSweeps = this.channel4envelopeSweepsLast;\n                this.channel4UpdateCache();\n            }\n            else {\n                this.channel4envelopeSweepsLast = -1;\n            }\n        }\n    }\n}\nGameBoyCore.prototype.computeAudioChannels = function () {\n    //Clock down the four audio channels to the next closest audio event:\n    this.channel1FrequencyCounter -= this.audioClocksUntilNextEvent;\n    this.channel2FrequencyCounter -= this.audioClocksUntilNextEvent;\n    this.channel3Counter -= this.audioClocksUntilNextEvent;\n    this.channel4Counter -= this.audioClocksUntilNextEvent;\n    //Channel 1 counter:\n    if (this.channel1FrequencyCounter == 0) {\n        this.channel1FrequencyCounter = this.channel1FrequencyTracker;\n        this.channel1DutyTracker = (this.channel1DutyTracker + 1) & 0x7;\n        this.channel1OutputLevelTrimaryCache();\n    }\n    //Channel 2 counter:\n    if (this.channel2FrequencyCounter == 0) {\n        this.channel2FrequencyCounter = this.channel2FrequencyTracker;\n        this.channel2DutyTracker = (this.channel2DutyTracker + 1) & 0x7;\n        this.channel2OutputLevelTrimaryCache();\n    }\n    //Channel 3 counter:\n    if (this.channel3Counter == 0) {\n        if (this.channel3canPlay) {\n            this.channel3lastSampleLookup = (this.channel3lastSampleLookup + 1) & 0x1F;\n        }\n        this.channel3Counter = this.channel3FrequencyPeriod;\n        this.channel3UpdateCache();\n    }\n    //Channel 4 counter:\n    if (this.channel4Counter == 0) {\n        this.channel4lastSampleLookup = (this.channel4lastSampleLookup + 1) & this.channel4BitRange;\n        this.channel4Counter = this.channel4FrequencyPeriod;\n        this.channel4UpdateCache();\n    }\n    //Find the number of clocks to next closest counter event:\n    this.audioClocksUntilNextEventCounter = this.audioClocksUntilNextEvent = Math.min(this.channel1FrequencyCounter, this.channel2FrequencyCounter, this.channel3Counter, this.channel4Counter);\n}\nGameBoyCore.prototype.channel1EnableCheck = function () {\n    this.channel1Enabled = ((this.channel1consecutive || this.channel1totalLength > 0) && !this.channel1SweepFault && this.channel1canPlay);\n    this.channel1OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel1VolumeEnableCheck = function () {\n    this.channel1canPlay = (this.memory[0xFF12] > 7);\n    this.channel1EnableCheck();\n    this.channel1OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel1OutputLevelCache = function () {\n    this.channel1currentSampleLeft = (this.leftChannel1) ? this.channel1envelopeVolume : 0;\n    this.channel1currentSampleRight = (this.rightChannel1) ? this.channel1envelopeVolume : 0;\n    this.channel1OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel1OutputLevelSecondaryCache = function () {\n    if (this.channel1Enabled) {\n        this.channel1currentSampleLeftSecondary = this.channel1currentSampleLeft;\n        this.channel1currentSampleRightSecondary = this.channel1currentSampleRight;\n    }\n    else {\n        this.channel1currentSampleLeftSecondary = 0;\n        this.channel1currentSampleRightSecondary = 0;\n    }\n    this.channel1OutputLevelTrimaryCache();\n}\nGameBoyCore.prototype.channel1OutputLevelTrimaryCache = function () {\n    if (this.channel1CachedDuty[this.channel1DutyTracker] && settings[14][0]) {\n        this.channel1currentSampleLeftTrimary = this.channel1currentSampleLeftSecondary;\n        this.channel1currentSampleRightTrimary = this.channel1currentSampleRightSecondary;\n    }\n    else {\n        this.channel1currentSampleLeftTrimary = 0;\n        this.channel1currentSampleRightTrimary = 0;\n    }\n    this.mixerOutputLevelCache();\n}\nGameBoyCore.prototype.channel2EnableCheck = function () {\n    this.channel2Enabled = ((this.channel2consecutive || this.channel2totalLength > 0) && this.channel2canPlay);\n    this.channel2OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel2VolumeEnableCheck = function () {\n    this.channel2canPlay = (this.memory[0xFF17] > 7);\n    this.channel2EnableCheck();\n    this.channel2OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel2OutputLevelCache = function () {\n    this.channel2currentSampleLeft = (this.leftChannel2) ? this.channel2envelopeVolume : 0;\n    this.channel2currentSampleRight = (this.rightChannel2) ? this.channel2envelopeVolume : 0;\n    this.channel2OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel2OutputLevelSecondaryCache = function () {\n    if (this.channel2Enabled) {\n        this.channel2currentSampleLeftSecondary = this.channel2currentSampleLeft;\n        this.channel2currentSampleRightSecondary = this.channel2currentSampleRight;\n    }\n    else {\n        this.channel2currentSampleLeftSecondary = 0;\n        this.channel2currentSampleRightSecondary = 0;\n    }\n    this.channel2OutputLevelTrimaryCache();\n}\nGameBoyCore.prototype.channel2OutputLevelTrimaryCache = function () {\n    if (this.channel2CachedDuty[this.channel2DutyTracker] && settings[14][1]) {\n        this.channel2currentSampleLeftTrimary = this.channel2currentSampleLeftSecondary;\n        this.channel2currentSampleRightTrimary = this.channel2currentSampleRightSecondary;\n    }\n    else {\n        this.channel2currentSampleLeftTrimary = 0;\n        this.channel2currentSampleRightTrimary = 0;\n    }\n    this.mixerOutputLevelCache();\n}\nGameBoyCore.prototype.channel3EnableCheck = function () {\n    this.channel3Enabled = (/*this.channel3canPlay && */(this.channel3consecutive || this.channel3totalLength > 0));\n    this.channel3OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel3OutputLevelCache = function () {\n    this.channel3currentSampleLeft = (this.leftChannel3) ? this.cachedChannel3Sample : 0;\n    this.channel3currentSampleRight = (this.rightChannel3) ? this.cachedChannel3Sample : 0;\n    this.channel3OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel3OutputLevelSecondaryCache = function () {\n    if (this.channel3Enabled && settings[14][2]) {\n        this.channel3currentSampleLeftSecondary = this.channel3currentSampleLeft;\n        this.channel3currentSampleRightSecondary = this.channel3currentSampleRight;\n    }\n    else {\n        this.channel3currentSampleLeftSecondary = 0;\n        this.channel3currentSampleRightSecondary = 0;\n    }\n    this.mixerOutputLevelCache();\n}\nGameBoyCore.prototype.channel4EnableCheck = function () {\n    this.channel4Enabled = ((this.channel4consecutive || this.channel4totalLength > 0) && this.channel4canPlay);\n    this.channel4OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel4VolumeEnableCheck = function () {\n    this.channel4canPlay = (this.memory[0xFF21] > 7);\n    this.channel4EnableCheck();\n    this.channel4OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel4OutputLevelCache = function () {\n    this.channel4currentSampleLeft = (this.leftChannel4) ? this.cachedChannel4Sample : 0;\n    this.channel4currentSampleRight = (this.rightChannel4) ? this.cachedChannel4Sample : 0;\n    this.channel4OutputLevelSecondaryCache();\n}\nGameBoyCore.prototype.channel4OutputLevelSecondaryCache = function () {\n    if (this.channel4Enabled && settings[14][3]) {\n        this.channel4currentSampleLeftSecondary = this.channel4currentSampleLeft;\n        this.channel4currentSampleRightSecondary = this.channel4currentSampleRight;\n    }\n    else {\n        this.channel4currentSampleLeftSecondary = 0;\n        this.channel4currentSampleRightSecondary = 0;\n    }\n    this.mixerOutputLevelCache();\n}\nGameBoyCore.prototype.mixerOutputLevelCache = function () {\n    this.mixerOutputCache = ((((this.channel1currentSampleLeftTrimary + this.channel2currentSampleLeftTrimary + this.channel3currentSampleLeftSecondary + this.channel4currentSampleLeftSecondary) * this.VinLeftChannelMasterVolume) << 16) |\n    ((this.channel1currentSampleRightTrimary + this.channel2currentSampleRightTrimary + this.channel3currentSampleRightSecondary + this.channel4currentSampleRightSecondary) * this.VinRightChannelMasterVolume));\n}\nGameBoyCore.prototype.channel3UpdateCache = function () {\n    this.cachedChannel3Sample = this.channel3PCM[this.channel3lastSampleLookup] >> this.channel3patternType;\n    this.channel3OutputLevelCache();\n}\nGameBoyCore.prototype.channel3WriteRAM = function (address, data) {\n    if (this.channel3canPlay) {\n        this.audioJIT();\n        //address = this.channel3lastSampleLookup >> 1;\n    }\n    this.memory[0xFF30 | address] = data;\n    address <<= 1;\n    this.channel3PCM[address] = data >> 4;\n    this.channel3PCM[address | 1] = data & 0xF;\n}\nGameBoyCore.prototype.channel4UpdateCache = function () {\n    this.cachedChannel4Sample = this.noiseSampleTable[this.channel4currentVolume | this.channel4lastSampleLookup];\n    this.channel4OutputLevelCache();\n}\nGameBoyCore.prototype.run = function () {\n    //The preprocessing before the actual iteration loop:\n    if ((this.stopEmulator & 2) == 0) {\n        if ((this.stopEmulator & 1) == 1) {\n            if (!this.CPUStopped) {\n                this.stopEmulator = 0;\n                this.audioUnderrunAdjustment();\n                this.clockUpdate();         //RTC clocking.\n                if (!this.halt) {\n                    this.executeIteration();\n                }\n                else {                      //Finish the HALT rundown execution.\n                    this.CPUTicks = 0;\n                    this.calculateHALTPeriod();\n                    if (this.halt) {\n                        this.updateCore();\n                        this.iterationEndRoutine();\n                    }\n                    else {\n                        this.executeIteration();\n                    }\n                }\n                //Request the graphics target to be updated:\n                this.requestDraw();\n                this.frameDone = true;\n            }\n            else {\n                this.audioUnderrunAdjustment();\n                this.audioTicks += this.CPUCyclesTotal;\n                this.audioJIT();\n                this.stopEmulator |= 1;         //End current loop.\n            }\n        }\n        else {      //We can only get here if there was an internal error, but the loop was restarted.\n            console.log(\"Iterator restarted a faulted core.\");\n            pause();\n        }\n    }\n}\nGameBoyCore.prototype.executeIteration = function () {\n    //Iterate the interpreter loop:\n    var opcodeToExecute = 0;\n    var timedTicks = 0;\n    while (this.stopEmulator == 0) {\n        //Interrupt Arming:\n        switch (this.IRQEnableDelay) {\n            case 1:\n                this.IME = true;\n                this.checkIRQMatching();\n            case 2:\n                --this.IRQEnableDelay;\n        }\n        //Is an IRQ set to fire?:\n        if (this.IRQLineMatched > 0) {\n            //IME is true and and interrupt was matched:\n            this.launchIRQ();\n        }\n        //Fetch the current opcode:\n        opcodeToExecute = this.memoryReader[this.programCounter](this, this.programCounter);\n        //Increment the program counter to the next instruction:\n        this.programCounter = (this.programCounter + 1) & 0xFFFF;\n        //Check for the program counter quirk:\n        if (this.skipPCIncrement) {\n            this.programCounter = (this.programCounter - 1) & 0xFFFF;\n            this.skipPCIncrement = false;\n        }\n        //Get how many CPU cycles the current instruction counts for:\n        this.CPUTicks = this.TICKTable[opcodeToExecute];\n        //Execute the current instruction:\n        this.OPCODE[opcodeToExecute](this);\n        //Update the state (Inlined updateCoreFull manually here):\n        //Update the clocking for the LCD emulation:\n        this.LCDTicks += this.CPUTicks >> this.doubleSpeedShifter;  //LCD Timing\n        this.LCDCONTROL[this.actualScanLine](this);                 //Scan Line and STAT Mode Control\n        //Single-speed relative timing for A/V emulation:\n        timedTicks = this.CPUTicks >> this.doubleSpeedShifter;      //CPU clocking can be updated from the LCD handling.\n        this.audioTicks += timedTicks;                              //Audio Timing\n        this.emulatorTicks += timedTicks;                           //Emulator Timing\n        //CPU Timers:\n        this.DIVTicks += this.CPUTicks;                             //DIV Timing\n        if (this.TIMAEnabled) {                                     //TIMA Timing\n            this.timerTicks += this.CPUTicks;\n            while (this.timerTicks >= this.TACClocker) {\n                this.timerTicks -= this.TACClocker;\n                if (++this.memory[0xFF05] == 0x100) {\n                    this.memory[0xFF05] = this.memory[0xFF06];\n                    this.interruptsRequested |= 0x4;\n                    this.checkIRQMatching();\n                }\n            }\n        }\n        if (this.serialTimer > 0) {                                     //Serial Timing\n            //IRQ Counter:\n            this.serialTimer -= this.CPUTicks;\n            if (this.serialTimer <= 0) {\n                this.interruptsRequested |= 0x8;\n                this.checkIRQMatching();\n            }\n            //Bit Shit Counter:\n            this.serialShiftTimer -= this.CPUTicks;\n            if (this.serialShiftTimer <= 0) {\n                this.serialShiftTimer = this.serialShiftTimerAllocated;\n                this.memory[0xFF01] = ((this.memory[0xFF01] << 1) & 0xFE) | 0x01;   //We could shift in actual link data here if we were to implement such!!!\n            }\n        }\n        //End of iteration routine:\n        if (this.emulatorTicks >= this.CPUCyclesTotal) {\n            this.iterationEndRoutine();\n        }\n    }\n}\nGameBoyCore.prototype.iterationEndRoutine = function () {\n    if ((this.stopEmulator & 0x1) == 0) {\n        this.audioJIT();    //Make sure we at least output once per iteration.\n        //Update DIV Alignment (Integer overflow safety):\n        this.memory[0xFF04] = (this.memory[0xFF04] + (this.DIVTicks >> 8)) & 0xFF;\n        this.DIVTicks &= 0xFF;\n        //Update emulator flags:\n        this.stopEmulator |= 1;         //End current loop.\n        this.emulatorTicks -= this.CPUCyclesTotal;\n        this.CPUCyclesTotalCurrent += this.CPUCyclesTotalRoundoff;\n        this.recalculateIterationClockLimit();\n    }\n}\nGameBoyCore.prototype.handleSTOP = function () {\n    this.CPUStopped = true;                     //Stop CPU until joypad input changes.\n    this.iterationEndRoutine();\n    if (this.emulatorTicks < 0) {\n        this.audioTicks -= this.emulatorTicks;\n        this.audioJIT();\n    }\n}\nGameBoyCore.prototype.recalculateIterationClockLimit = function () {\n    var endModulus = this.CPUCyclesTotalCurrent % 4;\n    this.CPUCyclesTotal = this.CPUCyclesTotalBase + this.CPUCyclesTotalCurrent - endModulus;\n    this.CPUCyclesTotalCurrent = endModulus;\n}\nGameBoyCore.prototype.recalculateIterationClockLimitForAudio = function (audioClocking) {\n    this.CPUCyclesTotal += Math.min((audioClocking >> 2) << 2, this.CPUCyclesTotalBase << 1);\n}\nGameBoyCore.prototype.scanLineMode2 = function () { //OAM Search Period\n    if (this.STATTracker != 1) {\n        if (this.mode2TriggerSTAT) {\n            this.interruptsRequested |= 0x2;\n            this.checkIRQMatching();\n        }\n        this.STATTracker = 1;\n        this.modeSTAT = 2;\n    }\n}\nGameBoyCore.prototype.scanLineMode3 = function () { //Scan Line Drawing Period\n    if (this.modeSTAT != 3) {\n        if (this.STATTracker == 0 && this.mode2TriggerSTAT) {\n            this.interruptsRequested |= 0x2;\n            this.checkIRQMatching();\n        }\n        this.STATTracker = 1;\n        this.modeSTAT = 3;\n    }\n}\nGameBoyCore.prototype.scanLineMode0 = function () { //Horizontal Blanking Period\n    if (this.modeSTAT != 0) {\n        if (this.STATTracker != 2) {\n            if (this.STATTracker == 0) {\n                if (this.mode2TriggerSTAT) {\n                    this.interruptsRequested |= 0x2;\n                    this.checkIRQMatching();\n                }\n                this.modeSTAT = 3;\n            }\n            this.incrementScanLineQueue();\n            this.updateSpriteCount(this.actualScanLine);\n            this.STATTracker = 2;\n        }\n        if (this.LCDTicks >= this.spriteCount) {\n            if (this.hdmaRunning) {\n                this.executeHDMA();\n            }\n            if (this.mode0TriggerSTAT) {\n                this.interruptsRequested |= 0x2;\n                this.checkIRQMatching();\n            }\n            this.STATTracker = 3;\n            this.modeSTAT = 0;\n        }\n    }\n}\nGameBoyCore.prototype.clocksUntilLYCMatch = function () {\n    if (this.memory[0xFF45] != 0) {\n        if (this.memory[0xFF45] > this.actualScanLine) {\n            return 456 * (this.memory[0xFF45] - this.actualScanLine);\n        }\n        return 456 * (154 - this.actualScanLine + this.memory[0xFF45]);\n    }\n    return (456 * ((this.actualScanLine == 153 && this.memory[0xFF44] == 0) ? 154 : (153 - this.actualScanLine))) + 8;\n}\nGameBoyCore.prototype.clocksUntilMode0 = function () {\n    switch (this.modeSTAT) {\n        case 0:\n            if (this.actualScanLine == 143) {\n                this.updateSpriteCount(0);\n                return this.spriteCount + 5016;\n            }\n            this.updateSpriteCount(this.actualScanLine + 1);\n            return this.spriteCount + 456;\n        case 2:\n        case 3:\n            this.updateSpriteCount(this.actualScanLine);\n            return this.spriteCount;\n        case 1:\n            this.updateSpriteCount(0);\n            return this.spriteCount + (456 * (154 - this.actualScanLine));\n    }\n}\nGameBoyCore.prototype.updateSpriteCount = function (line) {\n    this.spriteCount = 252;\n    if (this.cGBC && this.gfxSpriteShow) {                                      //Is the window enabled and are we in CGB mode?\n        var lineAdjusted = line + 0x10;\n        var yoffset = 0;\n        var yCap = (this.gfxSpriteNormalHeight) ? 0x8 : 0x10;\n        for (var OAMAddress = 0xFE00; OAMAddress < 0xFEA0 && this.spriteCount < 312; OAMAddress += 4) {\n            yoffset = lineAdjusted - this.memory[OAMAddress];\n            if (yoffset > -1 && yoffset < yCap) {\n                this.spriteCount += 6;\n            }\n        }\n    }\n};\nGameBoyCore.prototype.matchLYC = function () {  //LYC Register Compare\n    if (this.memory[0xFF44] == this.memory[0xFF45]) {\n        this.memory[0xFF41] |= 0x04;\n        if (this.LYCMatchTriggerSTAT) {\n            this.interruptsRequested |= 0x2;\n            this.checkIRQMatching();\n        }\n    }\n    else {\n        this.memory[0xFF41] &= 0x7B;\n    }\n};\nGameBoyCore.prototype.updateCore = function () {\n    //Update the clocking for the LCD emulation:\n    this.LCDTicks += this.CPUTicks >> this.doubleSpeedShifter;  //LCD Timing\n    this.LCDCONTROL[this.actualScanLine](this);                 //Scan Line and STAT Mode Control\n    //Single-speed relative timing for A/V emulation:\n    var timedTicks = this.CPUTicks >> this.doubleSpeedShifter;  //CPU clocking can be updated from the LCD handling.\n    this.audioTicks += timedTicks;                              //Audio Timing\n    this.emulatorTicks += timedTicks;                           //Emulator Timing\n    //CPU Timers:\n    this.DIVTicks += this.CPUTicks;                             //DIV Timing\n    if (this.TIMAEnabled) {                                     //TIMA Timing\n        this.timerTicks += this.CPUTicks;\n        while (this.timerTicks >= this.TACClocker) {\n            this.timerTicks -= this.TACClocker;\n            if (++this.memory[0xFF05] == 0x100) {\n                this.memory[0xFF05] = this.memory[0xFF06];\n                this.interruptsRequested |= 0x4;\n                this.checkIRQMatching();\n            }\n        }\n    }\n    if (this.serialTimer > 0) {                                     //Serial Timing\n        //IRQ Counter:\n        this.serialTimer -= this.CPUTicks;\n        if (this.serialTimer <= 0) {\n            this.interruptsRequested |= 0x8;\n            this.checkIRQMatching();\n        }\n        //Bit Shit Counter:\n        this.serialShiftTimer -= this.CPUTicks;\n        if (this.serialShiftTimer <= 0) {\n            this.serialShiftTimer = this.serialShiftTimerAllocated;\n            this.memory[0xFF01] = ((this.memory[0xFF01] << 1) & 0xFE) | 0x01;   //We could shift in actual link data here if we were to implement such!!!\n        }\n    }\n};\nGameBoyCore.prototype.updateCoreFull = function () {\n    //Update the state machine:\n    this.updateCore();\n    //End of iteration routine:\n    if (this.emulatorTicks >= this.CPUCyclesTotal) {\n        this.iterationEndRoutine();\n    }\n};\nGameBoyCore.prototype.initializeLCDController = function () {\n    //Display on hanlding:\n    var line = 0;\n    while (line < 154) {\n        if (line < 143) {\n            //We're on a normal scan line:\n            this.LINECONTROL[line] = function (parentObj) {\n                if (parentObj.LCDTicks < 80) {\n                    parentObj.scanLineMode2();\n                }\n                else if (parentObj.LCDTicks < 252) {\n                    parentObj.scanLineMode3();\n                }\n                else if (parentObj.LCDTicks < 456) {\n                    parentObj.scanLineMode0();\n                }\n                else {\n                    //We're on a new scan line:\n                    parentObj.LCDTicks -= 456;\n                    if (parentObj.STATTracker != 3) {\n                        //Make sure the mode 0 handler was run at least once per scan line:\n                        if (parentObj.STATTracker != 2) {\n                            if (parentObj.STATTracker == 0 && parentObj.mode2TriggerSTAT) {\n                                parentObj.interruptsRequested |= 0x2;\n                            }\n                            parentObj.incrementScanLineQueue();\n                        }\n                        if (parentObj.hdmaRunning) {\n                            parentObj.executeHDMA();\n                        }\n                        if (parentObj.mode0TriggerSTAT) {\n                            parentObj.interruptsRequested |= 0x2;\n                        }\n                    }\n                    //Update the scanline registers and assert the LYC counter:\n                    parentObj.actualScanLine = ++parentObj.memory[0xFF44];\n                    //Perform a LYC counter assert:\n                    if (parentObj.actualScanLine == parentObj.memory[0xFF45]) {\n                        parentObj.memory[0xFF41] |= 0x04;\n                        if (parentObj.LYCMatchTriggerSTAT) {\n                            parentObj.interruptsRequested |= 0x2;\n                        }\n                    }\n                    else {\n                        parentObj.memory[0xFF41] &= 0x7B;\n                    }\n                    parentObj.checkIRQMatching();\n                    //Reset our mode contingency variables:\n                    parentObj.STATTracker = 0;\n                    parentObj.modeSTAT = 2;\n                    parentObj.LINECONTROL[parentObj.actualScanLine](parentObj); //Scan Line and STAT Mode Control.\n                }\n            }\n        }\n        else if (line == 143) {\n            //We're on the last visible scan line of the LCD screen:\n            this.LINECONTROL[143] = function (parentObj) {\n                if (parentObj.LCDTicks < 80) {\n                    parentObj.scanLineMode2();\n                }\n                else if (parentObj.LCDTicks < 252) {\n                    parentObj.scanLineMode3();\n                }\n                else if (parentObj.LCDTicks < 456) {\n                    parentObj.scanLineMode0();\n                }\n                else {\n                    //Starting V-Blank:\n                    //Just finished the last visible scan line:\n                    parentObj.LCDTicks -= 456;\n                    if (parentObj.STATTracker != 3) {\n                        //Make sure the mode 0 handler was run at least once per scan line:\n                        if (parentObj.STATTracker != 2) {\n                            if (parentObj.STATTracker == 0 && parentObj.mode2TriggerSTAT) {\n                                parentObj.interruptsRequested |= 0x2;\n                            }\n                            parentObj.incrementScanLineQueue();\n                        }\n                        if (parentObj.hdmaRunning) {\n                            parentObj.executeHDMA();\n                        }\n                        if (parentObj.mode0TriggerSTAT) {\n                            parentObj.interruptsRequested |= 0x2;\n                        }\n                    }\n                    //Update the scanline registers and assert the LYC counter:\n                    parentObj.actualScanLine = parentObj.memory[0xFF44] = 144;\n                    //Perform a LYC counter assert:\n                    if (parentObj.memory[0xFF45] == 144) {\n                        parentObj.memory[0xFF41] |= 0x04;\n                        if (parentObj.LYCMatchTriggerSTAT) {\n                            parentObj.interruptsRequested |= 0x2;\n                        }\n                    }\n                    else {\n                        parentObj.memory[0xFF41] &= 0x7B;\n                    }\n                    //Reset our mode contingency variables:\n                    parentObj.STATTracker = 0;\n                    //Update our state for v-blank:\n                    parentObj.modeSTAT = 1;\n                    parentObj.interruptsRequested |= (parentObj.mode1TriggerSTAT) ? 0x3 : 0x1;\n                    parentObj.checkIRQMatching();\n                    //Attempt to blit out to our canvas:\n                    if (parentObj.drewBlank == 0) {\n                        //Ensure JIT framing alignment:\n                        if (parentObj.totalLinesPassed < 144 || (parentObj.totalLinesPassed == 144 && parentObj.midScanlineOffset > -1)) {\n                            //Make sure our gfx are up-to-date:\n                            parentObj.graphicsJITVBlank();\n                            //Draw the frame:\n                            parentObj.prepareFrame();\n                        }\n                    }\n                    else {\n                        //LCD off takes at least 2 frames:\n                        --parentObj.drewBlank;\n                    }\n                    parentObj.LINECONTROL[144](parentObj);  //Scan Line and STAT Mode Control.\n                }\n            }\n        }\n        else if (line < 153) {\n            //In VBlank\n            this.LINECONTROL[line] = function (parentObj) {\n                if (parentObj.LCDTicks >= 456) {\n                    //We're on a new scan line:\n                    parentObj.LCDTicks -= 456;\n                    parentObj.actualScanLine = ++parentObj.memory[0xFF44];\n                    //Perform a LYC counter assert:\n                    if (parentObj.actualScanLine == parentObj.memory[0xFF45]) {\n                        parentObj.memory[0xFF41] |= 0x04;\n                        if (parentObj.LYCMatchTriggerSTAT) {\n                            parentObj.interruptsRequested |= 0x2;\n                            parentObj.checkIRQMatching();\n                        }\n                    }\n                    else {\n                        parentObj.memory[0xFF41] &= 0x7B;\n                    }\n                    parentObj.LINECONTROL[parentObj.actualScanLine](parentObj); //Scan Line and STAT Mode Control.\n                }\n            }\n        }\n        else {\n            //VBlank Ending (We're on the last actual scan line)\n            this.LINECONTROL[153] = function (parentObj) {\n                if (parentObj.LCDTicks >= 8) {\n                    if (parentObj.STATTracker != 4 && parentObj.memory[0xFF44] == 153) {\n                        parentObj.memory[0xFF44] = 0;   //LY register resets to 0 early.\n                        //Perform a LYC counter assert:\n                        if (parentObj.memory[0xFF45] == 0) {\n                            parentObj.memory[0xFF41] |= 0x04;\n                            if (parentObj.LYCMatchTriggerSTAT) {\n                                parentObj.interruptsRequested |= 0x2;\n                                parentObj.checkIRQMatching();\n                            }\n                        }\n                        else {\n                            parentObj.memory[0xFF41] &= 0x7B;\n                        }\n                        parentObj.STATTracker = 4;\n                    }\n                    if (parentObj.LCDTicks >= 456) {\n                        //We reset back to the beginning:\n                        parentObj.LCDTicks -= 456;\n                        parentObj.STATTracker = parentObj.actualScanLine = 0;\n                        parentObj.LINECONTROL[0](parentObj);    //Scan Line and STAT Mode Control.\n                    }\n                }\n            }\n        }\n        ++line;\n    }\n};\nGameBoyCore.prototype.DisplayShowOff = function () {\n    if (this.drewBlank == 0) {\n        //Output a blank screen to the output framebuffer:\n        this.clearFrameBuffer();\n        this.drewFrame = true;\n    }\n    this.drewBlank = 2;\n};\nGameBoyCore.prototype.executeHDMA = function () {\n    this.DMAWrite(1);\n    if (this.halt) {\n        if ((this.LCDTicks - this.spriteCount) < ((4 >> this.doubleSpeedShifter) | 0x20)) {\n            //HALT clocking correction:\n            this.CPUTicks = 4 + ((0x20 + this.spriteCount) << this.doubleSpeedShifter);\n            this.LCDTicks = this.spriteCount + ((4 >> this.doubleSpeedShifter) | 0x20);\n        }\n    }\n    else {\n        this.LCDTicks += (4 >> this.doubleSpeedShifter) | 0x20;         //LCD Timing Update For HDMA.\n    }\n    if (this.memory[0xFF55] == 0) {\n        this.hdmaRunning = false;\n        this.memory[0xFF55] = 0xFF; //Transfer completed (\"Hidden last step,\" since some ROMs don't imply this, but most do).\n    }\n    else {\n        --this.memory[0xFF55];\n    }\n};\nGameBoyCore.prototype.clockUpdate = function () {\n    if (this.cTIMER) {\n        var dateObj = new Date();\n        var newTime = dateObj.getTime();\n        var timeElapsed = newTime - this.lastIteration; //Get the numnber of milliseconds since this last executed.\n        this.lastIteration = newTime;\n        if (this.cTIMER && !this.RTCHALT) {\n            //Update the MBC3 RTC:\n            this.RTCSeconds += timeElapsed / 1000;\n            while (this.RTCSeconds >= 60) { //System can stutter, so the seconds difference can get large, thus the \"while\".\n                this.RTCSeconds -= 60;\n                ++this.RTCMinutes;\n                if (this.RTCMinutes >= 60) {\n                    this.RTCMinutes -= 60;\n                    ++this.RTCHours;\n                    if (this.RTCHours >= 24) {\n                        this.RTCHours -= 24;\n                        ++this.RTCDays;\n                        if (this.RTCDays >= 512) {\n                            this.RTCDays -= 512;\n                            this.RTCDayOverFlow = true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nGameBoyCore.prototype.prepareFrame = function () {\n    //Copy the internal frame buffer to the output buffer:\n    this.swizzleFrameBuffer();\n    this.drewFrame = true;\n}\nGameBoyCore.prototype.requestDraw = function () {\n    if (this.drewFrame) {\n        this.dispatchDraw();\n    }\n}\nGameBoyCore.prototype.dispatchDraw = function () {\n    if (this.offscreenRGBCount > 0) {\n        //We actually updated the graphics internally, so copy out:\n        if (this.offscreenRGBCount == 92160) {\n            this.processDraw(this.swizzledFrame);\n        }\n        else {\n            this.resizeFrameBuffer();\n        }\n    }\n}\n\n//ToDo: Remove this method, I don't think it's necessary.\n//Converts rgb canvas into rgba.\nGameBoyCore.prototype.processDraw = function (frameBuffer) {\n    var canvasRGBALength = this.offscreenRGBCount;\n    var canvasData = this.canvasBuffer.data;\n    var bufferIndex = 0;\n    for (var canvasIndex = 0; canvasIndex < canvasRGBALength; ++canvasIndex) {\n        canvasData[canvasIndex++] = frameBuffer[bufferIndex++];\n        canvasData[canvasIndex++] = frameBuffer[bufferIndex++];\n        canvasData[canvasIndex++] = frameBuffer[bufferIndex++];\n    }\n    this.graphicsBlit();\n    this.drewFrame = false;\n};\n\n//Which means I want to grab the swizzledFrame, not the normal frameBuffer(?)\n//ToDo: I believe (but am not sure) that I can remove this too.\nGameBoyCore.prototype.swizzleFrameBuffer = function () {\n    //Convert our dirty 24-bit (24-bit, with internal render flags above it) framebuffer to an 8-bit buffer with separate indices for the RGB channels:\n    var frameBuffer = this.frameBuffer;\n    var swizzledFrame = this.swizzledFrame;\n    var bufferIndex = 0;\n    for (var canvasIndex = 0; canvasIndex < 69120;) {\n        swizzledFrame[canvasIndex++] = (frameBuffer[bufferIndex] >> 16) & 0xFF;     //Red\n        swizzledFrame[canvasIndex++] = (frameBuffer[bufferIndex] >> 8) & 0xFF;      //Green\n        swizzledFrame[canvasIndex++] = frameBuffer[bufferIndex++] & 0xFF;           //Blue\n    }\n};\nGameBoyCore.prototype.clearFrameBuffer = function () {\n    var bufferIndex = 0;\n    var frameBuffer = this.swizzledFrame;\n    if (this.cGBC || this.colorizedGBPalettes) {\n        while (bufferIndex < 69120) {\n            frameBuffer[bufferIndex++] = 248;\n        }\n    }\n    else {\n        while (bufferIndex < 69120) {\n            frameBuffer[bufferIndex++] = 239;\n            frameBuffer[bufferIndex++] = 255;\n            frameBuffer[bufferIndex++] = 222;\n        }\n    }\n};\nGameBoyCore.prototype.resizeFrameBuffer = function () {\n    //Resize in javascript with resize.js:\n    if (this.resizePathClear) {\n        this.resizePathClear = false;\n        this.resizer.resize(this.swizzledFrame);\n    }\n};\nGameBoyCore.prototype.compileResizeFrameBufferFunction = function () {\n    if (this.offscreenRGBCount > 0) {\n        var parentObj = this;\n        this.resizer = new Resize(160, 144, this.offscreenWidth, this.offscreenHeight, false, settings[13], false, function (buffer) {\n            if ((buffer.length / 3 * 4) == parentObj.offscreenRGBCount) {\n                parentObj.processDraw(buffer);\n            }\n            parentObj.resizePathClear = true;\n        });\n    }\n};\nGameBoyCore.prototype.renderScanLine = function (scanlineToRender) {\n    this.pixelStart = scanlineToRender * 160;\n    if (this.bgEnabled) {\n        this.pixelEnd = 160;\n        this.BGLayerRender(scanlineToRender);\n        this.WindowLayerRender(scanlineToRender);\n    }\n    else {\n        var pixelLine = (scanlineToRender + 1) * 160;\n        var defaultColor = (this.cGBC || this.colorizedGBPalettes) ? 0xF8F8F8 : 0xEFFFDE;\n        for (var pixelPosition = (scanlineToRender * 160) + this.currentX; pixelPosition < pixelLine; pixelPosition++) {\n            this.frameBuffer[pixelPosition] = defaultColor;\n        }\n    }\n    this.SpriteLayerRender(scanlineToRender);\n    this.currentX = 0;\n    this.midScanlineOffset = -1;\n};\nGameBoyCore.prototype.renderMidScanLine = function () {\n    if (this.actualScanLine < 144 && this.modeSTAT == 3) {\n        //TODO: Get this accurate:\n        if (this.midScanlineOffset == -1) {\n            this.midScanlineOffset = this.backgroundX & 0x7;\n        }\n        if (this.LCDTicks >= 82) {\n            this.pixelEnd = this.LCDTicks - 74;\n            this.pixelEnd = Math.min(this.pixelEnd - this.midScanlineOffset - (this.pixelEnd % 0x8), 160);\n            if (this.bgEnabled) {\n                this.pixelStart = this.lastUnrenderedLine * 160;\n                this.BGLayerRender(this.lastUnrenderedLine);\n                this.WindowLayerRender(this.lastUnrenderedLine);\n                //TODO: Do midscanline JIT for sprites...\n            }\n            else {\n                var pixelLine = (this.lastUnrenderedLine * 160) + this.pixelEnd;\n                var defaultColor = (this.cGBC || this.colorizedGBPalettes) ? 0xF8F8F8 : 0xEFFFDE;\n                for (var pixelPosition = (this.lastUnrenderedLine * 160) + this.currentX; pixelPosition < pixelLine; pixelPosition++) {\n                    this.frameBuffer[pixelPosition] = defaultColor;\n                }\n            }\n            this.currentX = this.pixelEnd;\n        }\n    }\n};\nGameBoyCore.prototype.initializeModeSpecificArrays = function () {\n    this.LCDCONTROL = (this.LCDisOn) ? this.LINECONTROL : this.DISPLAYOFFCONTROL;\n    if (this.cGBC) {\n        this.gbcOBJRawPalette = this.getTypedArray(0x40, 0, \"uint8\");\n        this.gbcBGRawPalette = this.getTypedArray(0x40, 0, \"uint8\");\n        this.gbcOBJPalette = this.getTypedArray(0x20, 0x1000000, \"int32\");\n        this.gbcBGPalette = this.getTypedArray(0x40, 0, \"int32\");\n        this.BGCHRBank2 = this.getTypedArray(0x800, 0, \"uint8\");\n        this.BGCHRCurrentBank = (this.currVRAMBank > 0) ? this.BGCHRBank2 : this.BGCHRBank1;\n        this.tileCache = this.generateCacheArray(0xF80);\n    }\n    else {\n        this.gbOBJPalette = this.getTypedArray(8, 0, \"int32\");\n        this.gbBGPalette = this.getTypedArray(4, 0, \"int32\");\n        this.BGPalette = this.gbBGPalette;\n        this.OBJPalette = this.gbOBJPalette;\n        this.tileCache = this.generateCacheArray(0x700);\n        this.sortBuffer = this.getTypedArray(0x100, 0, \"uint8\");\n        this.OAMAddressCache = this.getTypedArray(10, 0, \"int32\");\n    }\n    this.renderPathBuild();\n};\nGameBoyCore.prototype.GBCtoGBModeAdjust = function () {\n    cout(\"Stepping down from GBC mode.\", 0);\n    this.VRAM = this.GBCMemory = this.BGCHRCurrentBank = this.BGCHRBank2 = null;\n    this.tileCache.length = 0x700;\n    if (settings[4]) {\n        this.gbBGColorizedPalette = this.getTypedArray(4, 0, \"int32\");\n        this.gbOBJColorizedPalette = this.getTypedArray(8, 0, \"int32\");\n        this.cachedBGPaletteConversion = this.getTypedArray(4, 0, \"int32\");\n        this.cachedOBJPaletteConversion = this.getTypedArray(8, 0, \"int32\");\n        this.BGPalette = this.gbBGColorizedPalette;\n        this.OBJPalette = this.gbOBJColorizedPalette;\n        this.gbOBJPalette = this.gbBGPalette = null;\n        this.getGBCColor();\n    }\n    else {\n        this.gbOBJPalette = this.getTypedArray(8, 0, \"int32\");\n        this.gbBGPalette = this.getTypedArray(4, 0, \"int32\");\n        this.BGPalette = this.gbBGPalette;\n        this.OBJPalette = this.gbOBJPalette;\n    }\n    this.sortBuffer = this.getTypedArray(0x100, 0, \"uint8\");\n    this.OAMAddressCache = this.getTypedArray(10, 0, \"int32\");\n    this.renderPathBuild();\n    this.memoryReadJumpCompile();\n    this.memoryWriteJumpCompile();\n};\nGameBoyCore.prototype.renderPathBuild = function () {\n    if (!this.cGBC) {\n        this.BGLayerRender = this.BGGBLayerRender;\n        this.WindowLayerRender = this.WindowGBLayerRender;\n        this.SpriteLayerRender = this.SpriteGBLayerRender;\n    }\n    else {\n        this.priorityFlaggingPathRebuild();\n        this.SpriteLayerRender = this.SpriteGBCLayerRender;\n    }\n};\nGameBoyCore.prototype.priorityFlaggingPathRebuild = function () {\n    if (this.BGPriorityEnabled) {\n        this.BGLayerRender = this.BGGBCLayerRender;\n        this.WindowLayerRender = this.WindowGBCLayerRender;\n    }\n    else {\n        this.BGLayerRender = this.BGGBCLayerRenderNoPriorityFlagging;\n        this.WindowLayerRender = this.WindowGBCLayerRenderNoPriorityFlagging;\n    }\n};\nGameBoyCore.prototype.initializeReferencesFromSaveState = function () {\n    this.LCDCONTROL = (this.LCDisOn) ? this.LINECONTROL : this.DISPLAYOFFCONTROL;\n    var tileIndex = 0;\n    if (!this.cGBC) {\n        if (this.colorizedGBPalettes) {\n            this.BGPalette = this.gbBGColorizedPalette;\n            this.OBJPalette = this.gbOBJColorizedPalette;\n            this.updateGBBGPalette = this.updateGBColorizedBGPalette;\n            this.updateGBOBJPalette = this.updateGBColorizedOBJPalette;\n\n        }\n        else {\n            this.BGPalette = this.gbBGPalette;\n            this.OBJPalette = this.gbOBJPalette;\n        }\n        this.tileCache = this.generateCacheArray(0x700);\n        for (tileIndex = 0x8000; tileIndex < 0x9000; tileIndex += 2) {\n            this.generateGBOAMTileLine(tileIndex);\n        }\n        for (tileIndex = 0x9000; tileIndex < 0x9800; tileIndex += 2) {\n            this.generateGBTileLine(tileIndex);\n        }\n        this.sortBuffer = this.getTypedArray(0x100, 0, \"uint8\");\n        this.OAMAddressCache = this.getTypedArray(10, 0, \"int32\");\n    }\n    else {\n        this.BGCHRCurrentBank = (this.currVRAMBank > 0) ? this.BGCHRBank2 : this.BGCHRBank1;\n        this.tileCache = this.generateCacheArray(0xF80);\n        for (; tileIndex < 0x1800; tileIndex += 0x10) {\n            this.generateGBCTileBank1(tileIndex);\n            this.generateGBCTileBank2(tileIndex);\n        }\n    }\n    this.renderPathBuild();\n}\nGameBoyCore.prototype.RGBTint = function (value) {\n    //Adjustment for the GBC's tinting (According to Gambatte):\n    var r = value & 0x1F;\n    var g = (value >> 5) & 0x1F;\n    var b = (value >> 10) & 0x1F;\n    return ((r * 13 + g * 2 + b) >> 1) << 16 | (g * 3 + b) << 9 | (r * 3 + g * 2 + b * 11) >> 1;\n}\nGameBoyCore.prototype.getGBCColor = function () {\n    //GBC Colorization of DMG ROMs:\n    //BG\n    for (var counter = 0; counter < 4; counter++) {\n        var adjustedIndex = counter << 1;\n        //BG\n        this.cachedBGPaletteConversion[counter] = this.RGBTint((this.gbcBGRawPalette[adjustedIndex | 1] << 8) | this.gbcBGRawPalette[adjustedIndex]);\n        //OBJ 1\n        this.cachedOBJPaletteConversion[counter] = this.RGBTint((this.gbcOBJRawPalette[adjustedIndex | 1] << 8) | this.gbcOBJRawPalette[adjustedIndex]);\n    }\n    //OBJ 2\n    for (counter = 4; counter < 8; counter++) {\n        adjustedIndex = counter << 1;\n        this.cachedOBJPaletteConversion[counter] = this.RGBTint((this.gbcOBJRawPalette[adjustedIndex | 1] << 8) | this.gbcOBJRawPalette[adjustedIndex]);\n    }\n    //Update the palette entries:\n    this.updateGBBGPalette = this.updateGBColorizedBGPalette;\n    this.updateGBOBJPalette = this.updateGBColorizedOBJPalette;\n    this.updateGBBGPalette(this.memory[0xFF47]);\n    this.updateGBOBJPalette(0, this.memory[0xFF48]);\n    this.updateGBOBJPalette(1, this.memory[0xFF49]);\n    this.colorizedGBPalettes = true;\n}\nGameBoyCore.prototype.updateGBRegularBGPalette = function (data) {\n    this.gbBGPalette[0] = this.colors[data & 0x03] | 0x2000000;\n    this.gbBGPalette[1] = this.colors[(data >> 2) & 0x03];\n    this.gbBGPalette[2] = this.colors[(data >> 4) & 0x03];\n    this.gbBGPalette[3] = this.colors[data >> 6];\n}\nGameBoyCore.prototype.updateGBColorizedBGPalette = function (data) {\n    //GB colorization:\n    this.gbBGColorizedPalette[0] = this.cachedBGPaletteConversion[data & 0x03] | 0x2000000;\n    this.gbBGColorizedPalette[1] = this.cachedBGPaletteConversion[(data >> 2) & 0x03];\n    this.gbBGColorizedPalette[2] = this.cachedBGPaletteConversion[(data >> 4) & 0x03];\n    this.gbBGColorizedPalette[3] = this.cachedBGPaletteConversion[data >> 6];\n}\nGameBoyCore.prototype.updateGBRegularOBJPalette = function (index, data) {\n    this.gbOBJPalette[index | 1] = this.colors[(data >> 2) & 0x03];\n    this.gbOBJPalette[index | 2] = this.colors[(data >> 4) & 0x03];\n    this.gbOBJPalette[index | 3] = this.colors[data >> 6];\n}\nGameBoyCore.prototype.updateGBColorizedOBJPalette = function (index, data) {\n    //GB colorization:\n    this.gbOBJColorizedPalette[index | 1] = this.cachedOBJPaletteConversion[index | ((data >> 2) & 0x03)];\n    this.gbOBJColorizedPalette[index | 2] = this.cachedOBJPaletteConversion[index | ((data >> 4) & 0x03)];\n    this.gbOBJColorizedPalette[index | 3] = this.cachedOBJPaletteConversion[index | (data >> 6)];\n}\nGameBoyCore.prototype.updateGBCBGPalette = function (index, data) {\n    if (this.gbcBGRawPalette[index] != data) {\n        this.midScanLineJIT();\n        //Update the color palette for BG tiles since it changed:\n        this.gbcBGRawPalette[index] = data;\n        if ((index & 0x06) == 0) {\n            //Palette 0 (Special tile Priority stuff)\n            data = 0x2000000 | this.RGBTint((this.gbcBGRawPalette[index | 1] << 8) | this.gbcBGRawPalette[index & 0x3E]);\n            index >>= 1;\n            this.gbcBGPalette[index] = data;\n            this.gbcBGPalette[0x20 | index] = 0x1000000 | data;\n        }\n        else {\n            //Regular Palettes (No special crap)\n            data = this.RGBTint((this.gbcBGRawPalette[index | 1] << 8) | this.gbcBGRawPalette[index & 0x3E]);\n            index >>= 1;\n            this.gbcBGPalette[index] = data;\n            this.gbcBGPalette[0x20 | index] = 0x1000000 | data;\n        }\n    }\n}\nGameBoyCore.prototype.updateGBCOBJPalette = function (index, data) {\n    if (this.gbcOBJRawPalette[index] != data) {\n        //Update the color palette for OBJ tiles since it changed:\n        this.gbcOBJRawPalette[index] = data;\n        if ((index & 0x06) > 0) {\n            //Regular Palettes (No special crap)\n            this.midScanLineJIT();\n            this.gbcOBJPalette[index >> 1] = 0x1000000 | this.RGBTint((this.gbcOBJRawPalette[index | 1] << 8) | this.gbcOBJRawPalette[index & 0x3E]);\n        }\n    }\n}\nGameBoyCore.prototype.BGGBLayerRender = function (scanlineToRender) {\n    var scrollYAdjusted = (this.backgroundY + scanlineToRender) & 0xFF;                     //The line of the BG we're at.\n    var tileYLine = (scrollYAdjusted & 7) << 3;\n    var tileYDown = this.gfxBackgroundCHRBankPosition | ((scrollYAdjusted & 0xF8) << 2);    //The row of cached tiles we're fetching from.\n    var scrollXAdjusted = (this.backgroundX + this.currentX) & 0xFF;                        //The scroll amount of the BG.\n    var pixelPosition = this.pixelStart + this.currentX;                                    //Current pixel we're working on.\n    var pixelPositionEnd = this.pixelStart + ((this.gfxWindowDisplay && (scanlineToRender - this.windowY) >= 0) ? Math.min(Math.max(this.windowX, 0) + this.currentX, this.pixelEnd) : this.pixelEnd);  //Make sure we do at most 160 pixels a scanline.\n    var tileNumber = tileYDown + (scrollXAdjusted >> 3);\n    var chrCode = this.BGCHRBank1[tileNumber];\n    if (chrCode < this.gfxBackgroundBankOffset) {\n        chrCode |= 0x100;\n    }\n    var tile = this.tileCache[chrCode];\n    for (var texel = (scrollXAdjusted & 0x7); texel < 8 && pixelPosition < pixelPositionEnd && scrollXAdjusted < 0x100; ++scrollXAdjusted) {\n        this.frameBuffer[pixelPosition++] = this.BGPalette[tile[tileYLine | texel++]];\n    }\n    var scrollXAdjustedAligned = Math.min(pixelPositionEnd - pixelPosition, 0x100 - scrollXAdjusted) >> 3;\n    scrollXAdjusted += scrollXAdjustedAligned << 3;\n    scrollXAdjustedAligned += tileNumber;\n    while (tileNumber < scrollXAdjustedAligned) {\n        chrCode = this.BGCHRBank1[++tileNumber];\n        if (chrCode < this.gfxBackgroundBankOffset) {\n            chrCode |= 0x100;\n        }\n        tile = this.tileCache[chrCode];\n        texel = tileYLine;\n        this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel]];\n    }\n    if (pixelPosition < pixelPositionEnd) {\n        if (scrollXAdjusted < 0x100) {\n            chrCode = this.BGCHRBank1[++tileNumber];\n            if (chrCode < this.gfxBackgroundBankOffset) {\n                chrCode |= 0x100;\n            }\n            tile = this.tileCache[chrCode];\n            for (texel = tileYLine - 1; pixelPosition < pixelPositionEnd && scrollXAdjusted < 0x100; ++scrollXAdjusted) {\n                this.frameBuffer[pixelPosition++] = this.BGPalette[tile[++texel]];\n            }\n        }\n        scrollXAdjustedAligned = ((pixelPositionEnd - pixelPosition) >> 3) + tileYDown;\n        while (tileYDown < scrollXAdjustedAligned) {\n            chrCode = this.BGCHRBank1[tileYDown++];\n            if (chrCode < this.gfxBackgroundBankOffset) {\n                chrCode |= 0x100;\n            }\n            tile = this.tileCache[chrCode];\n            texel = tileYLine;\n            this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel]];\n        }\n        if (pixelPosition < pixelPositionEnd) {\n            chrCode = this.BGCHRBank1[tileYDown];\n            if (chrCode < this.gfxBackgroundBankOffset) {\n                chrCode |= 0x100;\n            }\n            tile = this.tileCache[chrCode];\n            switch (pixelPositionEnd - pixelPosition) {\n                case 7:\n                    this.frameBuffer[pixelPosition + 6] = this.BGPalette[tile[tileYLine | 6]];\n                case 6:\n                    this.frameBuffer[pixelPosition + 5] = this.BGPalette[tile[tileYLine | 5]];\n                case 5:\n                    this.frameBuffer[pixelPosition + 4] = this.BGPalette[tile[tileYLine | 4]];\n                case 4:\n                    this.frameBuffer[pixelPosition + 3] = this.BGPalette[tile[tileYLine | 3]];\n                case 3:\n                    this.frameBuffer[pixelPosition + 2] = this.BGPalette[tile[tileYLine | 2]];\n                case 2:\n                    this.frameBuffer[pixelPosition + 1] = this.BGPalette[tile[tileYLine | 1]];\n                case 1:\n                    this.frameBuffer[pixelPosition] = this.BGPalette[tile[tileYLine]];\n            }\n        }\n    }\n}\nGameBoyCore.prototype.BGGBCLayerRender = function (scanlineToRender) {\n    var scrollYAdjusted = (this.backgroundY + scanlineToRender) & 0xFF;                     //The line of the BG we're at.\n    var tileYLine = (scrollYAdjusted & 7) << 3;\n    var tileYDown = this.gfxBackgroundCHRBankPosition | ((scrollYAdjusted & 0xF8) << 2);    //The row of cached tiles we're fetching from.\n    var scrollXAdjusted = (this.backgroundX + this.currentX) & 0xFF;                        //The scroll amount of the BG.\n    var pixelPosition = this.pixelStart + this.currentX;                                    //Current pixel we're working on.\n    var pixelPositionEnd = this.pixelStart + ((this.gfxWindowDisplay && (scanlineToRender - this.windowY) >= 0) ? Math.min(Math.max(this.windowX, 0) + this.currentX, this.pixelEnd) : this.pixelEnd);  //Make sure we do at most 160 pixels a scanline.\n    var tileNumber = tileYDown + (scrollXAdjusted >> 3);\n    var chrCode = this.BGCHRBank1[tileNumber];\n    if (chrCode < this.gfxBackgroundBankOffset) {\n        chrCode |= 0x100;\n    }\n    var attrCode = this.BGCHRBank2[tileNumber];\n    var tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n    var palette = ((attrCode & 0x7) << 2) | ((attrCode & 0x80) >> 2);\n    for (var texel = (scrollXAdjusted & 0x7); texel < 8 && pixelPosition < pixelPositionEnd && scrollXAdjusted < 0x100; ++scrollXAdjusted) {\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[tileYLine | texel++]];\n    }\n    var scrollXAdjustedAligned = Math.min(pixelPositionEnd - pixelPosition, 0x100 - scrollXAdjusted) >> 3;\n    scrollXAdjusted += scrollXAdjustedAligned << 3;\n    scrollXAdjustedAligned += tileNumber;\n    while (tileNumber < scrollXAdjustedAligned) {\n        chrCode = this.BGCHRBank1[++tileNumber];\n        if (chrCode < this.gfxBackgroundBankOffset) {\n            chrCode |= 0x100;\n        }\n        attrCode = this.BGCHRBank2[tileNumber];\n        tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n        palette = ((attrCode & 0x7) << 2) | ((attrCode & 0x80) >> 2);\n        texel = tileYLine;\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel]];\n    }\n    if (pixelPosition < pixelPositionEnd) {\n        if (scrollXAdjusted < 0x100) {\n            chrCode = this.BGCHRBank1[++tileNumber];\n            if (chrCode < this.gfxBackgroundBankOffset) {\n                chrCode |= 0x100;\n            }\n            attrCode = this.BGCHRBank2[tileNumber];\n            tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n            palette = ((attrCode & 0x7) << 2) | ((attrCode & 0x80) >> 2);\n            for (texel = tileYLine - 1; pixelPosition < pixelPositionEnd && scrollXAdjusted < 0x100; ++scrollXAdjusted) {\n                this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[++texel]];\n            }\n        }\n        scrollXAdjustedAligned = ((pixelPositionEnd - pixelPosition) >> 3) + tileYDown;\n        while (tileYDown < scrollXAdjustedAligned) {\n            chrCode = this.BGCHRBank1[tileYDown];\n            if (chrCode < this.gfxBackgroundBankOffset) {\n                chrCode |= 0x100;\n            }\n            attrCode = this.BGCHRBank2[tileYDown++];\n            tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n            palette = ((attrCode & 0x7) << 2) | ((attrCode & 0x80) >> 2);\n            texel = tileYLine;\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel]];\n        }\n        if (pixelPosition < pixelPositionEnd) {\n            chrCode = this.BGCHRBank1[tileYDown];\n            if (chrCode < this.gfxBackgroundBankOffset) {\n                chrCode |= 0x100;\n            }\n            attrCode = this.BGCHRBank2[tileYDown];\n            tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n            palette = ((attrCode & 0x7) << 2) | ((attrCode & 0x80) >> 2);\n            switch (pixelPositionEnd - pixelPosition) {\n                case 7:\n                    this.frameBuffer[pixelPosition + 6] = this.gbcBGPalette[palette | tile[tileYLine | 6]];\n                case 6:\n                    this.frameBuffer[pixelPosition + 5] = this.gbcBGPalette[palette | tile[tileYLine | 5]];\n                case 5:\n                    this.frameBuffer[pixelPosition + 4] = this.gbcBGPalette[palette | tile[tileYLine | 4]];\n                case 4:\n                    this.frameBuffer[pixelPosition + 3] = this.gbcBGPalette[palette | tile[tileYLine | 3]];\n                case 3:\n                    this.frameBuffer[pixelPosition + 2] = this.gbcBGPalette[palette | tile[tileYLine | 2]];\n                case 2:\n                    this.frameBuffer[pixelPosition + 1] = this.gbcBGPalette[palette | tile[tileYLine | 1]];\n                case 1:\n                    this.frameBuffer[pixelPosition] = this.gbcBGPalette[palette | tile[tileYLine]];\n            }\n        }\n    }\n}\nGameBoyCore.prototype.BGGBCLayerRenderNoPriorityFlagging = function (scanlineToRender) {\n    var scrollYAdjusted = (this.backgroundY + scanlineToRender) & 0xFF;                     //The line of the BG we're at.\n    var tileYLine = (scrollYAdjusted & 7) << 3;\n    var tileYDown = this.gfxBackgroundCHRBankPosition | ((scrollYAdjusted & 0xF8) << 2);    //The row of cached tiles we're fetching from.\n    var scrollXAdjusted = (this.backgroundX + this.currentX) & 0xFF;                        //The scroll amount of the BG.\n    var pixelPosition = this.pixelStart + this.currentX;                                    //Current pixel we're working on.\n    var pixelPositionEnd = this.pixelStart + ((this.gfxWindowDisplay && (scanlineToRender - this.windowY) >= 0) ? Math.min(Math.max(this.windowX, 0) + this.currentX, this.pixelEnd) : this.pixelEnd);  //Make sure we do at most 160 pixels a scanline.\n    var tileNumber = tileYDown + (scrollXAdjusted >> 3);\n    var chrCode = this.BGCHRBank1[tileNumber];\n    if (chrCode < this.gfxBackgroundBankOffset) {\n        chrCode |= 0x100;\n    }\n    var attrCode = this.BGCHRBank2[tileNumber];\n    var tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n    var palette = (attrCode & 0x7) << 2;\n    for (var texel = (scrollXAdjusted & 0x7); texel < 8 && pixelPosition < pixelPositionEnd && scrollXAdjusted < 0x100; ++scrollXAdjusted) {\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[tileYLine | texel++]];\n    }\n    var scrollXAdjustedAligned = Math.min(pixelPositionEnd - pixelPosition, 0x100 - scrollXAdjusted) >> 3;\n    scrollXAdjusted += scrollXAdjustedAligned << 3;\n    scrollXAdjustedAligned += tileNumber;\n    while (tileNumber < scrollXAdjustedAligned) {\n        chrCode = this.BGCHRBank1[++tileNumber];\n        if (chrCode < this.gfxBackgroundBankOffset) {\n            chrCode |= 0x100;\n        }\n        attrCode = this.BGCHRBank2[tileNumber];\n        tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n        palette = (attrCode & 0x7) << 2;\n        texel = tileYLine;\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n        this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel]];\n    }\n    if (pixelPosition < pixelPositionEnd) {\n        if (scrollXAdjusted < 0x100) {\n            chrCode = this.BGCHRBank1[++tileNumber];\n            if (chrCode < this.gfxBackgroundBankOffset) {\n                chrCode |= 0x100;\n            }\n            attrCode = this.BGCHRBank2[tileNumber];\n            tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n            palette = (attrCode & 0x7) << 2;\n            for (texel = tileYLine - 1; pixelPosition < pixelPositionEnd && scrollXAdjusted < 0x100; ++scrollXAdjusted) {\n                this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[++texel]];\n            }\n        }\n        scrollXAdjustedAligned = ((pixelPositionEnd - pixelPosition) >> 3) + tileYDown;\n        while (tileYDown < scrollXAdjustedAligned) {\n            chrCode = this.BGCHRBank1[tileYDown];\n            if (chrCode < this.gfxBackgroundBankOffset) {\n                chrCode |= 0x100;\n            }\n            attrCode = this.BGCHRBank2[tileYDown++];\n            tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n            palette = (attrCode & 0x7) << 2;\n            texel = tileYLine;\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n            this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel]];\n        }\n        if (pixelPosition < pixelPositionEnd) {\n            chrCode = this.BGCHRBank1[tileYDown];\n            if (chrCode < this.gfxBackgroundBankOffset) {\n                chrCode |= 0x100;\n            }\n            attrCode = this.BGCHRBank2[tileYDown];\n            tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n            palette = (attrCode & 0x7) << 2;\n            switch (pixelPositionEnd - pixelPosition) {\n                case 7:\n                    this.frameBuffer[pixelPosition + 6] = this.gbcBGPalette[palette | tile[tileYLine | 6]];\n                case 6:\n                    this.frameBuffer[pixelPosition + 5] = this.gbcBGPalette[palette | tile[tileYLine | 5]];\n                case 5:\n                    this.frameBuffer[pixelPosition + 4] = this.gbcBGPalette[palette | tile[tileYLine | 4]];\n                case 4:\n                    this.frameBuffer[pixelPosition + 3] = this.gbcBGPalette[palette | tile[tileYLine | 3]];\n                case 3:\n                    this.frameBuffer[pixelPosition + 2] = this.gbcBGPalette[palette | tile[tileYLine | 2]];\n                case 2:\n                    this.frameBuffer[pixelPosition + 1] = this.gbcBGPalette[palette | tile[tileYLine | 1]];\n                case 1:\n                    this.frameBuffer[pixelPosition] = this.gbcBGPalette[palette | tile[tileYLine]];\n            }\n        }\n    }\n}\nGameBoyCore.prototype.WindowGBLayerRender = function (scanlineToRender) {\n    if (this.gfxWindowDisplay) {                                    //Is the window enabled?\n        var scrollYAdjusted = scanlineToRender - this.windowY;      //The line of the BG we're at.\n        if (scrollYAdjusted >= 0) {\n            var scrollXRangeAdjusted = (this.windowX > 0) ? (this.windowX + this.currentX) : this.currentX;\n            var pixelPosition = this.pixelStart + scrollXRangeAdjusted;\n            var pixelPositionEnd = this.pixelStart + this.pixelEnd;\n            if (pixelPosition < pixelPositionEnd) {\n                var tileYLine = (scrollYAdjusted & 0x7) << 3;\n                var tileNumber = (this.gfxWindowCHRBankPosition | ((scrollYAdjusted & 0xF8) << 2)) + (this.currentX >> 3);\n                var chrCode = this.BGCHRBank1[tileNumber];\n                if (chrCode < this.gfxBackgroundBankOffset) {\n                    chrCode |= 0x100;\n                }\n                var tile = this.tileCache[chrCode];\n                var texel = (scrollXRangeAdjusted - this.windowX) & 0x7;\n                scrollXRangeAdjusted = Math.min(8, texel + pixelPositionEnd - pixelPosition);\n                while (texel < scrollXRangeAdjusted) {\n                    this.frameBuffer[pixelPosition++] = this.BGPalette[tile[tileYLine | texel++]];\n                }\n                scrollXRangeAdjusted = tileNumber + ((pixelPositionEnd - pixelPosition) >> 3);\n                while (tileNumber < scrollXRangeAdjusted) {\n                    chrCode = this.BGCHRBank1[++tileNumber];\n                    if (chrCode < this.gfxBackgroundBankOffset) {\n                        chrCode |= 0x100;\n                    }\n                    tile = this.tileCache[chrCode];\n                    texel = tileYLine;\n                    this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.BGPalette[tile[texel]];\n                }\n                if (pixelPosition < pixelPositionEnd) {\n                    chrCode = this.BGCHRBank1[++tileNumber];\n                    if (chrCode < this.gfxBackgroundBankOffset) {\n                        chrCode |= 0x100;\n                    }\n                    tile = this.tileCache[chrCode];\n                    switch (pixelPositionEnd - pixelPosition) {\n                        case 7:\n                            this.frameBuffer[pixelPosition + 6] = this.BGPalette[tile[tileYLine | 6]];\n                        case 6:\n                            this.frameBuffer[pixelPosition + 5] = this.BGPalette[tile[tileYLine | 5]];\n                        case 5:\n                            this.frameBuffer[pixelPosition + 4] = this.BGPalette[tile[tileYLine | 4]];\n                        case 4:\n                            this.frameBuffer[pixelPosition + 3] = this.BGPalette[tile[tileYLine | 3]];\n                        case 3:\n                            this.frameBuffer[pixelPosition + 2] = this.BGPalette[tile[tileYLine | 2]];\n                        case 2:\n                            this.frameBuffer[pixelPosition + 1] = this.BGPalette[tile[tileYLine | 1]];\n                        case 1:\n                            this.frameBuffer[pixelPosition] = this.BGPalette[tile[tileYLine]];\n                    }\n                }\n            }\n        }\n    }\n}\nGameBoyCore.prototype.WindowGBCLayerRender = function (scanlineToRender) {\n    if (this.gfxWindowDisplay) {                                    //Is the window enabled?\n        var scrollYAdjusted = scanlineToRender - this.windowY;      //The line of the BG we're at.\n        if (scrollYAdjusted >= 0) {\n            var scrollXRangeAdjusted = (this.windowX > 0) ? (this.windowX + this.currentX) : this.currentX;\n            var pixelPosition = this.pixelStart + scrollXRangeAdjusted;\n            var pixelPositionEnd = this.pixelStart + this.pixelEnd;\n            if (pixelPosition < pixelPositionEnd) {\n                var tileYLine = (scrollYAdjusted & 0x7) << 3;\n                var tileNumber = (this.gfxWindowCHRBankPosition | ((scrollYAdjusted & 0xF8) << 2)) + (this.currentX >> 3);\n                var chrCode = this.BGCHRBank1[tileNumber];\n                if (chrCode < this.gfxBackgroundBankOffset) {\n                    chrCode |= 0x100;\n                }\n                var attrCode = this.BGCHRBank2[tileNumber];\n                var tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n                var palette = ((attrCode & 0x7) << 2) | ((attrCode & 0x80) >> 2);\n                var texel = (scrollXRangeAdjusted - this.windowX) & 0x7;\n                scrollXRangeAdjusted = Math.min(8, texel + pixelPositionEnd - pixelPosition);\n                while (texel < scrollXRangeAdjusted) {\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[tileYLine | texel++]];\n                }\n                scrollXRangeAdjusted = tileNumber + ((pixelPositionEnd - pixelPosition) >> 3);\n                while (tileNumber < scrollXRangeAdjusted) {\n                    chrCode = this.BGCHRBank1[++tileNumber];\n                    if (chrCode < this.gfxBackgroundBankOffset) {\n                        chrCode |= 0x100;\n                    }\n                    attrCode = this.BGCHRBank2[tileNumber];\n                    tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n                    palette = ((attrCode & 0x7) << 2) | ((attrCode & 0x80) >> 2);\n                    texel = tileYLine;\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel]];\n                }\n                if (pixelPosition < pixelPositionEnd) {\n                    chrCode = this.BGCHRBank1[++tileNumber];\n                    if (chrCode < this.gfxBackgroundBankOffset) {\n                        chrCode |= 0x100;\n                    }\n                    attrCode = this.BGCHRBank2[tileNumber];\n                    tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n                    palette = ((attrCode & 0x7) << 2) | ((attrCode & 0x80) >> 2);\n                    switch (pixelPositionEnd - pixelPosition) {\n                        case 7:\n                            this.frameBuffer[pixelPosition + 6] = this.gbcBGPalette[palette | tile[tileYLine | 6]];\n                        case 6:\n                            this.frameBuffer[pixelPosition + 5] = this.gbcBGPalette[palette | tile[tileYLine | 5]];\n                        case 5:\n                            this.frameBuffer[pixelPosition + 4] = this.gbcBGPalette[palette | tile[tileYLine | 4]];\n                        case 4:\n                            this.frameBuffer[pixelPosition + 3] = this.gbcBGPalette[palette | tile[tileYLine | 3]];\n                        case 3:\n                            this.frameBuffer[pixelPosition + 2] = this.gbcBGPalette[palette | tile[tileYLine | 2]];\n                        case 2:\n                            this.frameBuffer[pixelPosition + 1] = this.gbcBGPalette[palette | tile[tileYLine | 1]];\n                        case 1:\n                            this.frameBuffer[pixelPosition] = this.gbcBGPalette[palette | tile[tileYLine]];\n                    }\n                }\n            }\n        }\n    }\n}\nGameBoyCore.prototype.WindowGBCLayerRenderNoPriorityFlagging = function (scanlineToRender) {\n    if (this.gfxWindowDisplay) {                                    //Is the window enabled?\n        var scrollYAdjusted = scanlineToRender - this.windowY;      //The line of the BG we're at.\n        if (scrollYAdjusted >= 0) {\n            var scrollXRangeAdjusted = (this.windowX > 0) ? (this.windowX + this.currentX) : this.currentX;\n            var pixelPosition = this.pixelStart + scrollXRangeAdjusted;\n            var pixelPositionEnd = this.pixelStart + this.pixelEnd;\n            if (pixelPosition < pixelPositionEnd) {\n                var tileYLine = (scrollYAdjusted & 0x7) << 3;\n                var tileNumber = (this.gfxWindowCHRBankPosition | ((scrollYAdjusted & 0xF8) << 2)) + (this.currentX >> 3);\n                var chrCode = this.BGCHRBank1[tileNumber];\n                if (chrCode < this.gfxBackgroundBankOffset) {\n                    chrCode |= 0x100;\n                }\n                var attrCode = this.BGCHRBank2[tileNumber];\n                var tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n                var palette = (attrCode & 0x7) << 2;\n                var texel = (scrollXRangeAdjusted - this.windowX) & 0x7;\n                scrollXRangeAdjusted = Math.min(8, texel + pixelPositionEnd - pixelPosition);\n                while (texel < scrollXRangeAdjusted) {\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[tileYLine | texel++]];\n                }\n                scrollXRangeAdjusted = tileNumber + ((pixelPositionEnd - pixelPosition) >> 3);\n                while (tileNumber < scrollXRangeAdjusted) {\n                    chrCode = this.BGCHRBank1[++tileNumber];\n                    if (chrCode < this.gfxBackgroundBankOffset) {\n                        chrCode |= 0x100;\n                    }\n                    attrCode = this.BGCHRBank2[tileNumber];\n                    tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n                    palette = (attrCode & 0x7) << 2;\n                    texel = tileYLine;\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel++]];\n                    this.frameBuffer[pixelPosition++] = this.gbcBGPalette[palette | tile[texel]];\n                }\n                if (pixelPosition < pixelPositionEnd) {\n                    chrCode = this.BGCHRBank1[++tileNumber];\n                    if (chrCode < this.gfxBackgroundBankOffset) {\n                        chrCode |= 0x100;\n                    }\n                    attrCode = this.BGCHRBank2[tileNumber];\n                    tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | chrCode];\n                    palette = (attrCode & 0x7) << 2;\n                    switch (pixelPositionEnd - pixelPosition) {\n                        case 7:\n                            this.frameBuffer[pixelPosition + 6] = this.gbcBGPalette[palette | tile[tileYLine | 6]];\n                        case 6:\n                            this.frameBuffer[pixelPosition + 5] = this.gbcBGPalette[palette | tile[tileYLine | 5]];\n                        case 5:\n                            this.frameBuffer[pixelPosition + 4] = this.gbcBGPalette[palette | tile[tileYLine | 4]];\n                        case 4:\n                            this.frameBuffer[pixelPosition + 3] = this.gbcBGPalette[palette | tile[tileYLine | 3]];\n                        case 3:\n                            this.frameBuffer[pixelPosition + 2] = this.gbcBGPalette[palette | tile[tileYLine | 2]];\n                        case 2:\n                            this.frameBuffer[pixelPosition + 1] = this.gbcBGPalette[palette | tile[tileYLine | 1]];\n                        case 1:\n                            this.frameBuffer[pixelPosition] = this.gbcBGPalette[palette | tile[tileYLine]];\n                    }\n                }\n            }\n        }\n    }\n}\nGameBoyCore.prototype.SpriteGBLayerRender = function (scanlineToRender) {\n    if (this.gfxSpriteShow) {                                       //Are sprites enabled?\n        var lineAdjusted = scanlineToRender + 0x10;\n        var OAMAddress = 0xFE00;\n        var yoffset = 0;\n        var xcoord = 1;\n        var xCoordStart = 0;\n        var xCoordEnd = 0;\n        var attrCode = 0;\n        var palette = 0;\n        var tile = null;\n        var data = 0;\n        var spriteCount = 0;\n        var length = 0;\n        var currentPixel = 0;\n        var linePixel = 0;\n        //Clear our x-coord sort buffer:\n        while (xcoord < 168) {\n            this.sortBuffer[xcoord++] = 0xFF;\n        }\n        if (this.gfxSpriteNormalHeight) {\n            //Draw the visible sprites:\n            for (var length = this.findLowestSpriteDrawable(lineAdjusted, 0x7); spriteCount < length; ++spriteCount) {\n                OAMAddress = this.OAMAddressCache[spriteCount];\n                yoffset = (lineAdjusted - this.memory[OAMAddress]) << 3;\n                attrCode = this.memory[OAMAddress | 3];\n                palette = (attrCode & 0x10) >> 2;\n                tile = this.tileCache[((attrCode & 0x60) << 4) | this.memory[OAMAddress | 0x2]];\n                linePixel = xCoordStart = this.memory[OAMAddress | 1];\n                xCoordEnd = Math.min(168 - linePixel, 8);\n                xcoord = (linePixel > 7) ? 0 : (8 - linePixel);\n                for (currentPixel = this.pixelStart + ((linePixel > 8) ? (linePixel - 8) : 0); xcoord < xCoordEnd; ++xcoord, ++currentPixel, ++linePixel) {\n                    if (this.sortBuffer[linePixel] > xCoordStart) {\n                        if (this.frameBuffer[currentPixel] >= 0x2000000) {\n                            data = tile[yoffset | xcoord];\n                            if (data > 0) {\n                                this.frameBuffer[currentPixel] = this.OBJPalette[palette | data];\n                                this.sortBuffer[linePixel] = xCoordStart;\n                            }\n                        }\n                        else if (this.frameBuffer[currentPixel] < 0x1000000) {\n                            data = tile[yoffset | xcoord];\n                            if (data > 0 && attrCode < 0x80) {\n                                this.frameBuffer[currentPixel] = this.OBJPalette[palette | data];\n                                this.sortBuffer[linePixel] = xCoordStart;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            //Draw the visible sprites:\n            for (var length = this.findLowestSpriteDrawable(lineAdjusted, 0xF); spriteCount < length; ++spriteCount) {\n                OAMAddress = this.OAMAddressCache[spriteCount];\n                yoffset = (lineAdjusted - this.memory[OAMAddress]) << 3;\n                attrCode = this.memory[OAMAddress | 3];\n                palette = (attrCode & 0x10) >> 2;\n                if ((attrCode & 0x40) == (0x40 & yoffset)) {\n                    tile = this.tileCache[((attrCode & 0x60) << 4) | (this.memory[OAMAddress | 0x2] & 0xFE)];\n                }\n                else {\n                    tile = this.tileCache[((attrCode & 0x60) << 4) | this.memory[OAMAddress | 0x2] | 1];\n                }\n                yoffset &= 0x3F;\n                linePixel = xCoordStart = this.memory[OAMAddress | 1];\n                xCoordEnd = Math.min(168 - linePixel, 8);\n                xcoord = (linePixel > 7) ? 0 : (8 - linePixel);\n                for (currentPixel = this.pixelStart + ((linePixel > 8) ? (linePixel - 8) : 0); xcoord < xCoordEnd; ++xcoord, ++currentPixel, ++linePixel) {\n                    if (this.sortBuffer[linePixel] > xCoordStart) {\n                        if (this.frameBuffer[currentPixel] >= 0x2000000) {\n                            data = tile[yoffset | xcoord];\n                            if (data > 0) {\n                                this.frameBuffer[currentPixel] = this.OBJPalette[palette | data];\n                                this.sortBuffer[linePixel] = xCoordStart;\n                            }\n                        }\n                        else if (this.frameBuffer[currentPixel] < 0x1000000) {\n                            data = tile[yoffset | xcoord];\n                            if (data > 0 && attrCode < 0x80) {\n                                this.frameBuffer[currentPixel] = this.OBJPalette[palette | data];\n                                this.sortBuffer[linePixel] = xCoordStart;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nGameBoyCore.prototype.findLowestSpriteDrawable = function (scanlineToRender, drawableRange) {\n    var address = 0xFE00;\n    var spriteCount = 0;\n    var diff = 0;\n    while (address < 0xFEA0 && spriteCount < 10) {\n        diff = scanlineToRender - this.memory[address];\n        if ((diff & drawableRange) == diff) {\n            this.OAMAddressCache[spriteCount++] = address;\n        }\n        address += 4;\n    }\n    return spriteCount;\n}\nGameBoyCore.prototype.SpriteGBCLayerRender = function (scanlineToRender) {\n    if (this.gfxSpriteShow) {                                       //Are sprites enabled?\n        var OAMAddress = 0xFE00;\n        var lineAdjusted = scanlineToRender + 0x10;\n        var yoffset = 0;\n        var xcoord = 0;\n        var endX = 0;\n        var xCounter = 0;\n        var attrCode = 0;\n        var palette = 0;\n        var tile = null;\n        var data = 0;\n        var currentPixel = 0;\n        var spriteCount = 0;\n        if (this.gfxSpriteNormalHeight) {\n            for (; OAMAddress < 0xFEA0 && spriteCount < 10; OAMAddress += 4) {\n                yoffset = lineAdjusted - this.memory[OAMAddress];\n                if ((yoffset & 0x7) == yoffset) {\n                    xcoord = this.memory[OAMAddress | 1] - 8;\n                    endX = Math.min(160, xcoord + 8);\n                    attrCode = this.memory[OAMAddress | 3];\n                    palette = (attrCode & 7) << 2;\n                    tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | this.memory[OAMAddress | 2]];\n                    xCounter = (xcoord > 0) ? xcoord : 0;\n                    xcoord -= yoffset << 3;\n                    for (currentPixel = this.pixelStart + xCounter; xCounter < endX; ++xCounter, ++currentPixel) {\n                        if (this.frameBuffer[currentPixel] >= 0x2000000) {\n                            data = tile[xCounter - xcoord];\n                            if (data > 0) {\n                                this.frameBuffer[currentPixel] = this.gbcOBJPalette[palette | data];\n                            }\n                        }\n                        else if (this.frameBuffer[currentPixel] < 0x1000000) {\n                            data = tile[xCounter - xcoord];\n                            if (data > 0 && attrCode < 0x80) {      //Don't optimize for attrCode, as LICM-capable JITs should optimize its checks.\n                                this.frameBuffer[currentPixel] = this.gbcOBJPalette[palette | data];\n                            }\n                        }\n                    }\n                    ++spriteCount;\n                }\n            }\n        }\n        else {\n            for (; OAMAddress < 0xFEA0 && spriteCount < 10; OAMAddress += 4) {\n                yoffset = lineAdjusted - this.memory[OAMAddress];\n                if ((yoffset & 0xF) == yoffset) {\n                    xcoord = this.memory[OAMAddress | 1] - 8;\n                    endX = Math.min(160, xcoord + 8);\n                    attrCode = this.memory[OAMAddress | 3];\n                    palette = (attrCode & 7) << 2;\n                    if ((attrCode & 0x40) == (0x40 & (yoffset << 3))) {\n                        tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | (this.memory[OAMAddress | 0x2] & 0xFE)];\n                    }\n                    else {\n                        tile = this.tileCache[((attrCode & 0x08) << 8) | ((attrCode & 0x60) << 4) | this.memory[OAMAddress | 0x2] | 1];\n                    }\n                    xCounter = (xcoord > 0) ? xcoord : 0;\n                    xcoord -= (yoffset & 0x7) << 3;\n                    for (currentPixel = this.pixelStart + xCounter; xCounter < endX; ++xCounter, ++currentPixel) {\n                        if (this.frameBuffer[currentPixel] >= 0x2000000) {\n                            data = tile[xCounter - xcoord];\n                            if (data > 0) {\n                                this.frameBuffer[currentPixel] = this.gbcOBJPalette[palette | data];\n                            }\n                        }\n                        else if (this.frameBuffer[currentPixel] < 0x1000000) {\n                            data = tile[xCounter - xcoord];\n                            if (data > 0 && attrCode < 0x80) {      //Don't optimize for attrCode, as LICM-capable JITs should optimize its checks.\n                                this.frameBuffer[currentPixel] = this.gbcOBJPalette[palette | data];\n                            }\n                        }\n                    }\n                    ++spriteCount;\n                }\n            }\n        }\n    }\n}\n//Generate only a single tile line for the GB tile cache mode:\nGameBoyCore.prototype.generateGBTileLine = function (address) {\n    var lineCopy = (this.memory[0x1 | address] << 8) | this.memory[0x9FFE & address];\n    var tileBlock = this.tileCache[(address & 0x1FF0) >> 4];\n    address = (address & 0xE) << 2;\n    tileBlock[address | 7] = ((lineCopy & 0x100) >> 7) | (lineCopy & 0x1);\n    tileBlock[address | 6] = ((lineCopy & 0x200) >> 8) | ((lineCopy & 0x2) >> 1);\n    tileBlock[address | 5] = ((lineCopy & 0x400) >> 9) | ((lineCopy & 0x4) >> 2);\n    tileBlock[address | 4] = ((lineCopy & 0x800) >> 10) | ((lineCopy & 0x8) >> 3);\n    tileBlock[address | 3] = ((lineCopy & 0x1000) >> 11) | ((lineCopy & 0x10) >> 4);\n    tileBlock[address | 2] = ((lineCopy & 0x2000) >> 12) | ((lineCopy & 0x20) >> 5);\n    tileBlock[address | 1] = ((lineCopy & 0x4000) >> 13) | ((lineCopy & 0x40) >> 6);\n    tileBlock[address] = ((lineCopy & 0x8000) >> 14) | ((lineCopy & 0x80) >> 7);\n}\n//Generate only a single tile line for the GBC tile cache mode (Bank 1):\nGameBoyCore.prototype.generateGBCTileLineBank1 = function (address) {\n    var lineCopy = (this.memory[0x1 | address] << 8) | this.memory[0x9FFE & address];\n    address &= 0x1FFE;\n    var tileBlock1 = this.tileCache[address >> 4];\n    var tileBlock2 = this.tileCache[0x200 | (address >> 4)];\n    var tileBlock3 = this.tileCache[0x400 | (address >> 4)];\n    var tileBlock4 = this.tileCache[0x600 | (address >> 4)];\n    address = (address & 0xE) << 2;\n    var addressFlipped = 0x38 - address;\n    tileBlock4[addressFlipped] = tileBlock2[address] = tileBlock3[addressFlipped | 7] = tileBlock1[address | 7] = ((lineCopy & 0x100) >> 7) | (lineCopy & 0x1);\n    tileBlock4[addressFlipped | 1] = tileBlock2[address | 1] = tileBlock3[addressFlipped | 6] = tileBlock1[address | 6] = ((lineCopy & 0x200) >> 8) | ((lineCopy & 0x2) >> 1);\n    tileBlock4[addressFlipped | 2] = tileBlock2[address | 2] = tileBlock3[addressFlipped | 5] = tileBlock1[address | 5] = ((lineCopy & 0x400) >> 9) | ((lineCopy & 0x4) >> 2);\n    tileBlock4[addressFlipped | 3] = tileBlock2[address | 3] = tileBlock3[addressFlipped | 4] = tileBlock1[address | 4] = ((lineCopy & 0x800) >> 10) | ((lineCopy & 0x8) >> 3);\n    tileBlock4[addressFlipped | 4] = tileBlock2[address | 4] = tileBlock3[addressFlipped | 3] = tileBlock1[address | 3] = ((lineCopy & 0x1000) >> 11) | ((lineCopy & 0x10) >> 4);\n    tileBlock4[addressFlipped | 5] = tileBlock2[address | 5] = tileBlock3[addressFlipped | 2] = tileBlock1[address | 2] = ((lineCopy & 0x2000) >> 12) | ((lineCopy & 0x20) >> 5);\n    tileBlock4[addressFlipped | 6] = tileBlock2[address | 6] = tileBlock3[addressFlipped | 1] = tileBlock1[address | 1] = ((lineCopy & 0x4000) >> 13) | ((lineCopy & 0x40) >> 6);\n    tileBlock4[addressFlipped | 7] = tileBlock2[address | 7] = tileBlock3[addressFlipped] = tileBlock1[address] = ((lineCopy & 0x8000) >> 14) | ((lineCopy & 0x80) >> 7);\n}\n//Generate all the flip combinations for a full GBC VRAM bank 1 tile:\nGameBoyCore.prototype.generateGBCTileBank1 = function (vramAddress) {\n    var address = vramAddress >> 4;\n    var tileBlock1 = this.tileCache[address];\n    var tileBlock2 = this.tileCache[0x200 | address];\n    var tileBlock3 = this.tileCache[0x400 | address];\n    var tileBlock4 = this.tileCache[0x600 | address];\n    var lineCopy = 0;\n    vramAddress |= 0x8000;\n    address = 0;\n    var addressFlipped = 56;\n    do {\n        lineCopy = (this.memory[0x1 | vramAddress] << 8) | this.memory[vramAddress];\n        tileBlock4[addressFlipped] = tileBlock2[address] = tileBlock3[addressFlipped | 7] = tileBlock1[address | 7] = ((lineCopy & 0x100) >> 7) | (lineCopy & 0x1);\n        tileBlock4[addressFlipped | 1] = tileBlock2[address | 1] = tileBlock3[addressFlipped | 6] = tileBlock1[address | 6] = ((lineCopy & 0x200) >> 8) | ((lineCopy & 0x2) >> 1);\n        tileBlock4[addressFlipped | 2] = tileBlock2[address | 2] = tileBlock3[addressFlipped | 5] = tileBlock1[address | 5] = ((lineCopy & 0x400) >> 9) | ((lineCopy & 0x4) >> 2);\n        tileBlock4[addressFlipped | 3] = tileBlock2[address | 3] = tileBlock3[addressFlipped | 4] = tileBlock1[address | 4] = ((lineCopy & 0x800) >> 10) | ((lineCopy & 0x8) >> 3);\n        tileBlock4[addressFlipped | 4] = tileBlock2[address | 4] = tileBlock3[addressFlipped | 3] = tileBlock1[address | 3] = ((lineCopy & 0x1000) >> 11) | ((lineCopy & 0x10) >> 4);\n        tileBlock4[addressFlipped | 5] = tileBlock2[address | 5] = tileBlock3[addressFlipped | 2] = tileBlock1[address | 2] = ((lineCopy & 0x2000) >> 12) | ((lineCopy & 0x20) >> 5);\n        tileBlock4[addressFlipped | 6] = tileBlock2[address | 6] = tileBlock3[addressFlipped | 1] = tileBlock1[address | 1] = ((lineCopy & 0x4000) >> 13) | ((lineCopy & 0x40) >> 6);\n        tileBlock4[addressFlipped | 7] = tileBlock2[address | 7] = tileBlock3[addressFlipped] = tileBlock1[address] = ((lineCopy & 0x8000) >> 14) | ((lineCopy & 0x80) >> 7);\n        address += 8;\n        addressFlipped -= 8;\n        vramAddress += 2;\n    } while (addressFlipped > -1);\n}\n//Generate only a single tile line for the GBC tile cache mode (Bank 2):\nGameBoyCore.prototype.generateGBCTileLineBank2 = function (address) {\n    var lineCopy = (this.VRAM[0x1 | address] << 8) | this.VRAM[0x1FFE & address];\n    var tileBlock1 = this.tileCache[0x800 | (address >> 4)];\n    var tileBlock2 = this.tileCache[0xA00 | (address >> 4)];\n    var tileBlock3 = this.tileCache[0xC00 | (address >> 4)];\n    var tileBlock4 = this.tileCache[0xE00 | (address >> 4)];\n    address = (address & 0xE) << 2;\n    var addressFlipped = 0x38 - address;\n    tileBlock4[addressFlipped] = tileBlock2[address] = tileBlock3[addressFlipped | 7] = tileBlock1[address | 7] = ((lineCopy & 0x100) >> 7) | (lineCopy & 0x1);\n    tileBlock4[addressFlipped | 1] = tileBlock2[address | 1] = tileBlock3[addressFlipped | 6] = tileBlock1[address | 6] = ((lineCopy & 0x200) >> 8) | ((lineCopy & 0x2) >> 1);\n    tileBlock4[addressFlipped | 2] = tileBlock2[address | 2] = tileBlock3[addressFlipped | 5] = tileBlock1[address | 5] = ((lineCopy & 0x400) >> 9) | ((lineCopy & 0x4) >> 2);\n    tileBlock4[addressFlipped | 3] = tileBlock2[address | 3] = tileBlock3[addressFlipped | 4] = tileBlock1[address | 4] = ((lineCopy & 0x800) >> 10) | ((lineCopy & 0x8) >> 3);\n    tileBlock4[addressFlipped | 4] = tileBlock2[address | 4] = tileBlock3[addressFlipped | 3] = tileBlock1[address | 3] = ((lineCopy & 0x1000) >> 11) | ((lineCopy & 0x10) >> 4);\n    tileBlock4[addressFlipped | 5] = tileBlock2[address | 5] = tileBlock3[addressFlipped | 2] = tileBlock1[address | 2] = ((lineCopy & 0x2000) >> 12) | ((lineCopy & 0x20) >> 5);\n    tileBlock4[addressFlipped | 6] = tileBlock2[address | 6] = tileBlock3[addressFlipped | 1] = tileBlock1[address | 1] = ((lineCopy & 0x4000) >> 13) | ((lineCopy & 0x40) >> 6);\n    tileBlock4[addressFlipped | 7] = tileBlock2[address | 7] = tileBlock3[addressFlipped] = tileBlock1[address] = ((lineCopy & 0x8000) >> 14) | ((lineCopy & 0x80) >> 7);\n}\n//Generate all the flip combinations for a full GBC VRAM bank 2 tile:\nGameBoyCore.prototype.generateGBCTileBank2 = function (vramAddress) {\n    var address = vramAddress >> 4;\n    var tileBlock1 = this.tileCache[0x800 | address];\n    var tileBlock2 = this.tileCache[0xA00 | address];\n    var tileBlock3 = this.tileCache[0xC00 | address];\n    var tileBlock4 = this.tileCache[0xE00 | address];\n    var lineCopy = 0;\n    address = 0;\n    var addressFlipped = 56;\n    do {\n        lineCopy = (this.VRAM[0x1 | vramAddress] << 8) | this.VRAM[vramAddress];\n        tileBlock4[addressFlipped] = tileBlock2[address] = tileBlock3[addressFlipped | 7] = tileBlock1[address | 7] = ((lineCopy & 0x100) >> 7) | (lineCopy & 0x1);\n        tileBlock4[addressFlipped | 1] = tileBlock2[address | 1] = tileBlock3[addressFlipped | 6] = tileBlock1[address | 6] = ((lineCopy & 0x200) >> 8) | ((lineCopy & 0x2) >> 1);\n        tileBlock4[addressFlipped | 2] = tileBlock2[address | 2] = tileBlock3[addressFlipped | 5] = tileBlock1[address | 5] = ((lineCopy & 0x400) >> 9) | ((lineCopy & 0x4) >> 2);\n        tileBlock4[addressFlipped | 3] = tileBlock2[address | 3] = tileBlock3[addressFlipped | 4] = tileBlock1[address | 4] = ((lineCopy & 0x800) >> 10) | ((lineCopy & 0x8) >> 3);\n        tileBlock4[addressFlipped | 4] = tileBlock2[address | 4] = tileBlock3[addressFlipped | 3] = tileBlock1[address | 3] = ((lineCopy & 0x1000) >> 11) | ((lineCopy & 0x10) >> 4);\n        tileBlock4[addressFlipped | 5] = tileBlock2[address | 5] = tileBlock3[addressFlipped | 2] = tileBlock1[address | 2] = ((lineCopy & 0x2000) >> 12) | ((lineCopy & 0x20) >> 5);\n        tileBlock4[addressFlipped | 6] = tileBlock2[address | 6] = tileBlock3[addressFlipped | 1] = tileBlock1[address | 1] = ((lineCopy & 0x4000) >> 13) | ((lineCopy & 0x40) >> 6);\n        tileBlock4[addressFlipped | 7] = tileBlock2[address | 7] = tileBlock3[addressFlipped] = tileBlock1[address] = ((lineCopy & 0x8000) >> 14) | ((lineCopy & 0x80) >> 7);\n        address += 8;\n        addressFlipped -= 8;\n        vramAddress += 2;\n    } while (addressFlipped > -1);\n}\n//Generate only a single tile line for the GB tile cache mode (OAM accessible range):\nGameBoyCore.prototype.generateGBOAMTileLine = function (address) {\n    var lineCopy = (this.memory[0x1 | address] << 8) | this.memory[0x9FFE & address];\n    address &= 0x1FFE;\n    var tileBlock1 = this.tileCache[address >> 4];\n    var tileBlock2 = this.tileCache[0x200 | (address >> 4)];\n    var tileBlock3 = this.tileCache[0x400 | (address >> 4)];\n    var tileBlock4 = this.tileCache[0x600 | (address >> 4)];\n    address = (address & 0xE) << 2;\n    var addressFlipped = 0x38 - address;\n    tileBlock4[addressFlipped] = tileBlock2[address] = tileBlock3[addressFlipped | 7] = tileBlock1[address | 7] = ((lineCopy & 0x100) >> 7) | (lineCopy & 0x1);\n    tileBlock4[addressFlipped | 1] = tileBlock2[address | 1] = tileBlock3[addressFlipped | 6] = tileBlock1[address | 6] = ((lineCopy & 0x200) >> 8) | ((lineCopy & 0x2) >> 1);\n    tileBlock4[addressFlipped | 2] = tileBlock2[address | 2] = tileBlock3[addressFlipped | 5] = tileBlock1[address | 5] = ((lineCopy & 0x400) >> 9) | ((lineCopy & 0x4) >> 2);\n    tileBlock4[addressFlipped | 3] = tileBlock2[address | 3] = tileBlock3[addressFlipped | 4] = tileBlock1[address | 4] = ((lineCopy & 0x800) >> 10) | ((lineCopy & 0x8) >> 3);\n    tileBlock4[addressFlipped | 4] = tileBlock2[address | 4] = tileBlock3[addressFlipped | 3] = tileBlock1[address | 3] = ((lineCopy & 0x1000) >> 11) | ((lineCopy & 0x10) >> 4);\n    tileBlock4[addressFlipped | 5] = tileBlock2[address | 5] = tileBlock3[addressFlipped | 2] = tileBlock1[address | 2] = ((lineCopy & 0x2000) >> 12) | ((lineCopy & 0x20) >> 5);\n    tileBlock4[addressFlipped | 6] = tileBlock2[address | 6] = tileBlock3[addressFlipped | 1] = tileBlock1[address | 1] = ((lineCopy & 0x4000) >> 13) | ((lineCopy & 0x40) >> 6);\n    tileBlock4[addressFlipped | 7] = tileBlock2[address | 7] = tileBlock3[addressFlipped] = tileBlock1[address] = ((lineCopy & 0x8000) >> 14) | ((lineCopy & 0x80) >> 7);\n}\nGameBoyCore.prototype.graphicsJIT = function () {\n    if (this.LCDisOn) {\n        this.totalLinesPassed = 0;          //Mark frame for ensuring a JIT pass for the next framebuffer output.\n        this.graphicsJITScanlineGroup();\n    }\n}\nGameBoyCore.prototype.graphicsJITVBlank = function () {\n    //JIT the graphics to v-blank framing:\n    this.totalLinesPassed += this.queuedScanLines;\n    this.graphicsJITScanlineGroup();\n}\nGameBoyCore.prototype.graphicsJITScanlineGroup = function () {\n    //Normal rendering JIT, where we try to do groups of scanlines at once:\n    while (this.queuedScanLines > 0) {\n        this.renderScanLine(this.lastUnrenderedLine);\n        if (this.lastUnrenderedLine < 143) {\n            ++this.lastUnrenderedLine;\n        }\n        else {\n            this.lastUnrenderedLine = 0;\n        }\n        --this.queuedScanLines;\n    }\n}\nGameBoyCore.prototype.incrementScanLineQueue = function () {\n    if (this.queuedScanLines < 144) {\n        ++this.queuedScanLines;\n    }\n    else {\n        this.currentX = 0;\n        this.midScanlineOffset = -1;\n        if (this.lastUnrenderedLine < 143) {\n            ++this.lastUnrenderedLine;\n        }\n        else {\n            this.lastUnrenderedLine = 0;\n        }\n    }\n}\nGameBoyCore.prototype.midScanLineJIT = function () {\n    this.graphicsJIT();\n    this.renderMidScanLine();\n}\n//Check for the highest priority IRQ to fire:\nGameBoyCore.prototype.launchIRQ = function () {\n    var bitShift = 0;\n    var testbit = 1;\n    do {\n        //Check to see if an interrupt is enabled AND requested.\n        if ((testbit & this.IRQLineMatched) == testbit) {\n            this.IME = false;                       //Reset the interrupt enabling.\n            this.interruptsRequested -= testbit;    //Reset the interrupt request.\n            this.IRQLineMatched = 0;                //Reset the IRQ assertion.\n            //Interrupts have a certain clock cycle length:\n            this.CPUTicks = 20;\n            //Set the stack pointer to the current program counter value:\n            this.stackPointer = (this.stackPointer - 1) & 0xFFFF;\n            this.memoryWriter[this.stackPointer](this, this.stackPointer, this.programCounter >> 8);\n            this.stackPointer = (this.stackPointer - 1) & 0xFFFF;\n            this.memoryWriter[this.stackPointer](this, this.stackPointer, this.programCounter & 0xFF);\n            //Set the program counter to the interrupt's address:\n            this.programCounter = 0x40 | (bitShift << 3);\n            //Clock the core for mid-instruction updates:\n            this.updateCore();\n            return;                                 //We only want the highest priority interrupt.\n        }\n        testbit = 1 << ++bitShift;\n    } while (bitShift < 5);\n}\n/*\n    Check for IRQs to be fired while not in HALT:\n*/\nGameBoyCore.prototype.checkIRQMatching = function () {\n    if (this.IME) {\n        this.IRQLineMatched = this.interruptsEnabled & this.interruptsRequested & 0x1F;\n    }\n}\n/*\n    Handle the HALT opcode by predicting all IRQ cases correctly,\n    then selecting the next closest IRQ firing from the prediction to\n    clock up to. This prevents hacky looping that doesn't predict, but\n    instead just clocks through the core update procedure by one which\n    is very slow. Not many emulators do this because they have to cover\n    all the IRQ prediction cases and they usually get them wrong.\n*/\nGameBoyCore.prototype.calculateHALTPeriod = function () {\n    //Initialize our variables and start our prediction:\n    if (!this.halt) {\n        this.halt = true;\n        var currentClocks = -1;\n        var temp_var = 0;\n        if (this.LCDisOn) {\n            //If the LCD is enabled, then predict the LCD IRQs enabled:\n            if ((this.interruptsEnabled & 0x1) == 0x1) {\n                currentClocks = ((456 * (((this.modeSTAT == 1) ? 298 : 144) - this.actualScanLine)) - this.LCDTicks) << this.doubleSpeedShifter;\n            }\n            if ((this.interruptsEnabled & 0x2) == 0x2) {\n                if (this.mode0TriggerSTAT) {\n                    temp_var = (this.clocksUntilMode0() - this.LCDTicks) << this.doubleSpeedShifter;\n                    if (temp_var <= currentClocks || currentClocks == -1) {\n                        currentClocks = temp_var;\n                    }\n                }\n                if (this.mode1TriggerSTAT && (this.interruptsEnabled & 0x1) == 0) {\n                    temp_var = ((456 * (((this.modeSTAT == 1) ? 298 : 144) - this.actualScanLine)) - this.LCDTicks) << this.doubleSpeedShifter;\n                    if (temp_var <= currentClocks || currentClocks == -1) {\n                        currentClocks = temp_var;\n                    }\n                }\n                if (this.mode2TriggerSTAT) {\n                    temp_var = (((this.actualScanLine >= 143) ? (456 * (154 - this.actualScanLine)) : 456) - this.LCDTicks) << this.doubleSpeedShifter;\n                    if (temp_var <= currentClocks || currentClocks == -1) {\n                        currentClocks = temp_var;\n                    }\n                }\n                if (this.LYCMatchTriggerSTAT && this.memory[0xFF45] <= 153) {\n                    temp_var = (this.clocksUntilLYCMatch() - this.LCDTicks) << this.doubleSpeedShifter;\n                    if (temp_var <= currentClocks || currentClocks == -1) {\n                        currentClocks = temp_var;\n                    }\n                }\n            }\n        }\n        if (this.TIMAEnabled && (this.interruptsEnabled & 0x4) == 0x4) {\n            //CPU timer IRQ prediction:\n            temp_var = ((0x100 - this.memory[0xFF05]) * this.TACClocker) - this.timerTicks;\n            if (temp_var <= currentClocks || currentClocks == -1) {\n                currentClocks = temp_var;\n            }\n        }\n        if (this.serialTimer > 0 && (this.interruptsEnabled & 0x8) == 0x8) {\n            //Serial IRQ prediction:\n            if (this.serialTimer <= currentClocks || currentClocks == -1) {\n                currentClocks = this.serialTimer;\n            }\n        }\n    }\n    else {\n        var currentClocks = this.remainingClocks;\n    }\n    var maxClocks = (this.CPUCyclesTotal - this.emulatorTicks) << this.doubleSpeedShifter;\n    if (currentClocks >= 0) {\n        if (currentClocks <= maxClocks) {\n            //Exit out of HALT normally:\n            this.CPUTicks = Math.max(currentClocks, this.CPUTicks);\n            this.updateCoreFull();\n            this.halt = false;\n            this.CPUTicks = 0;\n        }\n        else {\n            //Still in HALT, clock only up to the clocks specified per iteration:\n            this.CPUTicks = Math.max(maxClocks, this.CPUTicks);\n            this.remainingClocks = currentClocks - this.CPUTicks;\n        }\n    }\n    else {\n        //Still in HALT, clock only up to the clocks specified per iteration:\n        //Will stay in HALT forever (Stuck in HALT forever), but the APU and LCD are still clocked, so don't pause:\n        this.CPUTicks += maxClocks;\n    }\n}\n//Memory Reading:\nGameBoyCore.prototype.memoryRead = function (address) {\n    //Act as a wrapper for reading the returns from the compiled jumps to memory.\n    return this.memoryReader[address](this, address);   //This seems to be faster than the usual if/else.\n}\nGameBoyCore.prototype.memoryHighRead = function (address) {\n    //Act as a wrapper for reading the returns from the compiled jumps to memory.\n    return this.memoryHighReader[address](this, address);   //This seems to be faster than the usual if/else.\n}\nGameBoyCore.prototype.memoryReadJumpCompile = function () {\n    //Faster in some browsers, since we are doing less conditionals overall by implementing them in advance.\n    for (var index = 0x0000; index <= 0xFFFF; index++) {\n        if (index < 0x4000) {\n            this.memoryReader[index] = this.memoryReadNormal;\n        }\n        else if (index < 0x8000) {\n            this.memoryReader[index] = this.memoryReadROM;\n        }\n        else if (index < 0x9800) {\n            this.memoryReader[index] = (this.cGBC) ? this.VRAMDATAReadCGBCPU : this.VRAMDATAReadDMGCPU;\n        }\n        else if (index < 0xA000) {\n            this.memoryReader[index] = (this.cGBC) ? this.VRAMCHRReadCGBCPU : this.VRAMCHRReadDMGCPU;\n        }\n        else if (index >= 0xA000 && index < 0xC000) {\n            if ((this.numRAMBanks == 1 / 16 && index < 0xA200) || this.numRAMBanks >= 1) {\n                if (this.cMBC7) {\n                    this.memoryReader[index] = this.memoryReadMBC7;\n                }\n                else if (!this.cMBC3) {\n                    this.memoryReader[index] = this.memoryReadMBC;\n                }\n                else {\n                    //MBC3 RTC + RAM:\n                    this.memoryReader[index] = this.memoryReadMBC3;\n                }\n            }\n            else {\n                this.memoryReader[index] = this.memoryReadBAD;\n            }\n        }\n        else if (index >= 0xC000 && index < 0xE000) {\n            if (!this.cGBC || index < 0xD000) {\n                this.memoryReader[index] = this.memoryReadNormal;\n            }\n            else {\n                this.memoryReader[index] = this.memoryReadGBCMemory;\n            }\n        }\n        else if (index >= 0xE000 && index < 0xFE00) {\n            if (!this.cGBC || index < 0xF000) {\n                this.memoryReader[index] = this.memoryReadECHONormal;\n            }\n            else {\n                this.memoryReader[index] = this.memoryReadECHOGBCMemory;\n            }\n        }\n        else if (index < 0xFEA0) {\n            this.memoryReader[index] = this.memoryReadOAM;\n        }\n        else if (this.cGBC && index >= 0xFEA0 && index < 0xFF00) {\n            this.memoryReader[index] = this.memoryReadNormal;\n        }\n        else if (index >= 0xFF00) {\n            switch (index) {\n                case 0xFF00:\n                    //JOYPAD:\n                    this.memoryHighReader[0] = this.memoryReader[0xFF00] = function (parentObj, address) {\n                        return 0xC0 | parentObj.memory[0xFF00]; //Top nibble returns as set.\n                    }\n                    break;\n                case 0xFF01:\n                    //SB\n                    this.memoryHighReader[0x01] = this.memoryReader[0xFF01] = function (parentObj, address) {\n                        return (parentObj.memory[0xFF02] < 0x80) ? parentObj.memory[0xFF01] : 0xFF;\n                    }\n                    break;\n                case 0xFF02:\n                    //SC\n                    if (this.cGBC) {\n                        this.memoryHighReader[0x02] = this.memoryReader[0xFF02] = function (parentObj, address) {\n                            return ((parentObj.serialTimer <= 0) ? 0x7C : 0xFC) | parentObj.memory[0xFF02];\n                        }\n                    }\n                    else {\n                        this.memoryHighReader[0x02] = this.memoryReader[0xFF02] = function (parentObj, address) {\n                            return ((parentObj.serialTimer <= 0) ? 0x7E : 0xFE) | parentObj.memory[0xFF02];\n                        }\n                    }\n                    break;\n                case 0xFF03:\n                    this.memoryHighReader[0x03] = this.memoryReader[0xFF03] = this.memoryReadBAD;\n                    break;\n                case 0xFF04:\n                    //DIV\n                    this.memoryHighReader[0x04] = this.memoryReader[0xFF04] = function (parentObj, address) {\n                        parentObj.memory[0xFF04] = (parentObj.memory[0xFF04] + (parentObj.DIVTicks >> 8)) & 0xFF;\n                        parentObj.DIVTicks &= 0xFF;\n                        return parentObj.memory[0xFF04];\n\n                    }\n                    break;\n                case 0xFF05:\n                case 0xFF06:\n                    this.memoryHighReader[index & 0xFF] = this.memoryHighReadNormal;\n                    this.memoryReader[index] = this.memoryReadNormal;\n                    break;\n                case 0xFF07:\n                    this.memoryHighReader[0x07] = this.memoryReader[0xFF07] = function (parentObj, address) {\n                        return 0xF8 | parentObj.memory[0xFF07];\n                    }\n                    break;\n                case 0xFF08:\n                case 0xFF09:\n                case 0xFF0A:\n                case 0xFF0B:\n                case 0xFF0C:\n                case 0xFF0D:\n                case 0xFF0E:\n                    this.memoryHighReader[index & 0xFF] = this.memoryReader[index] = this.memoryReadBAD;\n                    break;\n                case 0xFF0F:\n                    //IF\n                    this.memoryHighReader[0x0F] = this.memoryReader[0xFF0F] = function (parentObj, address) {\n                        return 0xE0 | parentObj.interruptsRequested;\n                    }\n                    break;\n                case 0xFF10:\n                    this.memoryHighReader[0x10] = this.memoryReader[0xFF10] = function (parentObj, address) {\n                        return 0x80 | parentObj.memory[0xFF10];\n                    }\n                    break;\n                case 0xFF11:\n                    this.memoryHighReader[0x11] = this.memoryReader[0xFF11] = function (parentObj, address) {\n                        return 0x3F | parentObj.memory[0xFF11];\n                    }\n                    break;\n                case 0xFF12:\n                    this.memoryHighReader[0x12] = this.memoryHighReadNormal;\n                    this.memoryReader[0xFF12] = this.memoryReadNormal;\n                    break;\n                case 0xFF13:\n                    this.memoryHighReader[0x13] = this.memoryReader[0xFF13] = this.memoryReadBAD;\n                    break;\n                case 0xFF14:\n                    this.memoryHighReader[0x14] = this.memoryReader[0xFF14] = function (parentObj, address) {\n                        return 0xBF | parentObj.memory[0xFF14];\n                    }\n                    break;\n                case 0xFF15:\n                    this.memoryHighReader[0x15] = this.memoryReadBAD;\n                    this.memoryReader[0xFF15] = this.memoryReadBAD;\n                    break;\n                case 0xFF16:\n                    this.memoryHighReader[0x16] = this.memoryReader[0xFF16] = function (parentObj, address) {\n                        return 0x3F | parentObj.memory[0xFF16];\n                    }\n                    break;\n                case 0xFF17:\n                    this.memoryHighReader[0x17] = this.memoryHighReadNormal;\n                    this.memoryReader[0xFF17] = this.memoryReadNormal;\n                    break;\n                case 0xFF18:\n                    this.memoryHighReader[0x18] = this.memoryReader[0xFF18] = this.memoryReadBAD;\n                    break;\n                case 0xFF19:\n                    this.memoryHighReader[0x19] = this.memoryReader[0xFF19] = function (parentObj, address) {\n                        return 0xBF | parentObj.memory[0xFF19];\n                    }\n                    break;\n                case 0xFF1A:\n                    this.memoryHighReader[0x1A] = this.memoryReader[0xFF1A] = function (parentObj, address) {\n                        return 0x7F | parentObj.memory[0xFF1A];\n                    }\n                    break;\n                case 0xFF1B:\n                    this.memoryHighReader[0x1B] = this.memoryReader[0xFF1B] = this.memoryReadBAD;\n                    break;\n                case 0xFF1C:\n                    this.memoryHighReader[0x1C] = this.memoryReader[0xFF1C] = function (parentObj, address) {\n                        return 0x9F | parentObj.memory[0xFF1C];\n                    }\n                    break;\n                case 0xFF1D:\n                    this.memoryHighReader[0x1D] = this.memoryReader[0xFF1D] = this.memoryReadBAD;\n                    break;\n                case 0xFF1E:\n                    this.memoryHighReader[0x1E] = this.memoryReader[0xFF1E] = function (parentObj, address) {\n                        return 0xBF | parentObj.memory[0xFF1E];\n                    }\n                    break;\n                case 0xFF1F:\n                case 0xFF20:\n                    this.memoryHighReader[index & 0xFF] = this.memoryReader[index] = this.memoryReadBAD;\n                    break;\n                case 0xFF21:\n                case 0xFF22:\n                    this.memoryHighReader[index & 0xFF] = this.memoryHighReadNormal;\n                    this.memoryReader[index] = this.memoryReadNormal;\n                    break;\n                case 0xFF23:\n                    this.memoryHighReader[0x23] = this.memoryReader[0xFF23] = function (parentObj, address) {\n                        return 0xBF | parentObj.memory[0xFF23];\n                    }\n                    break;\n                case 0xFF24:\n                case 0xFF25:\n                    this.memoryHighReader[index & 0xFF] = this.memoryHighReadNormal;\n                    this.memoryReader[index] = this.memoryReadNormal;\n                    break;\n                case 0xFF26:\n                    this.memoryHighReader[0x26] = this.memoryReader[0xFF26] = function (parentObj, address) {\n                        parentObj.audioJIT();\n                        return 0x70 | parentObj.memory[0xFF26];\n                    }\n                    break;\n                case 0xFF27:\n                case 0xFF28:\n                case 0xFF29:\n                case 0xFF2A:\n                case 0xFF2B:\n                case 0xFF2C:\n                case 0xFF2D:\n                case 0xFF2E:\n                case 0xFF2F:\n                    this.memoryHighReader[index & 0xFF] = this.memoryReader[index] = this.memoryReadBAD;\n                    break;\n                case 0xFF30:\n                case 0xFF31:\n                case 0xFF32:\n                case 0xFF33:\n                case 0xFF34:\n                case 0xFF35:\n                case 0xFF36:\n                case 0xFF37:\n                case 0xFF38:\n                case 0xFF39:\n                case 0xFF3A:\n                case 0xFF3B:\n                case 0xFF3C:\n                case 0xFF3D:\n                case 0xFF3E:\n                case 0xFF3F:\n                    this.memoryReader[index] = function (parentObj, address) {\n                        return (parentObj.channel3canPlay) ? parentObj.memory[0xFF00 | (parentObj.channel3lastSampleLookup >> 1)] : parentObj.memory[address];\n                    }\n                    this.memoryHighReader[index & 0xFF] = function (parentObj, address) {\n                        return (parentObj.channel3canPlay) ? parentObj.memory[0xFF00 | (parentObj.channel3lastSampleLookup >> 1)] : parentObj.memory[0xFF00 | address];\n                    }\n                    break;\n                case 0xFF40:\n                    this.memoryHighReader[0x40] = this.memoryHighReadNormal;\n                    this.memoryReader[0xFF40] = this.memoryReadNormal;\n                    break;\n                case 0xFF41:\n                    this.memoryHighReader[0x41] = this.memoryReader[0xFF41] = function (parentObj, address) {\n                        return 0x80 | parentObj.memory[0xFF41] | parentObj.modeSTAT;\n                    }\n                    break;\n                case 0xFF42:\n                    this.memoryHighReader[0x42] = this.memoryReader[0xFF42] = function (parentObj, address) {\n                        return parentObj.backgroundY;\n                    }\n                    break;\n                case 0xFF43:\n                    this.memoryHighReader[0x43] = this.memoryReader[0xFF43] = function (parentObj, address) {\n                        return parentObj.backgroundX;\n                    }\n                    break;\n                case 0xFF44:\n                    this.memoryHighReader[0x44] = this.memoryReader[0xFF44] = function (parentObj, address) {\n                        return ((parentObj.LCDisOn) ? parentObj.memory[0xFF44] : 0);\n                    }\n                    break;\n                case 0xFF45:\n                case 0xFF46:\n                case 0xFF47:\n                case 0xFF48:\n                case 0xFF49:\n                    this.memoryHighReader[index & 0xFF] = this.memoryHighReadNormal;\n                    this.memoryReader[index] = this.memoryReadNormal;\n                    break;\n                case 0xFF4A:\n                    //WY\n                    this.memoryHighReader[0x4A] = this.memoryReader[0xFF4A] = function (parentObj, address) {\n                        return parentObj.windowY;\n                    }\n                    break;\n                case 0xFF4B:\n                    this.memoryHighReader[0x4B] = this.memoryHighReadNormal;\n                    this.memoryReader[0xFF4B] = this.memoryReadNormal;\n                    break;\n                case 0xFF4C:\n                    this.memoryHighReader[0x4C] = this.memoryReader[0xFF4C] = this.memoryReadBAD;\n                    break;\n                case 0xFF4D:\n                    this.memoryHighReader[0x4D] = this.memoryHighReadNormal;\n                    this.memoryReader[0xFF4D] = this.memoryReadNormal;\n                    break;\n                case 0xFF4E:\n                    this.memoryHighReader[0x4E] = this.memoryReader[0xFF4E] = this.memoryReadBAD;\n                    break;\n                case 0xFF4F:\n                    this.memoryHighReader[0x4F] = this.memoryReader[0xFF4F] = function (parentObj, address) {\n                        return parentObj.currVRAMBank;\n                    }\n                    break;\n                case 0xFF50:\n                case 0xFF51:\n                case 0xFF52:\n                case 0xFF53:\n                case 0xFF54:\n                    this.memoryHighReader[index & 0xFF] = this.memoryHighReadNormal;\n                    this.memoryReader[index] = this.memoryReadNormal;\n                    break;\n                case 0xFF55:\n                    if (this.cGBC) {\n                        this.memoryHighReader[0x55] = this.memoryReader[0xFF55] = function (parentObj, address) {\n                            if (!parentObj.LCDisOn && parentObj.hdmaRunning) {  //Undocumented behavior alert: HDMA becomes GDMA when LCD is off (Worms Armageddon Fix).\n                                //DMA\n                                parentObj.DMAWrite((parentObj.memory[0xFF55] & 0x7F) + 1);\n                                parentObj.memory[0xFF55] = 0xFF;    //Transfer completed.\n                                parentObj.hdmaRunning = false;\n                            }\n                            return parentObj.memory[0xFF55];\n                        }\n                    }\n                    else {\n                        this.memoryReader[0xFF55] = this.memoryReadNormal;\n                        this.memoryHighReader[0x55] = this.memoryHighReadNormal;\n                    }\n                    break;\n                case 0xFF56:\n                    if (this.cGBC) {\n                        this.memoryHighReader[0x56] = this.memoryReader[0xFF56] = function (parentObj, address) {\n                            //Return IR \"not connected\" status:\n                            return 0x3C | ((parentObj.memory[0xFF56] >= 0xC0) ? (0x2 | (parentObj.memory[0xFF56] & 0xC1)) : (parentObj.memory[0xFF56] & 0xC3));\n                        }\n                    }\n                    else {\n                        this.memoryReader[0xFF56] = this.memoryReadNormal;\n                        this.memoryHighReader[0x56] = this.memoryHighReadNormal;\n                    }\n                    break;\n                case 0xFF57:\n                case 0xFF58:\n                case 0xFF59:\n                case 0xFF5A:\n                case 0xFF5B:\n                case 0xFF5C:\n                case 0xFF5D:\n                case 0xFF5E:\n                case 0xFF5F:\n                case 0xFF60:\n                case 0xFF61:\n                case 0xFF62:\n                case 0xFF63:\n                case 0xFF64:\n                case 0xFF65:\n                case 0xFF66:\n                case 0xFF67:\n                    this.memoryHighReader[index & 0xFF] = this.memoryReader[index] = this.memoryReadBAD;\n                    break;\n                case 0xFF68:\n                case 0xFF69:\n                case 0xFF6A:\n                case 0xFF6B:\n                    this.memoryHighReader[index & 0xFF] = this.memoryHighReadNormal;\n                    this.memoryReader[index] = this.memoryReadNormal;\n                    break;\n                case 0xFF6C:\n                    if (this.cGBC) {\n                        this.memoryHighReader[0x6C] = this.memoryReader[0xFF6C] = function (parentObj, address) {\n                            return 0xFE | parentObj.memory[0xFF6C];\n                        }\n                    }\n                    else {\n                        this.memoryHighReader[0x6C] = this.memoryReader[0xFF6C] = this.memoryReadBAD;\n                    }\n                    break;\n                case 0xFF6D:\n                case 0xFF6E:\n                case 0xFF6F:\n                    this.memoryHighReader[index & 0xFF] = this.memoryReader[index] = this.memoryReadBAD;\n                    break;\n                case 0xFF70:\n                    if (this.cGBC) {\n                        //SVBK\n                        this.memoryHighReader[0x70] = this.memoryReader[0xFF70] = function (parentObj, address) {\n                            return 0x40 | parentObj.memory[0xFF70];\n                        }\n                    }\n                    else {\n                        this.memoryHighReader[0x70] = this.memoryReader[0xFF70] = this.memoryReadBAD;\n                    }\n                    break;\n                case 0xFF71:\n                    this.memoryHighReader[0x71] = this.memoryReader[0xFF71] = this.memoryReadBAD;\n                    break;\n                case 0xFF72:\n                case 0xFF73:\n                    this.memoryHighReader[index & 0xFF] = this.memoryReader[index] = this.memoryReadNormal;\n                    break;\n                case 0xFF74:\n                    if (this.cGBC) {\n                        this.memoryHighReader[0x74] = this.memoryReader[0xFF74] = this.memoryReadNormal;\n                    }\n                    else {\n                        this.memoryHighReader[0x74] = this.memoryReader[0xFF74] = this.memoryReadBAD;\n                    }\n                    break;\n                case 0xFF75:\n                    this.memoryHighReader[0x75] = this.memoryReader[0xFF75] = function (parentObj, address) {\n                        return 0x8F | parentObj.memory[0xFF75];\n                    }\n                    break;\n                case 0xFF76:\n                case 0xFF77:\n                    this.memoryHighReader[index & 0xFF] = this.memoryReader[index] = function (parentObj, address) {\n                        return 0;\n                    }\n                    break;\n                case 0xFF78:\n                case 0xFF79:\n                case 0xFF7A:\n                case 0xFF7B:\n                case 0xFF7C:\n                case 0xFF7D:\n                case 0xFF7E:\n                case 0xFF7F:\n                    this.memoryHighReader[index & 0xFF] = this.memoryReader[index] = this.memoryReadBAD;\n                    break;\n                case 0xFFFF:\n                    //IE\n                    this.memoryHighReader[0xFF] = this.memoryReader[0xFFFF] = function (parentObj, address) {\n                        return parentObj.interruptsEnabled;\n                    }\n                    break;\n                default:\n                    this.memoryReader[index] = this.memoryReadNormal;\n                    this.memoryHighReader[index & 0xFF] = this.memoryHighReadNormal;\n            }\n        }\n        else {\n            this.memoryReader[index] = this.memoryReadBAD;\n        }\n    }\n}\nGameBoyCore.prototype.memoryReadNormal = function (parentObj, address) {\n    return parentObj.memory[address];\n}\nGameBoyCore.prototype.memoryHighReadNormal = function (parentObj, address) {\n    return parentObj.memory[0xFF00 | address];\n}\nGameBoyCore.prototype.memoryReadROM = function (parentObj, address) {\n    return parentObj.ROM[parentObj.currentROMBank + address];\n}\nGameBoyCore.prototype.memoryReadMBC = function (parentObj, address) {\n    //Switchable RAM\n    if (parentObj.MBCRAMBanksEnabled || settings[10]) {\n        return parentObj.MBCRam[address + parentObj.currMBCRAMBankPosition];\n    }\n    //cout(\"Reading from disabled RAM.\", 1);\n    return 0xFF;\n}\nGameBoyCore.prototype.memoryReadMBC7 = function (parentObj, address) {\n    //Switchable RAM\n    if (parentObj.MBCRAMBanksEnabled || settings[10]) {\n        switch (address) {\n            case 0xA000:\n            case 0xA060:\n            case 0xA070:\n                return 0;\n            case 0xA080:\n                //TODO: Gyro Control Register\n                return 0;\n            case 0xA050:\n                //Y High Byte\n                return parentObj.highY;\n            case 0xA040:\n                //Y Low Byte\n                return parentObj.lowY;\n            case 0xA030:\n                //X High Byte\n                return parentObj.highX;\n            case 0xA020:\n                //X Low Byte:\n                return parentObj.lowX;\n            default:\n                return parentObj.MBCRam[address + parentObj.currMBCRAMBankPosition];\n        }\n    }\n    //cout(\"Reading from disabled RAM.\", 1);\n    return 0xFF;\n}\nGameBoyCore.prototype.memoryReadMBC3 = function (parentObj, address) {\n    //Switchable RAM\n    if (parentObj.MBCRAMBanksEnabled || settings[10]) {\n        switch (parentObj.currMBCRAMBank) {\n            case 0x00:\n            case 0x01:\n            case 0x02:\n            case 0x03:\n                return parentObj.MBCRam[address + parentObj.currMBCRAMBankPosition];\n                break;\n            case 0x08:\n                return parentObj.latchedSeconds;\n                break;\n            case 0x09:\n                return parentObj.latchedMinutes;\n                break;\n            case 0x0A:\n                return parentObj.latchedHours;\n                break;\n            case 0x0B:\n                return parentObj.latchedLDays;\n                break;\n            case 0x0C:\n                return (((parentObj.RTCDayOverFlow) ? 0x80 : 0) + ((parentObj.RTCHALT) ? 0x40 : 0)) + parentObj.latchedHDays;\n        }\n    }\n    //cout(\"Reading from invalid or disabled RAM.\", 1);\n    return 0xFF;\n}\nGameBoyCore.prototype.memoryReadGBCMemory = function (parentObj, address) {\n    return parentObj.GBCMemory[address + parentObj.gbcRamBankPosition];\n}\nGameBoyCore.prototype.memoryReadOAM = function (parentObj, address) {\n    return (parentObj.modeSTAT > 1) ?  0xFF : parentObj.memory[address];\n}\nGameBoyCore.prototype.memoryReadECHOGBCMemory = function (parentObj, address) {\n    return parentObj.GBCMemory[address + parentObj.gbcRamBankPositionECHO];\n}\nGameBoyCore.prototype.memoryReadECHONormal = function (parentObj, address) {\n    return parentObj.memory[address - 0x2000];\n}\nGameBoyCore.prototype.memoryReadBAD = function (parentObj, address) {\n    return 0xFF;\n}\nGameBoyCore.prototype.VRAMDATAReadCGBCPU = function (parentObj, address) {\n    //CPU Side Reading The VRAM (Optimized for GameBoy Color)\n    return (parentObj.modeSTAT > 2) ? 0xFF : ((parentObj.currVRAMBank == 0) ? parentObj.memory[address] : parentObj.VRAM[address & 0x1FFF]);\n}\nGameBoyCore.prototype.VRAMDATAReadDMGCPU = function (parentObj, address) {\n    //CPU Side Reading The VRAM (Optimized for classic GameBoy)\n    return (parentObj.modeSTAT > 2) ? 0xFF : parentObj.memory[address];\n}\nGameBoyCore.prototype.VRAMCHRReadCGBCPU = function (parentObj, address) {\n    //CPU Side Reading the Character Data Map:\n    return (parentObj.modeSTAT > 2) ? 0xFF : parentObj.BGCHRCurrentBank[address & 0x7FF];\n}\nGameBoyCore.prototype.VRAMCHRReadDMGCPU = function (parentObj, address) {\n    //CPU Side Reading the Character Data Map:\n    return (parentObj.modeSTAT > 2) ? 0xFF : parentObj.BGCHRBank1[address & 0x7FF];\n}\nGameBoyCore.prototype.setCurrentMBC1ROMBank = function () {\n    //Read the cartridge ROM data from RAM memory:\n    switch (this.ROMBank1offs) {\n        case 0x00:\n        case 0x20:\n        case 0x40:\n        case 0x60:\n            //Bank calls for 0x00, 0x20, 0x40, and 0x60 are really for 0x01, 0x21, 0x41, and 0x61.\n            this.currentROMBank = (this.ROMBank1offs % this.ROMBankEdge) << 14;\n            break;\n        default:\n            this.currentROMBank = ((this.ROMBank1offs % this.ROMBankEdge) - 1) << 14;\n    }\n}\nGameBoyCore.prototype.setCurrentMBC2AND3ROMBank = function () {\n    //Read the cartridge ROM data from RAM memory:\n    //Only map bank 0 to bank 1 here (MBC2 is like MBC1, but can only do 16 banks, so only the bank 0 quirk appears for MBC2):\n    this.currentROMBank = Math.max((this.ROMBank1offs % this.ROMBankEdge) - 1, 0) << 14;\n}\nGameBoyCore.prototype.setCurrentMBC5ROMBank = function () {\n    //Read the cartridge ROM data from RAM memory:\n    this.currentROMBank = ((this.ROMBank1offs % this.ROMBankEdge) - 1) << 14;\n}\n//Memory Writing:\nGameBoyCore.prototype.memoryWrite = function (address, data) {\n    //Act as a wrapper for writing by compiled jumps to specific memory writing functions.\n    this.memoryWriter[address](this, address, data);\n}\n//0xFFXX fast path:\nGameBoyCore.prototype.memoryHighWrite = function (address, data) {\n    //Act as a wrapper for writing by compiled jumps to specific memory writing functions.\n    this.memoryHighWriter[address](this, address, data);\n}\nGameBoyCore.prototype.memoryWriteJumpCompile = function () {\n    //Faster in some browsers, since we are doing less conditionals overall by implementing them in advance.\n    for (var index = 0x0000; index <= 0xFFFF; index++) {\n        if (index < 0x8000) {\n            if (this.cMBC1) {\n                if (index < 0x2000) {\n                    this.memoryWriter[index] = this.MBCWriteEnable;\n                }\n                else if (index < 0x4000) {\n                    this.memoryWriter[index] = this.MBC1WriteROMBank;\n                }\n                else if (index < 0x6000) {\n                    this.memoryWriter[index] = this.MBC1WriteRAMBank;\n                }\n                else {\n                    this.memoryWriter[index] = this.MBC1WriteType;\n                }\n            }\n            else if (this.cMBC2) {\n                if (index < 0x1000) {\n                    this.memoryWriter[index] = this.MBCWriteEnable;\n                }\n                else if (index >= 0x2100 && index < 0x2200) {\n                    this.memoryWriter[index] = this.MBC2WriteROMBank;\n                }\n                else {\n                    this.memoryWriter[index] = this.cartIgnoreWrite;\n                }\n            }\n            else if (this.cMBC3) {\n                if (index < 0x2000) {\n                    this.memoryWriter[index] = this.MBCWriteEnable;\n                }\n                else if (index < 0x4000) {\n                    this.memoryWriter[index] = this.MBC3WriteROMBank;\n                }\n                else if (index < 0x6000) {\n                    this.memoryWriter[index] = this.MBC3WriteRAMBank;\n                }\n                else {\n                    this.memoryWriter[index] = this.MBC3WriteRTCLatch;\n                }\n            }\n            else if (this.cMBC5 || this.cRUMBLE || this.cMBC7) {\n                if (index < 0x2000) {\n                    this.memoryWriter[index] = this.MBCWriteEnable;\n                }\n                else if (index < 0x3000) {\n                    this.memoryWriter[index] = this.MBC5WriteROMBankLow;\n                }\n                else if (index < 0x4000) {\n                    this.memoryWriter[index] = this.MBC5WriteROMBankHigh;\n                }\n                else if (index < 0x6000) {\n                    this.memoryWriter[index] = (this.cRUMBLE) ? this.RUMBLEWriteRAMBank : this.MBC5WriteRAMBank;\n                }\n                else {\n                    this.memoryWriter[index] = this.cartIgnoreWrite;\n                }\n            }\n            else if (this.cHuC3) {\n                if (index < 0x2000) {\n                    this.memoryWriter[index] = this.MBCWriteEnable;\n                }\n                else if (index < 0x4000) {\n                    this.memoryWriter[index] = this.MBC3WriteROMBank;\n                }\n                else if (index < 0x6000) {\n                    this.memoryWriter[index] = this.HuC3WriteRAMBank;\n                }\n                else {\n                    this.memoryWriter[index] = this.cartIgnoreWrite;\n                }\n            }\n            else {\n                this.memoryWriter[index] = this.cartIgnoreWrite;\n            }\n        }\n        else if (index < 0x9000) {\n            this.memoryWriter[index] = (this.cGBC) ? this.VRAMGBCDATAWrite : this.VRAMGBDATAWrite;\n        }\n        else if (index < 0x9800) {\n            this.memoryWriter[index] = (this.cGBC) ? this.VRAMGBCDATAWrite : this.VRAMGBDATAUpperWrite;\n        }\n        else if (index < 0xA000) {\n            this.memoryWriter[index] = (this.cGBC) ? this.VRAMGBCCHRMAPWrite : this.VRAMGBCHRMAPWrite;\n        }\n        else if (index < 0xC000) {\n            if ((this.numRAMBanks == 1 / 16 && index < 0xA200) || this.numRAMBanks >= 1) {\n                if (!this.cMBC3) {\n                    this.memoryWriter[index] = this.memoryWriteMBCRAM;\n                }\n                else {\n                    //MBC3 RTC + RAM:\n                    this.memoryWriter[index] = this.memoryWriteMBC3RAM;\n                }\n            }\n            else {\n                this.memoryWriter[index] = this.cartIgnoreWrite;\n            }\n        }\n        else if (index < 0xE000) {\n            if (this.cGBC && index >= 0xD000) {\n                this.memoryWriter[index] = this.memoryWriteGBCRAM;\n            }\n            else {\n                this.memoryWriter[index] = this.memoryWriteNormal;\n            }\n        }\n        else if (index < 0xFE00) {\n            if (this.cGBC && index >= 0xF000) {\n                this.memoryWriter[index] = this.memoryWriteECHOGBCRAM;\n            }\n            else {\n                this.memoryWriter[index] = this.memoryWriteECHONormal;\n            }\n        }\n        else if (index <= 0xFEA0) {\n            this.memoryWriter[index] = this.memoryWriteOAMRAM;\n        }\n        else if (index < 0xFF00) {\n            if (this.cGBC) {                                            //Only GBC has access to this RAM.\n                this.memoryWriter[index] = this.memoryWriteNormal;\n            }\n            else {\n                this.memoryWriter[index] = this.cartIgnoreWrite;\n            }\n        }\n        else {\n            //Start the I/O initialization by filling in the slots as normal memory:\n            this.memoryWriter[index] = this.memoryWriteNormal;\n            this.memoryHighWriter[index & 0xFF] = this.memoryHighWriteNormal;\n        }\n    }\n    this.registerWriteJumpCompile();                //Compile the I/O write functions separately...\n}\nGameBoyCore.prototype.MBCWriteEnable = function (parentObj, address, data) {\n    //MBC RAM Bank Enable/Disable:\n    parentObj.MBCRAMBanksEnabled = ((data & 0x0F) == 0x0A); //If lower nibble is 0x0A, then enable, otherwise disable.\n}\nGameBoyCore.prototype.MBC1WriteROMBank = function (parentObj, address, data) {\n    //MBC1 ROM bank switching:\n    parentObj.ROMBank1offs = (parentObj.ROMBank1offs & 0x60) | (data & 0x1F);\n    parentObj.setCurrentMBC1ROMBank();\n}\nGameBoyCore.prototype.MBC1WriteRAMBank = function (parentObj, address, data) {\n    //MBC1 RAM bank switching\n    if (parentObj.MBC1Mode) {\n        //4/32 Mode\n        parentObj.currMBCRAMBank = data & 0x03;\n        parentObj.currMBCRAMBankPosition = (parentObj.currMBCRAMBank << 13) - 0xA000;\n    }\n    else {\n        //16/8 Mode\n        parentObj.ROMBank1offs = ((data & 0x03) << 5) | (parentObj.ROMBank1offs & 0x1F);\n        parentObj.setCurrentMBC1ROMBank();\n    }\n}\nGameBoyCore.prototype.MBC1WriteType = function (parentObj, address, data) {\n    //MBC1 mode setting:\n    parentObj.MBC1Mode = ((data & 0x1) == 0x1);\n    if (parentObj.MBC1Mode) {\n        parentObj.ROMBank1offs &= 0x1F;\n        parentObj.setCurrentMBC1ROMBank();\n    }\n    else {\n        parentObj.currMBCRAMBank = 0;\n        parentObj.currMBCRAMBankPosition = -0xA000;\n    }\n}\nGameBoyCore.prototype.MBC2WriteROMBank = function (parentObj, address, data) {\n    //MBC2 ROM bank switching:\n    parentObj.ROMBank1offs = data & 0x0F;\n    parentObj.setCurrentMBC2AND3ROMBank();\n}\nGameBoyCore.prototype.MBC3WriteROMBank = function (parentObj, address, data) {\n    //MBC3 ROM bank switching:\n    parentObj.ROMBank1offs = data & 0x7F;\n    parentObj.setCurrentMBC2AND3ROMBank();\n}\nGameBoyCore.prototype.MBC3WriteRAMBank = function (parentObj, address, data) {\n    parentObj.currMBCRAMBank = data;\n    if (data < 4) {\n        //MBC3 RAM bank switching\n        parentObj.currMBCRAMBankPosition = (parentObj.currMBCRAMBank << 13) - 0xA000;\n    }\n}\nGameBoyCore.prototype.MBC3WriteRTCLatch = function (parentObj, address, data) {\n    if (data == 0) {\n        parentObj.RTCisLatched = false;\n    }\n    else if (!parentObj.RTCisLatched) {\n        //Copy over the current RTC time for reading.\n        parentObj.RTCisLatched = true;\n        parentObj.latchedSeconds = parentObj.RTCSeconds | 0;\n        parentObj.latchedMinutes = parentObj.RTCMinutes;\n        parentObj.latchedHours = parentObj.RTCHours;\n        parentObj.latchedLDays = (parentObj.RTCDays & 0xFF);\n        parentObj.latchedHDays = parentObj.RTCDays >> 8;\n    }\n}\nGameBoyCore.prototype.MBC5WriteROMBankLow = function (parentObj, address, data) {\n    //MBC5 ROM bank switching:\n    parentObj.ROMBank1offs = (parentObj.ROMBank1offs & 0x100) | data;\n    parentObj.setCurrentMBC5ROMBank();\n}\nGameBoyCore.prototype.MBC5WriteROMBankHigh = function (parentObj, address, data) {\n    //MBC5 ROM bank switching (by least significant bit):\n    parentObj.ROMBank1offs  = ((data & 0x01) << 8) | (parentObj.ROMBank1offs & 0xFF);\n    parentObj.setCurrentMBC5ROMBank();\n}\nGameBoyCore.prototype.MBC5WriteRAMBank = function (parentObj, address, data) {\n    //MBC5 RAM bank switching\n    parentObj.currMBCRAMBank = data & 0xF;\n    parentObj.currMBCRAMBankPosition = (parentObj.currMBCRAMBank << 13) - 0xA000;\n}\nGameBoyCore.prototype.RUMBLEWriteRAMBank = function (parentObj, address, data) {\n    //MBC5 RAM bank switching\n    //Like MBC5, but bit 3 of the lower nibble is used for rumbling and bit 2 is ignored.\n    parentObj.currMBCRAMBank = data & 0x03;\n    parentObj.currMBCRAMBankPosition = (parentObj.currMBCRAMBank << 13) - 0xA000;\n}\nGameBoyCore.prototype.HuC3WriteRAMBank = function (parentObj, address, data) {\n    //HuC3 RAM bank switching\n    parentObj.currMBCRAMBank = data & 0x03;\n    parentObj.currMBCRAMBankPosition = (parentObj.currMBCRAMBank << 13) - 0xA000;\n}\nGameBoyCore.prototype.cartIgnoreWrite = function (parentObj, address, data) {\n    //We might have encountered illegal RAM writing or such, so just do nothing...\n}\nGameBoyCore.prototype.memoryWriteNormal = function (parentObj, address, data) {\n    parentObj.memory[address] = data;\n}\nGameBoyCore.prototype.memoryHighWriteNormal = function (parentObj, address, data) {\n    parentObj.memory[0xFF00 | address] = data;\n}\nGameBoyCore.prototype.memoryWriteMBCRAM = function (parentObj, address, data) {\n    if (parentObj.MBCRAMBanksEnabled || settings[10]) {\n        parentObj.MBCRam[address + parentObj.currMBCRAMBankPosition] = data;\n    }\n}\nGameBoyCore.prototype.memoryWriteMBC3RAM = function (parentObj, address, data) {\n    if (parentObj.MBCRAMBanksEnabled || settings[10]) {\n        switch (parentObj.currMBCRAMBank) {\n            case 0x00:\n            case 0x01:\n            case 0x02:\n            case 0x03:\n                parentObj.MBCRam[address + parentObj.currMBCRAMBankPosition] = data;\n                break;\n            case 0x08:\n                if (data < 60) {\n                    parentObj.RTCSeconds = data;\n                }\n                else {\n                    cout(\"(Bank #\" + parentObj.currMBCRAMBank + \") RTC write out of range: \" + data, 1);\n                }\n                break;\n            case 0x09:\n                if (data < 60) {\n                    parentObj.RTCMinutes = data;\n                }\n                else {\n                    cout(\"(Bank #\" + parentObj.currMBCRAMBank + \") RTC write out of range: \" + data, 1);\n                }\n                break;\n            case 0x0A:\n                if (data < 24) {\n                    parentObj.RTCHours = data;\n                }\n                else {\n                    cout(\"(Bank #\" + parentObj.currMBCRAMBank + \") RTC write out of range: \" + data, 1);\n                }\n                break;\n            case 0x0B:\n                parentObj.RTCDays = (data & 0xFF) | (parentObj.RTCDays & 0x100);\n                break;\n            case 0x0C:\n                parentObj.RTCDayOverFlow = (data > 0x7F);\n                parentObj.RTCHalt = (data & 0x40) == 0x40;\n                parentObj.RTCDays = ((data & 0x1) << 8) | (parentObj.RTCDays & 0xFF);\n                break;\n            default:\n                cout(\"Invalid MBC3 bank address selected: \" + parentObj.currMBCRAMBank, 0);\n        }\n    }\n}\nGameBoyCore.prototype.memoryWriteGBCRAM = function (parentObj, address, data) {\n    parentObj.GBCMemory[address + parentObj.gbcRamBankPosition] = data;\n}\nGameBoyCore.prototype.memoryWriteOAMRAM = function (parentObj, address, data) {\n    if (parentObj.modeSTAT < 2) {       //OAM RAM cannot be written to in mode 2 & 3\n        if (parentObj.memory[address] != data) {\n            parentObj.graphicsJIT();\n            parentObj.memory[address] = data;\n        }\n    }\n}\nGameBoyCore.prototype.memoryWriteECHOGBCRAM = function (parentObj, address, data) {\n    parentObj.GBCMemory[address + parentObj.gbcRamBankPositionECHO] = data;\n}\nGameBoyCore.prototype.memoryWriteECHONormal = function (parentObj, address, data) {\n    parentObj.memory[address - 0x2000] = data;\n}\nGameBoyCore.prototype.VRAMGBDATAWrite = function (parentObj, address, data) {\n    if (parentObj.modeSTAT < 3) {   //VRAM cannot be written to during mode 3\n        if (parentObj.memory[address] != data) {\n            //JIT the graphics render queue:\n            parentObj.graphicsJIT();\n            parentObj.memory[address] = data;\n            parentObj.generateGBOAMTileLine(address);\n        }\n    }\n}\nGameBoyCore.prototype.VRAMGBDATAUpperWrite = function (parentObj, address, data) {\n    if (parentObj.modeSTAT < 3) {   //VRAM cannot be written to during mode 3\n        if (parentObj.memory[address] != data) {\n            //JIT the graphics render queue:\n            parentObj.graphicsJIT();\n            parentObj.memory[address] = data;\n            parentObj.generateGBTileLine(address);\n        }\n    }\n}\nGameBoyCore.prototype.VRAMGBCDATAWrite = function (parentObj, address, data) {\n    if (parentObj.modeSTAT < 3) {   //VRAM cannot be written to during mode 3\n        if (parentObj.currVRAMBank == 0) {\n            if (parentObj.memory[address] != data) {\n                //JIT the graphics render queue:\n                parentObj.graphicsJIT();\n                parentObj.memory[address] = data;\n                parentObj.generateGBCTileLineBank1(address);\n            }\n        }\n        else {\n            address &= 0x1FFF;\n            if (parentObj.VRAM[address] != data) {\n                //JIT the graphics render queue:\n                parentObj.graphicsJIT();\n                parentObj.VRAM[address] = data;\n                parentObj.generateGBCTileLineBank2(address);\n            }\n        }\n    }\n}\nGameBoyCore.prototype.VRAMGBCHRMAPWrite = function (parentObj, address, data) {\n    if (parentObj.modeSTAT < 3) {   //VRAM cannot be written to during mode 3\n        address &= 0x7FF;\n        if (parentObj.BGCHRBank1[address] != data) {\n            //JIT the graphics render queue:\n            parentObj.graphicsJIT();\n            parentObj.BGCHRBank1[address] = data;\n        }\n    }\n}\nGameBoyCore.prototype.VRAMGBCCHRMAPWrite = function (parentObj, address, data) {\n    if (parentObj.modeSTAT < 3) {   //VRAM cannot be written to during mode 3\n        address &= 0x7FF;\n        if (parentObj.BGCHRCurrentBank[address] != data) {\n            //JIT the graphics render queue:\n            parentObj.graphicsJIT();\n            parentObj.BGCHRCurrentBank[address] = data;\n        }\n    }\n}\nGameBoyCore.prototype.DMAWrite = function (tilesToTransfer) {\n    if (!this.halt) {\n        //Clock the CPU for the DMA transfer (CPU is halted during the transfer):\n        this.CPUTicks += 4 | ((tilesToTransfer << 5) << this.doubleSpeedShifter);\n    }\n    //Source address of the transfer:\n    var source = (this.memory[0xFF51] << 8) | this.memory[0xFF52];\n    //Destination address in the VRAM memory range:\n    var destination = (this.memory[0xFF53] << 8) | this.memory[0xFF54];\n    //Creating some references:\n    var memoryReader = this.memoryReader;\n    //JIT the graphics render queue:\n    this.graphicsJIT();\n    var memory = this.memory;\n    //Determining which bank we're working on so we can optimize:\n    if (this.currVRAMBank == 0) {\n        //DMA transfer for VRAM bank 0:\n        do {\n            if (destination < 0x1800) {\n                memory[0x8000 | destination] = memoryReader[source](this, source++);\n                memory[0x8001 | destination] = memoryReader[source](this, source++);\n                memory[0x8002 | destination] = memoryReader[source](this, source++);\n                memory[0x8003 | destination] = memoryReader[source](this, source++);\n                memory[0x8004 | destination] = memoryReader[source](this, source++);\n                memory[0x8005 | destination] = memoryReader[source](this, source++);\n                memory[0x8006 | destination] = memoryReader[source](this, source++);\n                memory[0x8007 | destination] = memoryReader[source](this, source++);\n                memory[0x8008 | destination] = memoryReader[source](this, source++);\n                memory[0x8009 | destination] = memoryReader[source](this, source++);\n                memory[0x800A | destination] = memoryReader[source](this, source++);\n                memory[0x800B | destination] = memoryReader[source](this, source++);\n                memory[0x800C | destination] = memoryReader[source](this, source++);\n                memory[0x800D | destination] = memoryReader[source](this, source++);\n                memory[0x800E | destination] = memoryReader[source](this, source++);\n                memory[0x800F | destination] = memoryReader[source](this, source++);\n                this.generateGBCTileBank1(destination);\n                destination += 0x10;\n            }\n            else {\n                destination &= 0x7F0;\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank1[destination++] = memoryReader[source](this, source++);\n                destination = (destination + 0x1800) & 0x1FF0;\n            }\n            source &= 0xFFF0;\n            --tilesToTransfer;\n        } while (tilesToTransfer > 0);\n    }\n    else {\n        var VRAM = this.VRAM;\n        //DMA transfer for VRAM bank 1:\n        do {\n            if (destination < 0x1800) {\n                VRAM[destination] = memoryReader[source](this, source++);\n                VRAM[destination | 0x1] = memoryReader[source](this, source++);\n                VRAM[destination | 0x2] = memoryReader[source](this, source++);\n                VRAM[destination | 0x3] = memoryReader[source](this, source++);\n                VRAM[destination | 0x4] = memoryReader[source](this, source++);\n                VRAM[destination | 0x5] = memoryReader[source](this, source++);\n                VRAM[destination | 0x6] = memoryReader[source](this, source++);\n                VRAM[destination | 0x7] = memoryReader[source](this, source++);\n                VRAM[destination | 0x8] = memoryReader[source](this, source++);\n                VRAM[destination | 0x9] = memoryReader[source](this, source++);\n                VRAM[destination | 0xA] = memoryReader[source](this, source++);\n                VRAM[destination | 0xB] = memoryReader[source](this, source++);\n                VRAM[destination | 0xC] = memoryReader[source](this, source++);\n                VRAM[destination | 0xD] = memoryReader[source](this, source++);\n                VRAM[destination | 0xE] = memoryReader[source](this, source++);\n                VRAM[destination | 0xF] = memoryReader[source](this, source++);\n                this.generateGBCTileBank2(destination);\n                destination += 0x10;\n            }\n            else {\n                destination &= 0x7F0;\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                this.BGCHRBank2[destination++] = memoryReader[source](this, source++);\n                destination = (destination + 0x1800) & 0x1FF0;\n            }\n            source &= 0xFFF0;\n            --tilesToTransfer;\n        } while (tilesToTransfer > 0);\n    }\n    //Update the HDMA registers to their next addresses:\n    memory[0xFF51] = source >> 8;\n    memory[0xFF52] = source & 0xF0;\n    memory[0xFF53] = destination >> 8;\n    memory[0xFF54] = destination & 0xF0;\n}\nGameBoyCore.prototype.registerWriteJumpCompile = function () {\n    //I/O Registers (GB + GBC):\n    //JoyPad\n    this.memoryHighWriter[0] = this.memoryWriter[0xFF00] = function (parentObj, address, data) {\n        parentObj.memory[0xFF00] = (data & 0x30) | ((((data & 0x20) == 0) ? (parentObj.JoyPad >> 4) : 0xF) & (((data & 0x10) == 0) ? (parentObj.JoyPad & 0xF) : 0xF));\n    }\n    //SB (Serial Transfer Data)\n    this.memoryHighWriter[0x1] = this.memoryWriter[0xFF01] = function (parentObj, address, data) {\n        if (parentObj.memory[0xFF02] < 0x80) {  //Cannot write while a serial transfer is active.\n            parentObj.memory[0xFF01] = data;\n        }\n    }\n    //SC (Serial Transfer Control):\n    this.memoryHighWriter[0x2] = this.memoryHighWriteNormal;\n    this.memoryWriter[0xFF02] = this.memoryWriteNormal;\n    //Unmapped I/O:\n    this.memoryHighWriter[0x3] = this.memoryWriter[0xFF03] = this.cartIgnoreWrite;\n    //DIV\n    this.memoryHighWriter[0x4] = this.memoryWriter[0xFF04] = function (parentObj, address, data) {\n        parentObj.DIVTicks &= 0xFF; //Update DIV for realignment.\n        parentObj.memory[0xFF04] = 0;\n    }\n    //TIMA\n    this.memoryHighWriter[0x5] = this.memoryWriter[0xFF05] = function (parentObj, address, data) {\n        parentObj.memory[0xFF05] = data;\n    }\n    //TMA\n    this.memoryHighWriter[0x6] = this.memoryWriter[0xFF06] = function (parentObj, address, data) {\n        parentObj.memory[0xFF06] = data;\n    }\n    //TAC\n    this.memoryHighWriter[0x7] = this.memoryWriter[0xFF07] = function (parentObj, address, data) {\n        parentObj.memory[0xFF07] = data & 0x07;\n        parentObj.TIMAEnabled = (data & 0x04) == 0x04;\n        parentObj.TACClocker = Math.pow(4, ((data & 0x3) != 0) ? (data & 0x3) : 4) << 2;    //TODO: Find a way to not make a conditional in here...\n    }\n    //Unmapped I/O:\n    this.memoryHighWriter[0x8] = this.memoryWriter[0xFF08] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x9] = this.memoryWriter[0xFF09] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0xA] = this.memoryWriter[0xFF0A] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0xB] = this.memoryWriter[0xFF0B] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0xC] = this.memoryWriter[0xFF0C] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0xD] = this.memoryWriter[0xFF0D] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0xE] = this.memoryWriter[0xFF0E] = this.cartIgnoreWrite;\n    //IF (Interrupt Request)\n    this.memoryHighWriter[0xF] = this.memoryWriter[0xFF0F] = function (parentObj, address, data) {\n        parentObj.interruptsRequested = data;\n        parentObj.checkIRQMatching();\n    }\n    //NR10:\n    this.memoryHighWriter[0x10] = this.memoryWriter[0xFF10] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            if (parentObj.channel1decreaseSweep && (data & 0x08) == 0) {\n                if (parentObj.channel1Swept) {\n                    parentObj.channel1SweepFault = true;\n                }\n            }\n            parentObj.channel1lastTimeSweep = (data & 0x70) >> 4;\n            parentObj.channel1frequencySweepDivider = data & 0x07;\n            parentObj.channel1decreaseSweep = ((data & 0x08) == 0x08);\n            parentObj.memory[0xFF10] = data;\n            parentObj.channel1EnableCheck();\n        }\n    }\n    //NR11:\n    this.memoryHighWriter[0x11] = this.memoryWriter[0xFF11] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled || !parentObj.cGBC) {\n            if (parentObj.soundMasterEnabled) {\n                parentObj.audioJIT();\n            }\n            else {\n                data &= 0x3F;\n            }\n            parentObj.channel1CachedDuty = parentObj.dutyLookup[data >> 6];\n            parentObj.channel1totalLength = 0x40 - (data & 0x3F);\n            parentObj.memory[0xFF11] = data;\n            parentObj.channel1EnableCheck();\n        }\n    }\n    //NR12:\n    this.memoryHighWriter[0x12] = this.memoryWriter[0xFF12] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            if (parentObj.channel1Enabled && parentObj.channel1envelopeSweeps == 0) {\n                //Zombie Volume PAPU Bug:\n                if (((parentObj.memory[0xFF12] ^ data) & 0x8) == 0x8) {\n                    if ((parentObj.memory[0xFF12] & 0x8) == 0) {\n                        if ((parentObj.memory[0xFF12] & 0x7) == 0x7) {\n                            parentObj.channel1envelopeVolume += 2;\n                        }\n                        else {\n                            ++parentObj.channel1envelopeVolume;\n                        }\n                    }\n                    parentObj.channel1envelopeVolume = (16 - parentObj.channel1envelopeVolume) & 0xF;\n                }\n                else if ((parentObj.memory[0xFF12] & 0xF) == 0x8) {\n                    parentObj.channel1envelopeVolume = (1 + parentObj.channel1envelopeVolume) & 0xF;\n                }\n                parentObj.channel1OutputLevelCache();\n            }\n            parentObj.channel1envelopeType = ((data & 0x08) == 0x08);\n            parentObj.memory[0xFF12] = data;\n            parentObj.channel1VolumeEnableCheck();\n        }\n    }\n    //NR13:\n    this.memoryHighWriter[0x13] = this.memoryWriter[0xFF13] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            parentObj.channel1frequency = (parentObj.channel1frequency & 0x700) | data;\n            parentObj.channel1FrequencyTracker = (0x800 - parentObj.channel1frequency) << 2;\n        }\n    }\n    //NR14:\n    this.memoryHighWriter[0x14] = this.memoryWriter[0xFF14] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            parentObj.channel1consecutive = ((data & 0x40) == 0x0);\n            parentObj.channel1frequency = ((data & 0x7) << 8) | (parentObj.channel1frequency & 0xFF);\n            parentObj.channel1FrequencyTracker = (0x800 - parentObj.channel1frequency) << 2;\n            if (data > 0x7F) {\n                //Reload 0xFF10:\n                parentObj.channel1timeSweep = parentObj.channel1lastTimeSweep;\n                parentObj.channel1Swept = false;\n                //Reload 0xFF12:\n                var nr12 = parentObj.memory[0xFF12];\n                parentObj.channel1envelopeVolume = nr12 >> 4;\n                parentObj.channel1OutputLevelCache();\n                parentObj.channel1envelopeSweepsLast = (nr12 & 0x7) - 1;\n                if (parentObj.channel1totalLength == 0) {\n                    parentObj.channel1totalLength = 0x40;\n                }\n                if (parentObj.channel1lastTimeSweep > 0 || parentObj.channel1frequencySweepDivider > 0) {\n                    parentObj.memory[0xFF26] |= 0x1;\n                }\n                else {\n                    parentObj.memory[0xFF26] &= 0xFE;\n                }\n                if ((data & 0x40) == 0x40) {\n                    parentObj.memory[0xFF26] |= 0x1;\n                }\n                parentObj.channel1ShadowFrequency = parentObj.channel1frequency;\n                //Reset frequency overflow check + frequency sweep type check:\n                parentObj.channel1SweepFault = false;\n                //Supposed to run immediately:\n                parentObj.channel1AudioSweepPerformDummy();\n            }\n            parentObj.channel1EnableCheck();\n            parentObj.memory[0xFF14] = data;\n        }\n    }\n    //NR20 (Unused I/O):\n    this.memoryHighWriter[0x15] = this.memoryWriter[0xFF15] = this.cartIgnoreWrite;\n    //NR21:\n    this.memoryHighWriter[0x16] = this.memoryWriter[0xFF16] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled || !parentObj.cGBC) {\n            if (parentObj.soundMasterEnabled) {\n                parentObj.audioJIT();\n            }\n            else {\n                data &= 0x3F;\n            }\n            parentObj.channel2CachedDuty = parentObj.dutyLookup[data >> 6];\n            parentObj.channel2totalLength = 0x40 - (data & 0x3F);\n            parentObj.memory[0xFF16] = data;\n            parentObj.channel2EnableCheck();\n        }\n    }\n    //NR22:\n    this.memoryHighWriter[0x17] = this.memoryWriter[0xFF17] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            if (parentObj.channel2Enabled && parentObj.channel2envelopeSweeps == 0) {\n                //Zombie Volume PAPU Bug:\n                if (((parentObj.memory[0xFF17] ^ data) & 0x8) == 0x8) {\n                    if ((parentObj.memory[0xFF17] & 0x8) == 0) {\n                        if ((parentObj.memory[0xFF17] & 0x7) == 0x7) {\n                            parentObj.channel2envelopeVolume += 2;\n                        }\n                        else {\n                            ++parentObj.channel2envelopeVolume;\n                        }\n                    }\n                    parentObj.channel2envelopeVolume = (16 - parentObj.channel2envelopeVolume) & 0xF;\n                }\n                else if ((parentObj.memory[0xFF17] & 0xF) == 0x8) {\n                    parentObj.channel2envelopeVolume = (1 + parentObj.channel2envelopeVolume) & 0xF;\n                }\n                parentObj.channel2OutputLevelCache();\n            }\n            parentObj.channel2envelopeType = ((data & 0x08) == 0x08);\n            parentObj.memory[0xFF17] = data;\n            parentObj.channel2VolumeEnableCheck();\n        }\n    }\n    //NR23:\n    this.memoryHighWriter[0x18] = this.memoryWriter[0xFF18] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            parentObj.channel2frequency = (parentObj.channel2frequency & 0x700) | data;\n            parentObj.channel2FrequencyTracker = (0x800 - parentObj.channel2frequency) << 2;\n        }\n    }\n    //NR24:\n    this.memoryHighWriter[0x19] = this.memoryWriter[0xFF19] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            if (data > 0x7F) {\n                //Reload 0xFF17:\n                var nr22 = parentObj.memory[0xFF17];\n                parentObj.channel2envelopeVolume = nr22 >> 4;\n                parentObj.channel2OutputLevelCache();\n                parentObj.channel2envelopeSweepsLast = (nr22 & 0x7) - 1;\n                if (parentObj.channel2totalLength == 0) {\n                    parentObj.channel2totalLength = 0x40;\n                }\n                if ((data & 0x40) == 0x40) {\n                    parentObj.memory[0xFF26] |= 0x2;\n                }\n            }\n            parentObj.channel2consecutive = ((data & 0x40) == 0x0);\n            parentObj.channel2frequency = ((data & 0x7) << 8) | (parentObj.channel2frequency & 0xFF);\n            parentObj.channel2FrequencyTracker = (0x800 - parentObj.channel2frequency) << 2;\n            parentObj.memory[0xFF19] = data;\n            parentObj.channel2EnableCheck();\n        }\n    }\n    //NR30:\n    this.memoryHighWriter[0x1A] = this.memoryWriter[0xFF1A] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            if (!parentObj.channel3canPlay && data >= 0x80) {\n                parentObj.channel3lastSampleLookup = 0;\n                parentObj.channel3UpdateCache();\n            }\n            parentObj.channel3canPlay = (data > 0x7F);\n            if (parentObj.channel3canPlay && parentObj.memory[0xFF1A] > 0x7F && !parentObj.channel3consecutive) {\n                parentObj.memory[0xFF26] |= 0x4;\n            }\n            parentObj.memory[0xFF1A] = data;\n            //parentObj.channel3EnableCheck();\n        }\n    }\n    //NR31:\n    this.memoryHighWriter[0x1B] = this.memoryWriter[0xFF1B] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled || !parentObj.cGBC) {\n            if (parentObj.soundMasterEnabled) {\n                parentObj.audioJIT();\n            }\n            parentObj.channel3totalLength = 0x100 - data;\n            parentObj.channel3EnableCheck();\n        }\n    }\n    //NR32:\n    this.memoryHighWriter[0x1C] = this.memoryWriter[0xFF1C] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            data &= 0x60;\n            parentObj.memory[0xFF1C] = data;\n            parentObj.channel3patternType = (data == 0) ? 4 : ((data >> 5) - 1);\n        }\n    }\n    //NR33:\n    this.memoryHighWriter[0x1D] = this.memoryWriter[0xFF1D] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            parentObj.channel3frequency = (parentObj.channel3frequency & 0x700) | data;\n            parentObj.channel3FrequencyPeriod = (0x800 - parentObj.channel3frequency) << 1;\n        }\n    }\n    //NR34:\n    this.memoryHighWriter[0x1E] = this.memoryWriter[0xFF1E] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            if (data > 0x7F) {\n                if (parentObj.channel3totalLength == 0) {\n                    parentObj.channel3totalLength = 0x100;\n                }\n                parentObj.channel3lastSampleLookup = 0;\n                if ((data & 0x40) == 0x40) {\n                    parentObj.memory[0xFF26] |= 0x4;\n                }\n            }\n            parentObj.channel3consecutive = ((data & 0x40) == 0x0);\n            parentObj.channel3frequency = ((data & 0x7) << 8) | (parentObj.channel3frequency & 0xFF);\n            parentObj.channel3FrequencyPeriod = (0x800 - parentObj.channel3frequency) << 1;\n            parentObj.memory[0xFF1E] = data;\n            parentObj.channel3EnableCheck();\n        }\n    }\n    //NR40 (Unused I/O):\n    this.memoryHighWriter[0x1F] = this.memoryWriter[0xFF1F] = this.cartIgnoreWrite;\n    //NR41:\n    this.memoryHighWriter[0x20] = this.memoryWriter[0xFF20] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled || !parentObj.cGBC) {\n            if (parentObj.soundMasterEnabled) {\n                parentObj.audioJIT();\n            }\n            parentObj.channel4totalLength = 0x40 - (data & 0x3F);\n            parentObj.channel4EnableCheck();\n        }\n    }\n    //NR42:\n    this.memoryHighWriter[0x21] = this.memoryWriter[0xFF21] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            if (parentObj.channel4Enabled && parentObj.channel4envelopeSweeps == 0) {\n                //Zombie Volume PAPU Bug:\n                if (((parentObj.memory[0xFF21] ^ data) & 0x8) == 0x8) {\n                    if ((parentObj.memory[0xFF21] & 0x8) == 0) {\n                        if ((parentObj.memory[0xFF21] & 0x7) == 0x7) {\n                            parentObj.channel4envelopeVolume += 2;\n                        }\n                        else {\n                            ++parentObj.channel4envelopeVolume;\n                        }\n                    }\n                    parentObj.channel4envelopeVolume = (16 - parentObj.channel4envelopeVolume) & 0xF;\n                }\n                else if ((parentObj.memory[0xFF21] & 0xF) == 0x8) {\n                    parentObj.channel4envelopeVolume = (1 + parentObj.channel4envelopeVolume) & 0xF;\n                }\n                parentObj.channel4currentVolume = parentObj.channel4envelopeVolume << parentObj.channel4VolumeShifter;\n            }\n            parentObj.channel4envelopeType = ((data & 0x08) == 0x08);\n            parentObj.memory[0xFF21] = data;\n            parentObj.channel4UpdateCache();\n            parentObj.channel4VolumeEnableCheck();\n        }\n    }\n    //NR43:\n    this.memoryHighWriter[0x22] = this.memoryWriter[0xFF22] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            parentObj.channel4FrequencyPeriod = Math.max((data & 0x7) << 4, 8) << (data >> 4);\n            var bitWidth = (data & 0x8);\n            if ((bitWidth == 0x8 && parentObj.channel4BitRange == 0x7FFF) || (bitWidth == 0 && parentObj.channel4BitRange == 0x7F)) {\n                parentObj.channel4lastSampleLookup = 0;\n                parentObj.channel4BitRange = (bitWidth == 0x8) ? 0x7F : 0x7FFF;\n                parentObj.channel4VolumeShifter = (bitWidth == 0x8) ? 7 : 15;\n                parentObj.channel4currentVolume = parentObj.channel4envelopeVolume << parentObj.channel4VolumeShifter;\n                parentObj.noiseSampleTable = (bitWidth == 0x8) ? parentObj.LSFR7Table : parentObj.LSFR15Table;\n            }\n            parentObj.memory[0xFF22] = data;\n            parentObj.channel4UpdateCache();\n        }\n    }\n    //NR44:\n    this.memoryHighWriter[0x23] = this.memoryWriter[0xFF23] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled) {\n            parentObj.audioJIT();\n            parentObj.memory[0xFF23] = data;\n            parentObj.channel4consecutive = ((data & 0x40) == 0x0);\n            if (data > 0x7F) {\n                var nr42 = parentObj.memory[0xFF21];\n                parentObj.channel4envelopeVolume = nr42 >> 4;\n                parentObj.channel4currentVolume = parentObj.channel4envelopeVolume << parentObj.channel4VolumeShifter;\n                parentObj.channel4envelopeSweepsLast = (nr42 & 0x7) - 1;\n                if (parentObj.channel4totalLength == 0) {\n                    parentObj.channel4totalLength = 0x40;\n                }\n                if ((data & 0x40) == 0x40) {\n                    parentObj.memory[0xFF26] |= 0x8;\n                }\n            }\n            parentObj.channel4EnableCheck();\n        }\n    }\n    //NR50:\n    this.memoryHighWriter[0x24] = this.memoryWriter[0xFF24] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled && parentObj.memory[0xFF24] != data) {\n            parentObj.audioJIT();\n            parentObj.memory[0xFF24] = data;\n            parentObj.VinLeftChannelMasterVolume = ((data >> 4) & 0x07) + 1;\n            parentObj.VinRightChannelMasterVolume = (data & 0x07) + 1;\n            parentObj.mixerOutputLevelCache();\n        }\n    }\n    //NR51:\n    this.memoryHighWriter[0x25] = this.memoryWriter[0xFF25] = function (parentObj, address, data) {\n        if (parentObj.soundMasterEnabled && parentObj.memory[0xFF25] != data) {\n            parentObj.audioJIT();\n            parentObj.memory[0xFF25] = data;\n            parentObj.rightChannel1 = ((data & 0x01) == 0x01);\n            parentObj.rightChannel2 = ((data & 0x02) == 0x02);\n            parentObj.rightChannel3 = ((data & 0x04) == 0x04);\n            parentObj.rightChannel4 = ((data & 0x08) == 0x08);\n            parentObj.leftChannel1 = ((data & 0x10) == 0x10);\n            parentObj.leftChannel2 = ((data & 0x20) == 0x20);\n            parentObj.leftChannel3 = ((data & 0x40) == 0x40);\n            parentObj.leftChannel4 = (data > 0x7F);\n            parentObj.channel1OutputLevelCache();\n            parentObj.channel2OutputLevelCache();\n            parentObj.channel3OutputLevelCache();\n            parentObj.channel4OutputLevelCache();\n        }\n    }\n    //NR52:\n    this.memoryHighWriter[0x26] = this.memoryWriter[0xFF26] = function (parentObj, address, data) {\n        parentObj.audioJIT();\n        if (!parentObj.soundMasterEnabled && data > 0x7F) {\n            parentObj.memory[0xFF26] = 0x80;\n            parentObj.soundMasterEnabled = true;\n            parentObj.initializeAudioStartState();\n        }\n        else if (parentObj.soundMasterEnabled && data < 0x80) {\n            parentObj.memory[0xFF26] = 0;\n            parentObj.soundMasterEnabled = false;\n            //GBDev wiki says the registers are written with zeros on power off:\n            for (var index = 0xFF10; index < 0xFF26; index++) {\n                parentObj.memoryWriter[index](parentObj, index, 0);\n            }\n        }\n    }\n    //0xFF27 to 0xFF2F don't do anything...\n    this.memoryHighWriter[0x27] = this.memoryWriter[0xFF27] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x28] = this.memoryWriter[0xFF28] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x29] = this.memoryWriter[0xFF29] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x2A] = this.memoryWriter[0xFF2A] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x2B] = this.memoryWriter[0xFF2B] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x2C] = this.memoryWriter[0xFF2C] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x2D] = this.memoryWriter[0xFF2D] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x2E] = this.memoryWriter[0xFF2E] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x2F] = this.memoryWriter[0xFF2F] = this.cartIgnoreWrite;\n    //WAVE PCM RAM:\n    this.memoryHighWriter[0x30] = this.memoryWriter[0xFF30] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0, data);\n    }\n    this.memoryHighWriter[0x31] = this.memoryWriter[0xFF31] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0x1, data);\n    }\n    this.memoryHighWriter[0x32] = this.memoryWriter[0xFF32] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0x2, data);\n    }\n    this.memoryHighWriter[0x33] = this.memoryWriter[0xFF33] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0x3, data);\n    }\n    this.memoryHighWriter[0x34] = this.memoryWriter[0xFF34] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0x4, data);\n    }\n    this.memoryHighWriter[0x35] = this.memoryWriter[0xFF35] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0x5, data);\n    }\n    this.memoryHighWriter[0x36] = this.memoryWriter[0xFF36] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0x6, data);\n    }\n    this.memoryHighWriter[0x37] = this.memoryWriter[0xFF37] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0x7, data);\n    }\n    this.memoryHighWriter[0x38] = this.memoryWriter[0xFF38] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0x8, data);\n    }\n    this.memoryHighWriter[0x39] = this.memoryWriter[0xFF39] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0x9, data);\n    }\n    this.memoryHighWriter[0x3A] = this.memoryWriter[0xFF3A] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0xA, data);\n    }\n    this.memoryHighWriter[0x3B] = this.memoryWriter[0xFF3B] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0xB, data);\n    }\n    this.memoryHighWriter[0x3C] = this.memoryWriter[0xFF3C] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0xC, data);\n    }\n    this.memoryHighWriter[0x3D] = this.memoryWriter[0xFF3D] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0xD, data);\n    }\n    this.memoryHighWriter[0x3E] = this.memoryWriter[0xFF3E] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0xE, data);\n    }\n    this.memoryHighWriter[0x3F] = this.memoryWriter[0xFF3F] = function (parentObj, address, data) {\n        parentObj.channel3WriteRAM(0xF, data);\n    }\n    //SCY\n    this.memoryHighWriter[0x42] = this.memoryWriter[0xFF42] = function (parentObj, address, data) {\n        if (parentObj.backgroundY != data) {\n            parentObj.midScanLineJIT();\n            parentObj.backgroundY = data;\n        }\n    }\n    //SCX\n    this.memoryHighWriter[0x43] = this.memoryWriter[0xFF43] = function (parentObj, address, data) {\n        if (parentObj.backgroundX != data) {\n            parentObj.midScanLineJIT();\n            parentObj.backgroundX = data;\n        }\n    }\n    //LY\n    this.memoryHighWriter[0x44] = this.memoryWriter[0xFF44] = function (parentObj, address, data) {\n        //Read Only:\n        if (parentObj.LCDisOn) {\n            //Gambatte says to do this:\n            parentObj.modeSTAT = 2;\n            parentObj.midScanlineOffset = -1;\n            parentObj.totalLinesPassed = parentObj.currentX = parentObj.queuedScanLines = parentObj.lastUnrenderedLine = parentObj.LCDTicks = parentObj.STATTracker = parentObj.actualScanLine = parentObj.memory[0xFF44] = 0;\n        }\n    }\n    //LYC\n    this.memoryHighWriter[0x45] = this.memoryWriter[0xFF45] = function (parentObj, address, data) {\n        if (parentObj.memory[0xFF45] != data) {\n            parentObj.memory[0xFF45] = data;\n            if (parentObj.LCDisOn) {\n                parentObj.matchLYC();   //Get the compare of the first scan line.\n            }\n        }\n    }\n    //WY\n    this.memoryHighWriter[0x4A] = this.memoryWriter[0xFF4A] = function (parentObj, address, data) {\n        if (parentObj.windowY != data) {\n            parentObj.midScanLineJIT();\n            parentObj.windowY = data;\n        }\n    }\n    //WX\n    this.memoryHighWriter[0x4B] = this.memoryWriter[0xFF4B] = function (parentObj, address, data) {\n        if (parentObj.memory[0xFF4B] != data) {\n            parentObj.midScanLineJIT();\n            parentObj.memory[0xFF4B] = data;\n            parentObj.windowX = data - 7;\n        }\n    }\n    this.memoryHighWriter[0x72] = this.memoryWriter[0xFF72] = function (parentObj, address, data) {\n        parentObj.memory[0xFF72] = data;\n    }\n    this.memoryHighWriter[0x73] = this.memoryWriter[0xFF73] = function (parentObj, address, data) {\n        parentObj.memory[0xFF73] = data;\n    }\n    this.memoryHighWriter[0x75] = this.memoryWriter[0xFF75] = function (parentObj, address, data) {\n        parentObj.memory[0xFF75] = data;\n    }\n    this.memoryHighWriter[0x76] = this.memoryWriter[0xFF76] = this.cartIgnoreWrite;\n    this.memoryHighWriter[0x77] = this.memoryWriter[0xFF77] = this.cartIgnoreWrite;\n    //IE (Interrupt Enable)\n    this.memoryHighWriter[0xFF] = this.memoryWriter[0xFFFF] = function (parentObj, address, data) {\n        parentObj.interruptsEnabled = data;\n        parentObj.checkIRQMatching();\n    }\n    this.recompileModelSpecificIOWriteHandling();\n    this.recompileBootIOWriteHandling();\n}\nGameBoyCore.prototype.recompileModelSpecificIOWriteHandling = function () {\n    if (this.cGBC) {\n        //GameBoy Color Specific I/O:\n        //SC (Serial Transfer Control Register)\n        this.memoryHighWriter[0x2] = this.memoryWriter[0xFF02] = function (parentObj, address, data) {\n            if (((data & 0x1) == 0x1)) {\n                //Internal clock:\n                parentObj.memory[0xFF02] = (data & 0x7F);\n                parentObj.serialTimer = ((data & 0x2) == 0) ? 4096 : 128;   //Set the Serial IRQ counter.\n                parentObj.serialShiftTimer = parentObj.serialShiftTimerAllocated = ((data & 0x2) == 0) ? 512 : 16;  //Set the transfer data shift counter.\n            }\n            else {\n                //External clock:\n                parentObj.memory[0xFF02] = data;\n                parentObj.serialShiftTimer = parentObj.serialShiftTimerAllocated = parentObj.serialTimer = 0;   //Zero the timers, since we're emulating as if nothing is connected.\n            }\n        }\n        this.memoryHighWriter[0x40] = this.memoryWriter[0xFF40] = function (parentObj, address, data) {\n            if (parentObj.memory[0xFF40] != data) {\n                parentObj.midScanLineJIT();\n                var temp_var = (data > 0x7F);\n                if (temp_var != parentObj.LCDisOn) {\n                    //When the display mode changes...\n                    parentObj.LCDisOn = temp_var;\n                    parentObj.memory[0xFF41] &= 0x78;\n                    parentObj.midScanlineOffset = -1;\n                    parentObj.totalLinesPassed = parentObj.currentX = parentObj.queuedScanLines = parentObj.lastUnrenderedLine = parentObj.STATTracker = parentObj.LCDTicks = parentObj.actualScanLine = parentObj.memory[0xFF44] = 0;\n                    if (parentObj.LCDisOn) {\n                        parentObj.modeSTAT = 2;\n                        parentObj.matchLYC();   //Get the compare of the first scan line.\n                        parentObj.LCDCONTROL = parentObj.LINECONTROL;\n                    }\n                    else {\n                        parentObj.modeSTAT = 0;\n                        parentObj.LCDCONTROL = parentObj.DISPLAYOFFCONTROL;\n                        parentObj.DisplayShowOff();\n                    }\n                    parentObj.interruptsRequested &= 0xFD;\n                }\n                parentObj.gfxWindowCHRBankPosition = ((data & 0x40) == 0x40) ? 0x400 : 0;\n                parentObj.gfxWindowDisplay = ((data & 0x20) == 0x20);\n                parentObj.gfxBackgroundBankOffset = ((data & 0x10) == 0x10) ? 0 : 0x80;\n                parentObj.gfxBackgroundCHRBankPosition = ((data & 0x08) == 0x08) ? 0x400 : 0;\n                parentObj.gfxSpriteNormalHeight = ((data & 0x04) == 0);\n                parentObj.gfxSpriteShow = ((data & 0x02) == 0x02);\n                parentObj.BGPriorityEnabled = ((data & 0x01) == 0x01);\n                parentObj.priorityFlaggingPathRebuild();    //Special case the priority flagging as an optimization.\n                parentObj.memory[0xFF40] = data;\n            }\n        }\n        this.memoryHighWriter[0x41] = this.memoryWriter[0xFF41] = function (parentObj, address, data) {\n            parentObj.LYCMatchTriggerSTAT = ((data & 0x40) == 0x40);\n            parentObj.mode2TriggerSTAT = ((data & 0x20) == 0x20);\n            parentObj.mode1TriggerSTAT = ((data & 0x10) == 0x10);\n            parentObj.mode0TriggerSTAT = ((data & 0x08) == 0x08);\n            parentObj.memory[0xFF41] = data & 0x78;\n        }\n        this.memoryHighWriter[0x46] = this.memoryWriter[0xFF46] = function (parentObj, address, data) {\n            parentObj.memory[0xFF46] = data;\n            if (data < 0xE0) {\n                data <<= 8;\n                address = 0xFE00;\n                var stat = parentObj.modeSTAT;\n                parentObj.modeSTAT = 0;\n                var newData = 0;\n                do {\n                    newData = parentObj.memoryReader[data](parentObj, data++);\n                    if (newData != parentObj.memory[address]) {\n                        //JIT the graphics render queue:\n                        parentObj.modeSTAT = stat;\n                        parentObj.graphicsJIT();\n                        parentObj.modeSTAT = 0;\n                        parentObj.memory[address++] = newData;\n                        break;\n                    }\n                } while (++address < 0xFEA0);\n                if (address < 0xFEA0) {\n                    do {\n                        parentObj.memory[address++] = parentObj.memoryReader[data](parentObj, data++);\n                        parentObj.memory[address++] = parentObj.memoryReader[data](parentObj, data++);\n                        parentObj.memory[address++] = parentObj.memoryReader[data](parentObj, data++);\n                        parentObj.memory[address++] = parentObj.memoryReader[data](parentObj, data++);\n                    } while (address < 0xFEA0);\n                }\n                parentObj.modeSTAT = stat;\n            }\n        }\n        //KEY1\n        this.memoryHighWriter[0x4D] = this.memoryWriter[0xFF4D] = function (parentObj, address, data) {\n            parentObj.memory[0xFF4D] = (data & 0x7F) | (parentObj.memory[0xFF4D] & 0x80);\n        }\n        this.memoryHighWriter[0x4F] = this.memoryWriter[0xFF4F] = function (parentObj, address, data) {\n            parentObj.currVRAMBank = data & 0x01;\n            if (parentObj.currVRAMBank > 0) {\n                parentObj.BGCHRCurrentBank = parentObj.BGCHRBank2;\n            }\n            else {\n                parentObj.BGCHRCurrentBank = parentObj.BGCHRBank1;\n            }\n            //Only writable by GBC.\n        }\n        this.memoryHighWriter[0x51] = this.memoryWriter[0xFF51] = function (parentObj, address, data) {\n            if (!parentObj.hdmaRunning) {\n                parentObj.memory[0xFF51] = data;\n            }\n        }\n        this.memoryHighWriter[0x52] = this.memoryWriter[0xFF52] = function (parentObj, address, data) {\n            if (!parentObj.hdmaRunning) {\n                parentObj.memory[0xFF52] = data & 0xF0;\n            }\n        }\n        this.memoryHighWriter[0x53] = this.memoryWriter[0xFF53] = function (parentObj, address, data) {\n            if (!parentObj.hdmaRunning) {\n                parentObj.memory[0xFF53] = data & 0x1F;\n            }\n        }\n        this.memoryHighWriter[0x54] = this.memoryWriter[0xFF54] = function (parentObj, address, data) {\n            if (!parentObj.hdmaRunning) {\n                parentObj.memory[0xFF54] = data & 0xF0;\n            }\n        }\n        this.memoryHighWriter[0x55] = this.memoryWriter[0xFF55] = function (parentObj, address, data) {\n            if (!parentObj.hdmaRunning) {\n                if ((data & 0x80) == 0) {\n                    //DMA\n                    parentObj.DMAWrite((data & 0x7F) + 1);\n                    parentObj.memory[0xFF55] = 0xFF;    //Transfer completed.\n                }\n                else {\n                    //H-Blank DMA\n                    parentObj.hdmaRunning = true;\n                    parentObj.memory[0xFF55] = data & 0x7F;\n                }\n            }\n            else if ((data & 0x80) == 0) {\n                //Stop H-Blank DMA\n                parentObj.hdmaRunning = false;\n                parentObj.memory[0xFF55] |= 0x80;\n            }\n            else {\n                parentObj.memory[0xFF55] = data & 0x7F;\n            }\n        }\n        this.memoryHighWriter[0x68] = this.memoryWriter[0xFF68] = function (parentObj, address, data) {\n            parentObj.memory[0xFF69] = parentObj.gbcBGRawPalette[data & 0x3F];\n            parentObj.memory[0xFF68] = data;\n        }\n        this.memoryHighWriter[0x69] = this.memoryWriter[0xFF69] = function (parentObj, address, data) {\n            parentObj.updateGBCBGPalette(parentObj.memory[0xFF68] & 0x3F, data);\n            if (parentObj.memory[0xFF68] > 0x7F) { // high bit = autoincrement\n                var next = ((parentObj.memory[0xFF68] + 1) & 0x3F);\n                parentObj.memory[0xFF68] = (next | 0x80);\n                parentObj.memory[0xFF69] = parentObj.gbcBGRawPalette[next];\n            }\n            else {\n                parentObj.memory[0xFF69] = data;\n            }\n        }\n        this.memoryHighWriter[0x6A] = this.memoryWriter[0xFF6A] = function (parentObj, address, data) {\n            parentObj.memory[0xFF6B] = parentObj.gbcOBJRawPalette[data & 0x3F];\n            parentObj.memory[0xFF6A] = data;\n        }\n        this.memoryHighWriter[0x6B] = this.memoryWriter[0xFF6B] = function (parentObj, address, data) {\n            parentObj.updateGBCOBJPalette(parentObj.memory[0xFF6A] & 0x3F, data);\n            if (parentObj.memory[0xFF6A] > 0x7F) { // high bit = autoincrement\n                var next = ((parentObj.memory[0xFF6A] + 1) & 0x3F);\n                parentObj.memory[0xFF6A] = (next | 0x80);\n                parentObj.memory[0xFF6B] = parentObj.gbcOBJRawPalette[next];\n            }\n            else {\n                parentObj.memory[0xFF6B] = data;\n            }\n        }\n        //SVBK\n        this.memoryHighWriter[0x70] = this.memoryWriter[0xFF70] = function (parentObj, address, data) {\n            var addressCheck = (parentObj.memory[0xFF51] << 8) | parentObj.memory[0xFF52];  //Cannot change the RAM bank while WRAM is the source of a running HDMA.\n            if (!parentObj.hdmaRunning || addressCheck < 0xD000 || addressCheck >= 0xE000) {\n                parentObj.gbcRamBank = Math.max(data & 0x07, 1);    //Bank range is from 1-7\n                parentObj.gbcRamBankPosition = ((parentObj.gbcRamBank - 1) << 12) - 0xD000;\n                parentObj.gbcRamBankPositionECHO = parentObj.gbcRamBankPosition - 0x2000;\n            }\n            parentObj.memory[0xFF70] = data;    //Bit 6 cannot be written to.\n        }\n        this.memoryHighWriter[0x74] = this.memoryWriter[0xFF74] = function (parentObj, address, data) {\n            parentObj.memory[0xFF74] = data;\n        }\n    }\n    else {\n        //Fill in the GameBoy Color I/O registers as normal RAM for GameBoy compatibility:\n        //SC (Serial Transfer Control Register)\n        this.memoryHighWriter[0x2] = this.memoryWriter[0xFF02] = function (parentObj, address, data) {\n            if (((data & 0x1) == 0x1)) {\n                //Internal clock:\n                parentObj.memory[0xFF02] = (data & 0x7F);\n                parentObj.serialTimer = 4096;   //Set the Serial IRQ counter.\n                parentObj.serialShiftTimer = parentObj.serialShiftTimerAllocated = 512; //Set the transfer data shift counter.\n            }\n            else {\n                //External clock:\n                parentObj.memory[0xFF02] = data;\n                parentObj.serialShiftTimer = parentObj.serialShiftTimerAllocated = parentObj.serialTimer = 0;   //Zero the timers, since we're emulating as if nothing is connected.\n            }\n        }\n        this.memoryHighWriter[0x40] = this.memoryWriter[0xFF40] = function (parentObj, address, data) {\n            if (parentObj.memory[0xFF40] != data) {\n                parentObj.midScanLineJIT();\n                var temp_var = (data > 0x7F);\n                if (temp_var != parentObj.LCDisOn) {\n                    //When the display mode changes...\n                    parentObj.LCDisOn = temp_var;\n                    parentObj.memory[0xFF41] &= 0x78;\n                    parentObj.midScanlineOffset = -1;\n                    parentObj.totalLinesPassed = parentObj.currentX = parentObj.queuedScanLines = parentObj.lastUnrenderedLine = parentObj.STATTracker = parentObj.LCDTicks = parentObj.actualScanLine = parentObj.memory[0xFF44] = 0;\n                    if (parentObj.LCDisOn) {\n                        parentObj.modeSTAT = 2;\n                        parentObj.matchLYC();   //Get the compare of the first scan line.\n                        parentObj.LCDCONTROL = parentObj.LINECONTROL;\n                    }\n                    else {\n                        parentObj.modeSTAT = 0;\n                        parentObj.LCDCONTROL = parentObj.DISPLAYOFFCONTROL;\n                        parentObj.DisplayShowOff();\n                    }\n                    parentObj.interruptsRequested &= 0xFD;\n                }\n                parentObj.gfxWindowCHRBankPosition = ((data & 0x40) == 0x40) ? 0x400 : 0;\n                parentObj.gfxWindowDisplay = (data & 0x20) == 0x20;\n                parentObj.gfxBackgroundBankOffset = ((data & 0x10) == 0x10) ? 0 : 0x80;\n                parentObj.gfxBackgroundCHRBankPosition = ((data & 0x08) == 0x08) ? 0x400 : 0;\n                parentObj.gfxSpriteNormalHeight = ((data & 0x04) == 0);\n                parentObj.gfxSpriteShow = (data & 0x02) == 0x02;\n                parentObj.bgEnabled = ((data & 0x01) == 0x01);\n                parentObj.memory[0xFF40] = data;\n            }\n        }\n        this.memoryHighWriter[0x41] = this.memoryWriter[0xFF41] = function (parentObj, address, data) {\n            parentObj.LYCMatchTriggerSTAT = ((data & 0x40) == 0x40);\n            parentObj.mode2TriggerSTAT = ((data & 0x20) == 0x20);\n            parentObj.mode1TriggerSTAT = ((data & 0x10) == 0x10);\n            parentObj.mode0TriggerSTAT = ((data & 0x08) == 0x08);\n            parentObj.memory[0xFF41] = data & 0x78;\n            if ((!parentObj.usedBootROM || !parentObj.usedGBCBootROM) && parentObj.LCDisOn && parentObj.modeSTAT < 2) {\n                parentObj.interruptsRequested |= 0x2;\n                parentObj.checkIRQMatching();\n            }\n        }\n        this.memoryHighWriter[0x46] = this.memoryWriter[0xFF46] = function (parentObj, address, data) {\n            parentObj.memory[0xFF46] = data;\n            if (data > 0x7F && data < 0xE0) {   //DMG cannot DMA from the ROM banks.\n                data <<= 8;\n                address = 0xFE00;\n                var stat = parentObj.modeSTAT;\n                parentObj.modeSTAT = 0;\n                var newData = 0;\n                do {\n                    newData = parentObj.memoryReader[data](parentObj, data++);\n                    if (newData != parentObj.memory[address]) {\n                        //JIT the graphics render queue:\n                        parentObj.modeSTAT = stat;\n                        parentObj.graphicsJIT();\n                        parentObj.modeSTAT = 0;\n                        parentObj.memory[address++] = newData;\n                        break;\n                    }\n                } while (++address < 0xFEA0);\n                if (address < 0xFEA0) {\n                    do {\n                        parentObj.memory[address++] = parentObj.memoryReader[data](parentObj, data++);\n                        parentObj.memory[address++] = parentObj.memoryReader[data](parentObj, data++);\n                        parentObj.memory[address++] = parentObj.memoryReader[data](parentObj, data++);\n                        parentObj.memory[address++] = parentObj.memoryReader[data](parentObj, data++);\n                    } while (address < 0xFEA0);\n                }\n                parentObj.modeSTAT = stat;\n            }\n        }\n        this.memoryHighWriter[0x47] = this.memoryWriter[0xFF47] = function (parentObj, address, data) {\n            if (parentObj.memory[0xFF47] != data) {\n                parentObj.midScanLineJIT();\n                parentObj.updateGBBGPalette(data);\n                parentObj.memory[0xFF47] = data;\n            }\n        }\n        this.memoryHighWriter[0x48] = this.memoryWriter[0xFF48] = function (parentObj, address, data) {\n            if (parentObj.memory[0xFF48] != data) {\n                parentObj.midScanLineJIT();\n                parentObj.updateGBOBJPalette(0, data);\n                parentObj.memory[0xFF48] = data;\n            }\n        }\n        this.memoryHighWriter[0x49] = this.memoryWriter[0xFF49] = function (parentObj, address, data) {\n            if (parentObj.memory[0xFF49] != data) {\n                parentObj.midScanLineJIT();\n                parentObj.updateGBOBJPalette(4, data);\n                parentObj.memory[0xFF49] = data;\n            }\n        }\n        this.memoryHighWriter[0x4D] = this.memoryWriter[0xFF4D] = function (parentObj, address, data) {\n            parentObj.memory[0xFF4D] = data;\n        }\n        this.memoryHighWriter[0x4F] = this.memoryWriter[0xFF4F] = this.cartIgnoreWrite; //Not writable in DMG mode.\n        this.memoryHighWriter[0x55] = this.memoryWriter[0xFF55] = this.cartIgnoreWrite;\n        this.memoryHighWriter[0x68] = this.memoryWriter[0xFF68] = this.cartIgnoreWrite;\n        this.memoryHighWriter[0x69] = this.memoryWriter[0xFF69] = this.cartIgnoreWrite;\n        this.memoryHighWriter[0x6A] = this.memoryWriter[0xFF6A] = this.cartIgnoreWrite;\n        this.memoryHighWriter[0x6B] = this.memoryWriter[0xFF6B] = this.cartIgnoreWrite;\n        this.memoryHighWriter[0x6C] = this.memoryWriter[0xFF6C] = this.cartIgnoreWrite;\n        this.memoryHighWriter[0x70] = this.memoryWriter[0xFF70] = this.cartIgnoreWrite;\n        this.memoryHighWriter[0x74] = this.memoryWriter[0xFF74] = this.cartIgnoreWrite;\n    }\n}\nGameBoyCore.prototype.recompileBootIOWriteHandling = function () {\n    //Boot I/O Registers:\n    if (this.inBootstrap) {\n        this.memoryHighWriter[0x50] = this.memoryWriter[0xFF50] = function (parentObj, address, data) {\n            cout(\"Boot ROM reads blocked: Bootstrap process has ended.\", 0);\n            parentObj.inBootstrap = false;\n            parentObj.disableBootROM();         //Fill in the boot ROM ranges with ROM  bank 0 ROM ranges\n            parentObj.memory[0xFF50] = data;    //Bits are sustained in memory?\n        }\n        if (this.cGBC) {\n            this.memoryHighWriter[0x6C] = this.memoryWriter[0xFF6C] = function (parentObj, address, data) {\n                if (parentObj.inBootstrap) {\n                    parentObj.cGBC = ((data & 0x1) == 0);\n                    //Exception to the GBC identifying code:\n                    if (parentObj.name + parentObj.gameCode + parentObj.ROM[0x143] == \"Game and Watch 50\") {\n                        parentObj.cGBC = true;\n                        cout(\"Created a boot exception for Game and Watch Gallery 2 (GBC ID byte is wrong on the cartridge).\", 1);\n                    }\n                    cout(\"Booted to GBC Mode: \" + parentObj.cGBC, 0);\n                }\n                parentObj.memory[0xFF6C] = data;\n            }\n        }\n    }\n    else {\n        //Lockout the ROMs from accessing the BOOT ROM control register:\n        this.memoryHighWriter[0x50] = this.memoryWriter[0xFF50] = this.cartIgnoreWrite;\n    }\n}\n\n\n\n\n//Helper Functions\nGameBoyCore.prototype.toTypedArray = function (baseArray, memtype) {\n    try {\n        if (settings[5]) {\n            return baseArray;\n        }\n        if (!baseArray || !baseArray.length) {\n            return [];\n        }\n        var length = baseArray.length;\n        switch (memtype) {\n            case \"uint8\":\n                var typedArrayTemp = new Uint8Array(length);\n                break;\n            case \"int8\":\n                var typedArrayTemp = new Int8Array(length);\n                break;\n            case \"int32\":\n                var typedArrayTemp = new Int32Array(length);\n                break;\n            case \"float32\":\n                var typedArrayTemp = new Float32Array(length);\n        }\n        for (var index = 0; index < length; index++) {\n            typedArrayTemp[index] = baseArray[index];\n        }\n        return typedArrayTemp;\n    }\n    catch (error) {\n        cout(\"Could not convert an array to a typed array: \" + error.message, 1);\n        return baseArray;\n    }\n}\nGameBoyCore.prototype.fromTypedArray = function (baseArray) {\n    try {\n        if (!baseArray || !baseArray.length) {\n            return [];\n        }\n        var arrayTemp = [];\n        for (var index = 0; index < baseArray.length; ++index) {\n            arrayTemp[index] = baseArray[index];\n        }\n        return arrayTemp;\n    }\n    catch (error) {\n        cout(\"Conversion from a typed array failed: \" + error.message, 1);\n        return baseArray;\n    }\n}\nGameBoyCore.prototype.getTypedArray = function (length, defaultValue, numberType) {\n    try {\n        if (settings[5]) {\n            throw(new Error(\"Settings forced typed arrays to be disabled.\"));\n        }\n        switch (numberType) {\n            case \"int8\":\n                var arrayHandle = new Int8Array(length);\n                break;\n            case \"uint8\":\n                var arrayHandle = new Uint8Array(length);\n                break;\n            case \"int32\":\n                var arrayHandle = new Int32Array(length);\n                break;\n            case \"float32\":\n                var arrayHandle = new Float32Array(length);\n        }\n        if (defaultValue != 0) {\n            var index = 0;\n            while (index < length) {\n                arrayHandle[index++] = defaultValue;\n            }\n        }\n    }\n    catch (error) {\n        cout(\"Could not convert an array to a typed array: \" + error.message, 1);\n        var arrayHandle = [];\n        var index = 0;\n        while (index < length) {\n            arrayHandle[index++] = defaultValue;\n        }\n    }\n    return arrayHandle;\n}\n\nmodule.exports = GameBoyCore;\n\n//  LocalWords:  saveSRAMState\n","//Dump of the post-BOOT I/O register state (From gambatte):\nmodule.exports = [\n    0x0F, 0x00, 0x7C, 0xFF, 0x00, 0x00, 0x00, 0xF8,     0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01,\n    0x80, 0xBF, 0xF3, 0xFF, 0xBF, 0xFF, 0x3F, 0x00,     0xFF, 0xBF, 0x7F, 0xFF, 0x9F, 0xFF, 0xBF, 0xFF,\n    0xFF, 0x00, 0x00, 0xBF, 0x77, 0xF3, 0xF1, 0xFF,     0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n    0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,     0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,\n    0x91, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,     0x00, 0x00, 0x00, 0x00, 0xFF, 0x7E, 0xFF, 0xFE,\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3E, 0xFF,     0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,     0xC0, 0xFF, 0xC1, 0x00, 0xFE, 0xFF, 0xFF, 0xFF,\n    0xF8, 0xFF, 0x00, 0x00, 0x00, 0x8F, 0x00, 0x00,     0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n    0xCE, 0xED, 0x66, 0x66, 0xCC, 0x0D, 0x00, 0x0B,     0x03, 0x73, 0x00, 0x83, 0x00, 0x0C, 0x00, 0x0D,\n    0x00, 0x08, 0x11, 0x1F, 0x88, 0x89, 0x00, 0x0E,     0xDC, 0xCC, 0x6E, 0xE6, 0xDD, 0xDD, 0xD9, 0x99,\n    0xBB, 0xBB, 0x67, 0x63, 0x6E, 0x0E, 0xEC, 0xCC,     0xDD, 0xDC, 0x99, 0x9F, 0xBB, 0xB9, 0x33, 0x3E,\n    0x45, 0xEC, 0x52, 0xFA, 0x08, 0xB7, 0x07, 0x5D,     0x01, 0xFD, 0xC0, 0xFF, 0x08, 0xFC, 0x00, 0xE5,\n    0x0B, 0xF8, 0xC2, 0xCE, 0xF4, 0xF9, 0x0F, 0x7F,     0x45, 0x6D, 0x3D, 0xFE, 0x46, 0x97, 0x33, 0x5E,\n    0x08, 0xEF, 0xF1, 0xFF, 0x86, 0x83, 0x24, 0x74,     0x12, 0xFC, 0x00, 0x9F, 0xB4, 0xB7, 0x06, 0xD5,\n    0xD0, 0x7A, 0x00, 0x9E, 0x04, 0x5F, 0x41, 0x2F,     0x1D, 0x77, 0x36, 0x75, 0x81, 0xAA, 0x70, 0x3A,\n    0x98, 0xD1, 0x71, 0x02, 0x4D, 0x01, 0xC1, 0xFF,     0x0D, 0x00, 0xD3, 0x05, 0xF9, 0x00, 0x0B, 0x00\n];\n","var OPCODE = [\n\t//NOP\n\t//#0x00:\n\tfunction (parentObj) {\n\t\t//Do Nothing...\n\t},\n\t//LD BC, nn\n\t//#0x01:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.registerB = parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF);\n\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t},\n\t//LD (BC), A\n\t//#0x02:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWrite((parentObj.registerB << 8) | parentObj.registerC, parentObj.registerA);\n\t},\n\t//INC BC\n\t//#0x03:\n\tfunction (parentObj) {\n\t\tvar temp_var = ((parentObj.registerB << 8) | parentObj.registerC) + 1;\n\t\tparentObj.registerB = (temp_var >> 8) & 0xFF;\n\t\tparentObj.registerC = temp_var & 0xFF;\n\t},\n\t//INC B\n\t//#0x04:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = (parentObj.registerB + 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerB & 0xF) == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//DEC B\n\t//#0x05:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = (parentObj.registerB - 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerB & 0xF) == 0xF);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//LD B, n\n\t//#0x06:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//RLCA\n\t//#0x07:\n\tfunction (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerA > 0x7F);\n\t\tparentObj.registerA = ((parentObj.registerA << 1) & 0xFF) | (parentObj.registerA >> 7);\n\t\tparentObj.FZero = parentObj.FSubtract = parentObj.FHalfCarry = false;\n\t},\n\t//LD (nn), SP\n\t//#0x08:\n\tfunction (parentObj) {\n\t\tvar temp_var = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\tparentObj.memoryWrite(temp_var, parentObj.stackPointer & 0xFF);\n\t\tparentObj.memoryWrite((temp_var + 1) & 0xFFFF, parentObj.stackPointer >> 8);\n\t},\n\t//ADD HL, BC\n\t//#0x09:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registersHL + ((parentObj.registerB << 8) | parentObj.registerC);\n\t\tparentObj.FHalfCarry = ((parentObj.registersHL & 0xFFF) > (dirtySum & 0xFFF));\n\t\tparentObj.FCarry = (dirtySum > 0xFFFF);\n\t\tparentObj.registersHL = dirtySum & 0xFFFF;\n\t\tparentObj.FSubtract = false;\n\t},\n\t//LD A, (BC)\n\t//#0x0A:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.memoryRead((parentObj.registerB << 8) | parentObj.registerC);\n\t},\n\t//DEC BC\n\t//#0x0B:\n\tfunction (parentObj) {\n\t\tvar temp_var = (((parentObj.registerB << 8) | parentObj.registerC) - 1) & 0xFFFF;\n\t\tparentObj.registerB = temp_var >> 8;\n\t\tparentObj.registerC = temp_var & 0xFF;\n\t},\n\t//INC C\n\t//#0x0C:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = (parentObj.registerC + 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerC & 0xF) == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//DEC C\n\t//#0x0D:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = (parentObj.registerC - 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerC & 0xF) == 0xF);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//LD C, n\n\t//#0x0E:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//RRCA\n\t//#0x0F:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = (parentObj.registerA >> 1) | ((parentObj.registerA & 1) << 7);\n\t\tparentObj.FCarry = (parentObj.registerA > 0x7F);\n\t\tparentObj.FZero = parentObj.FSubtract = parentObj.FHalfCarry = false;\n\t},\n\t//STOP\n\t//#0x10:\n\tfunction (parentObj) {\n\t\tif (parentObj.cGBC) {\n\t\t\tif ((parentObj.memory[0xFF4D] & 0x01) == 0x01) {\t\t//Speed change requested.\n\t\t\t\tif (parentObj.memory[0xFF4D] > 0x7F) {\t\t\t\t//Go back to single speed mode.\n\t\t\t\t\t// console.log(\"Going into single clock speed mode.\", 0);\n\t\t\t\t\tparentObj.doubleSpeedShifter = 0;\n\t\t\t\t\tparentObj.memory[0xFF4D] &= 0x7F;\t\t\t\t//Clear the double speed mode flag.\n\t\t\t\t}\n\t\t\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t//Go to double speed mode.\n\t\t\t\t\t// console.log(\"Going into double clock speed mode.\", 0);\n\t\t\t\t\tparentObj.doubleSpeedShifter = 1;\n\t\t\t\t\tparentObj.memory[0xFF4D] |= 0x80;\t\t\t\t//Set the double speed mode flag.\n\t\t\t\t}\n\t\t\t\tparentObj.memory[0xFF4D] &= 0xFE;\t\t\t\t\t//Reset the request bit.\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparentObj.handleSTOP();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparentObj.handleSTOP();\n\t\t}\n\t},\n\t//LD DE, nn\n\t//#0x11:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.registerD = parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF);\n\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t},\n\t//LD (DE), A\n\t//#0x12:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWrite((parentObj.registerD << 8) | parentObj.registerE, parentObj.registerA);\n\t},\n\t//INC DE\n\t//#0x13:\n\tfunction (parentObj) {\n\t\tvar temp_var = ((parentObj.registerD << 8) | parentObj.registerE) + 1;\n\t\tparentObj.registerD = (temp_var >> 8) & 0xFF;\n\t\tparentObj.registerE = temp_var & 0xFF;\n\t},\n\t//INC D\n\t//#0x14:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = (parentObj.registerD + 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerD & 0xF) == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//DEC D\n\t//#0x15:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = (parentObj.registerD - 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerD & 0xF) == 0xF);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//LD D, n\n\t//#0x16:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//RLA\n\t//#0x17:\n\tfunction (parentObj) {\n\t\tvar carry_flag = (parentObj.FCarry) ? 1 : 0;\n\t\tparentObj.FCarry = (parentObj.registerA > 0x7F);\n\t\tparentObj.registerA = ((parentObj.registerA << 1) & 0xFF) | carry_flag;\n\t\tparentObj.FZero = parentObj.FSubtract = parentObj.FHalfCarry = false;\n\t},\n\t//JR n\n\t//#0x18:\n\tfunction (parentObj) {\n\t\tparentObj.programCounter = (parentObj.programCounter + ((parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) << 24) >> 24) + 1) & 0xFFFF;\n\t},\n\t//ADD HL, DE\n\t//#0x19:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registersHL + ((parentObj.registerD << 8) | parentObj.registerE);\n\t\tparentObj.FHalfCarry = ((parentObj.registersHL & 0xFFF) > (dirtySum & 0xFFF));\n\t\tparentObj.FCarry = (dirtySum > 0xFFFF);\n\t\tparentObj.registersHL = dirtySum & 0xFFFF;\n\t\tparentObj.FSubtract = false;\n\t},\n\t//LD A, (DE)\n\t//#0x1A:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.memoryRead((parentObj.registerD << 8) | parentObj.registerE);\n\t},\n\t//DEC DE\n\t//#0x1B:\n\tfunction (parentObj) {\n\t\tvar temp_var = (((parentObj.registerD << 8) | parentObj.registerE) - 1) & 0xFFFF;\n\t\tparentObj.registerD = temp_var >> 8;\n\t\tparentObj.registerE = temp_var & 0xFF;\n\t},\n\t//INC E\n\t//#0x1C:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = (parentObj.registerE + 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerE & 0xF) == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//DEC E\n\t//#0x1D:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = (parentObj.registerE - 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerE & 0xF) == 0xF);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//LD E, n\n\t//#0x1E:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//RRA\n\t//#0x1F:\n\tfunction (parentObj) {\n\t\tvar carry_flag = (parentObj.FCarry) ? 0x80 : 0;\n\t\tparentObj.FCarry = ((parentObj.registerA & 1) == 1);\n\t\tparentObj.registerA = (parentObj.registerA >> 1) | carry_flag;\n\t\tparentObj.FZero = parentObj.FSubtract = parentObj.FHalfCarry = false;\n\t},\n\t//JR NZ, n\n\t//#0x20:\n\tfunction (parentObj) {\n\t\tif (!parentObj.FZero) {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + ((parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) << 24) >> 24) + 1) & 0xFFFF;\n\t\t\tparentObj.CPUTicks += 4;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\t}\n\t},\n\t//LD HL, nn\n\t//#0x21:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t},\n\t//LDI (HL), A\n\t//#0x22:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.registerA);\n\t\tparentObj.registersHL = (parentObj.registersHL + 1) & 0xFFFF;\n\t},\n\t//INC HL\n\t//#0x23:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL + 1) & 0xFFFF;\n\t},\n\t//INC H\n\t//#0x24:\n\tfunction (parentObj) {\n\t\tvar H = ((parentObj.registersHL >> 8) + 1) & 0xFF;\n\t\tparentObj.FZero = (H == 0);\n\t\tparentObj.FHalfCarry = ((H & 0xF) == 0);\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.registersHL = (H << 8) | (parentObj.registersHL & 0xFF);\n\t},\n\t//DEC H\n\t//#0x25:\n\tfunction (parentObj) {\n\t\tvar H = ((parentObj.registersHL >> 8) - 1) & 0xFF;\n\t\tparentObj.FZero = (H == 0);\n\t\tparentObj.FHalfCarry = ((H & 0xF) == 0xF);\n\t\tparentObj.FSubtract = true;\n\t\tparentObj.registersHL = (H << 8) | (parentObj.registersHL & 0xFF);\n\t},\n\t//LD H, n\n\t//#0x26:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) << 8) | (parentObj.registersHL & 0xFF);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//DAA\n\t//#0x27:\n\tfunction (parentObj) {\n\t\tif (!parentObj.FSubtract) {\n\t\t\tif (parentObj.FCarry || parentObj.registerA > 0x99) {\n\t\t\t\tparentObj.registerA = (parentObj.registerA + 0x60) & 0xFF;\n\t\t\t\tparentObj.FCarry = true;\n\t\t\t}\n\t\t\tif (parentObj.FHalfCarry || (parentObj.registerA & 0xF) > 0x9) {\n\t\t\t\tparentObj.registerA = (parentObj.registerA + 0x06) & 0xFF;\n\t\t\t\tparentObj.FHalfCarry = false;\n\t\t\t}\n\t\t}\n\t\telse if (parentObj.FCarry && parentObj.FHalfCarry) {\n\t\t\tparentObj.registerA = (parentObj.registerA + 0x9A) & 0xFF;\n\t\t\tparentObj.FHalfCarry = false;\n\t\t}\n\t\telse if (parentObj.FCarry) {\n\t\t\tparentObj.registerA = (parentObj.registerA + 0xA0) & 0xFF;\n\t\t}\n\t\telse if (parentObj.FHalfCarry) {\n\t\t\tparentObj.registerA = (parentObj.registerA + 0xFA) & 0xFF;\n\t\t\tparentObj.FHalfCarry = false;\n\t\t}\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t},\n\t//JR Z, n\n\t//#0x28:\n\tfunction (parentObj) {\n\t\tif (parentObj.FZero) {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + ((parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) << 24) >> 24) + 1) & 0xFFFF;\n\t\t\tparentObj.CPUTicks += 4;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\t}\n\t},\n\t//ADD HL, HL\n\t//#0x29:\n\tfunction (parentObj) {\n\t\tparentObj.FHalfCarry = ((parentObj.registersHL & 0xFFF) > 0x7FF);\n\t\tparentObj.FCarry = (parentObj.registersHL > 0x7FFF);\n\t\tparentObj.registersHL = (parentObj.registersHL << 1) & 0xFFFF;\n\t\tparentObj.FSubtract = false;\n\t},\n\t//LDI A, (HL)\n\t//#0x2A:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.registersHL = (parentObj.registersHL + 1) & 0xFFFF;\n\t},\n\t//DEC HL\n\t//#0x2B:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL - 1) & 0xFFFF;\n\t},\n\t//INC L\n\t//#0x2C:\n\tfunction (parentObj) {\n\t\tvar L = (parentObj.registersHL + 1) & 0xFF;\n\t\tparentObj.FZero = (L == 0);\n\t\tparentObj.FHalfCarry = ((L & 0xF) == 0);\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | L;\n\t},\n\t//DEC L\n\t//#0x2D:\n\tfunction (parentObj) {\n\t\tvar L = (parentObj.registersHL - 1) & 0xFF;\n\t\tparentObj.FZero = (L == 0);\n\t\tparentObj.FHalfCarry = ((L & 0xF) == 0xF);\n\t\tparentObj.FSubtract = true;\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | L;\n\t},\n\t//LD L, n\n\t//#0x2E:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//CPL\n\t//#0x2F:\n\tfunction (parentObj) {\n\t\tparentObj.registerA ^= 0xFF;\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = true;\n\t},\n\t//JR NC, n\n\t//#0x30:\n\tfunction (parentObj) {\n\t\tif (!parentObj.FCarry) {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + ((parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) << 24) >> 24) + 1) & 0xFFFF;\n\t\t\tparentObj.CPUTicks += 4;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\t}\n\t},\n\t//LD SP, nn\n\t//#0x31:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t},\n\t//LDD (HL), A\n\t//#0x32:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.registerA);\n\t\tparentObj.registersHL = (parentObj.registersHL - 1) & 0xFFFF;\n\t},\n\t//INC SP\n\t//#0x33:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer + 1) & 0xFFFF;\n\t},\n\t//INC (HL)\n\t//#0x34:\n\tfunction (parentObj) {\n\t\tvar temp_var = (parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) + 1) & 0xFF;\n\t\tparentObj.FZero = (temp_var == 0);\n\t\tparentObj.FHalfCarry = ((temp_var & 0xF) == 0);\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var);\n\t},\n\t//DEC (HL)\n\t//#0x35:\n\tfunction (parentObj) {\n\t\tvar temp_var = (parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) - 1) & 0xFF;\n\t\tparentObj.FZero = (temp_var == 0);\n\t\tparentObj.FHalfCarry = ((temp_var & 0xF) == 0xF);\n\t\tparentObj.FSubtract = true;\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var);\n\t},\n\t//LD (HL), n\n\t//#0x36:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter));\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//SCF\n\t//#0x37:\n\tfunction (parentObj) {\n\t\tparentObj.FCarry = true;\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = false;\n\t},\n\t//JR C, n\n\t//#0x38:\n\tfunction (parentObj) {\n\t\tif (parentObj.FCarry) {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + ((parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) << 24) >> 24) + 1) & 0xFFFF;\n\t\t\tparentObj.CPUTicks += 4;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\t}\n\t},\n\t//ADD HL, SP\n\t//#0x39:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registersHL + parentObj.stackPointer;\n\t\tparentObj.FHalfCarry = ((parentObj.registersHL & 0xFFF) > (dirtySum & 0xFFF));\n\t\tparentObj.FCarry = (dirtySum > 0xFFFF);\n\t\tparentObj.registersHL = dirtySum & 0xFFFF;\n\t\tparentObj.FSubtract = false;\n\t},\n\t//LDD A, (HL)\n\t//#0x3A:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.registersHL = (parentObj.registersHL - 1) & 0xFFFF;\n\t},\n\t//DEC SP\n\t//#0x3B:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t},\n\t//INC A\n\t//#0x3C:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = (parentObj.registerA + 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//DEC A\n\t//#0x3D:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = (parentObj.registerA - 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) == 0xF);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//LD A, n\n\t//#0x3E:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//CCF\n\t//#0x3F:\n\tfunction (parentObj) {\n\t\tparentObj.FCarry = !parentObj.FCarry;\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = false;\n\t},\n\t//LD B, B\n\t//#0x40:\n\tfunction (parentObj) {\n\t\t//Do nothing...\n\t},\n\t//LD B, C\n\t//#0x41:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = parentObj.registerC;\n\t},\n\t//LD B, D\n\t//#0x42:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = parentObj.registerD;\n\t},\n\t//LD B, E\n\t//#0x43:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = parentObj.registerE;\n\t},\n\t//LD B, H\n\t//#0x44:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = parentObj.registersHL >> 8;\n\t},\n\t//LD B, L\n\t//#0x45:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = parentObj.registersHL & 0xFF;\n\t},\n\t//LD B, (HL)\n\t//#0x46:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t},\n\t//LD B, A\n\t//#0x47:\n\tfunction (parentObj) {\n\t\tparentObj.registerB = parentObj.registerA;\n\t},\n\t//LD C, B\n\t//#0x48:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.registerB;\n\t},\n\t//LD C, C\n\t//#0x49:\n\tfunction (parentObj) {\n\t\t//Do nothing...\n\t},\n\t//LD C, D\n\t//#0x4A:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.registerD;\n\t},\n\t//LD C, E\n\t//#0x4B:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.registerE;\n\t},\n\t//LD C, H\n\t//#0x4C:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.registersHL >> 8;\n\t},\n\t//LD C, L\n\t//#0x4D:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.registersHL & 0xFF;\n\t},\n\t//LD C, (HL)\n\t//#0x4E:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t},\n\t//LD C, A\n\t//#0x4F:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.registerA;\n\t},\n\t//LD D, B\n\t//#0x50:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = parentObj.registerB;\n\t},\n\t//LD D, C\n\t//#0x51:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = parentObj.registerC;\n\t},\n\t//LD D, D\n\t//#0x52:\n\tfunction (parentObj) {\n\t\t//Do nothing...\n\t},\n\t//LD D, E\n\t//#0x53:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = parentObj.registerE;\n\t},\n\t//LD D, H\n\t//#0x54:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = parentObj.registersHL >> 8;\n\t},\n\t//LD D, L\n\t//#0x55:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = parentObj.registersHL & 0xFF;\n\t},\n\t//LD D, (HL)\n\t//#0x56:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t},\n\t//LD D, A\n\t//#0x57:\n\tfunction (parentObj) {\n\t\tparentObj.registerD = parentObj.registerA;\n\t},\n\t//LD E, B\n\t//#0x58:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.registerB;\n\t},\n\t//LD E, C\n\t//#0x59:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.registerC;\n\t},\n\t//LD E, D\n\t//#0x5A:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.registerD;\n\t},\n\t//LD E, E\n\t//#0x5B:\n\tfunction (parentObj) {\n\t\t//Do nothing...\n\t},\n\t//LD E, H\n\t//#0x5C:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.registersHL >> 8;\n\t},\n\t//LD E, L\n\t//#0x5D:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.registersHL & 0xFF;\n\t},\n\t//LD E, (HL)\n\t//#0x5E:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t},\n\t//LD E, A\n\t//#0x5F:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.registerA;\n\t},\n\t//LD H, B\n\t//#0x60:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registerB << 8) | (parentObj.registersHL & 0xFF);\n\t},\n\t//LD H, C\n\t//#0x61:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registerC << 8) | (parentObj.registersHL & 0xFF);\n\t},\n\t//LD H, D\n\t//#0x62:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registerD << 8) | (parentObj.registersHL & 0xFF);\n\t},\n\t//LD H, E\n\t//#0x63:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registerE << 8) | (parentObj.registersHL & 0xFF);\n\t},\n\t//LD H, H\n\t//#0x64:\n\tfunction (parentObj) {\n\t\t//Do nothing...\n\t},\n\t//LD H, L\n\t//#0x65:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF) * 0x101;\n\t},\n\t//LD H, (HL)\n\t//#0x66:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) << 8) | (parentObj.registersHL & 0xFF);\n\t},\n\t//LD H, A\n\t//#0x67:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registerA << 8) | (parentObj.registersHL & 0xFF);\n\t},\n\t//LD L, B\n\t//#0x68:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | parentObj.registerB;\n\t},\n\t//LD L, C\n\t//#0x69:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | parentObj.registerC;\n\t},\n\t//LD L, D\n\t//#0x6A:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | parentObj.registerD;\n\t},\n\t//LD L, E\n\t//#0x6B:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | parentObj.registerE;\n\t},\n\t//LD L, H\n\t//#0x6C:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | (parentObj.registersHL >> 8);\n\t},\n\t//LD L, L\n\t//#0x6D:\n\tfunction (parentObj) {\n\t\t//Do nothing...\n\t},\n\t//LD L, (HL)\n\t//#0x6E:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t},\n\t//LD L, A\n\t//#0x6F:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | parentObj.registerA;\n\t},\n\t//LD (HL), B\n\t//#0x70:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.registerB);\n\t},\n\t//LD (HL), C\n\t//#0x71:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.registerC);\n\t},\n\t//LD (HL), D\n\t//#0x72:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.registerD);\n\t},\n\t//LD (HL), E\n\t//#0x73:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.registerE);\n\t},\n\t//LD (HL), H\n\t//#0x74:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.registersHL >> 8);\n\t},\n\t//LD (HL), L\n\t//#0x75:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.registersHL & 0xFF);\n\t},\n\t//HALT\n\t//#0x76:\n\tfunction (parentObj) {\n\t\t//See if there's already an IRQ match:\n\t\tif ((parentObj.interruptsEnabled & parentObj.interruptsRequested & 0x1F) > 0) {\n\t\t\tif (!parentObj.cGBC && !parentObj.usedBootROM) {\n\t\t\t\t//HALT bug in the DMG CPU model (Program Counter fails to increment for one instruction after HALT):\n\t\t\t\tparentObj.skipPCIncrement = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//CGB gets around the HALT PC bug by doubling the hidden NOP.\n\t\t\t\tparentObj.CPUTicks += 4;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//CPU is stalled until the next IRQ match:\n\t\t\tparentObj.calculateHALTPeriod();\n\t\t}\n\t},\n\t//LD (HL), A\n\t//#0x77:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.registerA);\n\t},\n\t//LD A, B\n\t//#0x78:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.registerB;\n\t},\n\t//LD A, C\n\t//#0x79:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.registerC;\n\t},\n\t//LD A, D\n\t//#0x7A:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.registerD;\n\t},\n\t//LD A, E\n\t//#0x7B:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.registerE;\n\t},\n\t//LD A, H\n\t//#0x7C:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.registersHL >> 8;\n\t},\n\t//LD A, L\n\t//#0x7D:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.registersHL & 0xFF;\n\t},\n\t//LD, A, (HL)\n\t//#0x7E:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t},\n\t//LD A, A\n\t//#0x7F:\n\tfunction (parentObj) {\n\t\t//Do Nothing...\n\t},\n\t//ADD A, B\n\t//#0x80:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.registerB;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) < (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADD A, C\n\t//#0x81:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.registerC;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) < (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADD A, D\n\t//#0x82:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.registerD;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) < (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADD A, E\n\t//#0x83:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.registerE;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) < (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADD A, H\n\t//#0x84:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + (parentObj.registersHL >> 8);\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) < (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADD A, L\n\t//#0x85:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + (parentObj.registersHL & 0xFF);\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) < (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADD A, (HL)\n\t//#0x86:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) < (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADD A, A\n\t//#0x87:\n\tfunction (parentObj) {\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0x8) == 0x8);\n\t\tparentObj.FCarry = (parentObj.registerA > 0x7F);\n\t\tparentObj.registerA = (parentObj.registerA << 1) & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADC A, B\n\t//#0x88:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.registerB + ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) + (parentObj.registerB & 0xF) + ((parentObj.FCarry) ? 1 : 0) > 0xF);\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADC A, C\n\t//#0x89:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.registerC + ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) + (parentObj.registerC & 0xF) + ((parentObj.FCarry) ? 1 : 0) > 0xF);\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADC A, D\n\t//#0x8A:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.registerD + ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) + (parentObj.registerD & 0xF) + ((parentObj.FCarry) ? 1 : 0) > 0xF);\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADC A, E\n\t//#0x8B:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.registerE + ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) + (parentObj.registerE & 0xF) + ((parentObj.FCarry) ? 1 : 0) > 0xF);\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADC A, H\n\t//#0x8C:\n\tfunction (parentObj) {\n\t\tvar tempValue = (parentObj.registersHL >> 8);\n\t\tvar dirtySum = parentObj.registerA + tempValue + ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) + (tempValue & 0xF) + ((parentObj.FCarry) ? 1 : 0) > 0xF);\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADC A, L\n\t//#0x8D:\n\tfunction (parentObj) {\n\t\tvar tempValue = (parentObj.registersHL & 0xFF);\n\t\tvar dirtySum = parentObj.registerA + tempValue + ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) + (tempValue & 0xF) + ((parentObj.FCarry) ? 1 : 0) > 0xF);\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADC A, (HL)\n\t//#0x8E:\n\tfunction (parentObj) {\n\t\tvar tempValue = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tvar dirtySum = parentObj.registerA + tempValue + ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) + (tempValue & 0xF) + ((parentObj.FCarry) ? 1 : 0) > 0xF);\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//ADC A, A\n\t//#0x8F:\n\tfunction (parentObj) {\n\t\t//shift left register A one bit for some ops here as an optimization:\n\t\tvar dirtySum = (parentObj.registerA << 1) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((((parentObj.registerA << 1) & 0x1E) | ((parentObj.FCarry) ? 1 : 0)) > 0xF);\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//SUB A, B\n\t//#0x90:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerB;\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) < (dirtySum & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SUB A, C\n\t//#0x91:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerC;\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) < (dirtySum & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SUB A, D\n\t//#0x92:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerD;\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) < (dirtySum & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SUB A, E\n\t//#0x93:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerE;\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) < (dirtySum & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SUB A, H\n\t//#0x94:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - (parentObj.registersHL >> 8);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) < (dirtySum & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SUB A, L\n\t//#0x95:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - (parentObj.registersHL & 0xFF);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) < (dirtySum & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SUB A, (HL)\n\t//#0x96:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) < (dirtySum & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SUB A, A\n\t//#0x97:\n\tfunction (parentObj) {\n\t\t//number - same number == 0\n\t\tparentObj.registerA = 0;\n\t\tparentObj.FHalfCarry = parentObj.FCarry = false;\n\t\tparentObj.FZero = parentObj.FSubtract = true;\n\t},\n\t//SBC A, B\n\t//#0x98:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerB - ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) - (parentObj.registerB & 0xF) - ((parentObj.FCarry) ? 1 : 0) < 0);\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SBC A, C\n\t//#0x99:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerC - ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) - (parentObj.registerC & 0xF) - ((parentObj.FCarry) ? 1 : 0) < 0);\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SBC A, D\n\t//#0x9A:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerD - ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) - (parentObj.registerD & 0xF) - ((parentObj.FCarry) ? 1 : 0) < 0);\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SBC A, E\n\t//#0x9B:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerE - ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) - (parentObj.registerE & 0xF) - ((parentObj.FCarry) ? 1 : 0) < 0);\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SBC A, H\n\t//#0x9C:\n\tfunction (parentObj) {\n\t\tvar temp_var = parentObj.registersHL >> 8;\n\t\tvar dirtySum = parentObj.registerA - temp_var - ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) - (temp_var & 0xF) - ((parentObj.FCarry) ? 1 : 0) < 0);\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SBC A, L\n\t//#0x9D:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - (parentObj.registersHL & 0xFF) - ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) - (parentObj.registersHL & 0xF) - ((parentObj.FCarry) ? 1 : 0) < 0);\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SBC A, (HL)\n\t//#0x9E:\n\tfunction (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tvar dirtySum = parentObj.registerA - temp_var - ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) - (temp_var & 0xF) - ((parentObj.FCarry) ? 1 : 0) < 0);\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//SBC A, A\n\t//#0x9F:\n\tfunction (parentObj) {\n\t\t//Optimized SBC A:\n\t\tif (parentObj.FCarry) {\n\t\t\tparentObj.FZero = false;\n\t\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = true;\n\t\t\tparentObj.registerA = 0xFF;\n\t\t}\n\t\telse {\n\t\t\tparentObj.FHalfCarry = parentObj.FCarry = false;\n\t\t\tparentObj.FSubtract = parentObj.FZero = true;\n\t\t\tparentObj.registerA = 0;\n\t\t}\n\t},\n\t//AND B\n\t//#0xA0:\n\tfunction (parentObj) {\n\t\tparentObj.registerA &= parentObj.registerB;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = parentObj.FCarry = false;\n\t},\n\t//AND C\n\t//#0xA1:\n\tfunction (parentObj) {\n\t\tparentObj.registerA &= parentObj.registerC;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = parentObj.FCarry = false;\n\t},\n\t//AND D\n\t//#0xA2:\n\tfunction (parentObj) {\n\t\tparentObj.registerA &= parentObj.registerD;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = parentObj.FCarry = false;\n\t},\n\t//AND E\n\t//#0xA3:\n\tfunction (parentObj) {\n\t\tparentObj.registerA &= parentObj.registerE;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = parentObj.FCarry = false;\n\t},\n\t//AND H\n\t//#0xA4:\n\tfunction (parentObj) {\n\t\tparentObj.registerA &= (parentObj.registersHL >> 8);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = parentObj.FCarry = false;\n\t},\n\t//AND L\n\t//#0xA5:\n\tfunction (parentObj) {\n\t\tparentObj.registerA &= parentObj.registersHL;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = parentObj.FCarry = false;\n\t},\n\t//AND (HL)\n\t//#0xA6:\n\tfunction (parentObj) {\n\t\tparentObj.registerA &= parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = parentObj.FCarry = false;\n\t},\n\t//AND A\n\t//#0xA7:\n\tfunction (parentObj) {\n\t\t//number & same number = same number\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = parentObj.FCarry = false;\n\t},\n\t//XOR B\n\t//#0xA8:\n\tfunction (parentObj) {\n\t\tparentObj.registerA ^= parentObj.registerB;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = false;\n\t},\n\t//XOR C\n\t//#0xA9:\n\tfunction (parentObj) {\n\t\tparentObj.registerA ^= parentObj.registerC;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = false;\n\t},\n\t//XOR D\n\t//#0xAA:\n\tfunction (parentObj) {\n\t\tparentObj.registerA ^= parentObj.registerD;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = false;\n\t},\n\t//XOR E\n\t//#0xAB:\n\tfunction (parentObj) {\n\t\tparentObj.registerA ^= parentObj.registerE;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = false;\n\t},\n\t//XOR H\n\t//#0xAC:\n\tfunction (parentObj) {\n\t\tparentObj.registerA ^= (parentObj.registersHL >> 8);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = false;\n\t},\n\t//XOR L\n\t//#0xAD:\n\tfunction (parentObj) {\n\t\tparentObj.registerA ^= (parentObj.registersHL & 0xFF);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = false;\n\t},\n\t//XOR (HL)\n\t//#0xAE:\n\tfunction (parentObj) {\n\t\tparentObj.registerA ^= parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = false;\n\t},\n\t//XOR A\n\t//#0xAF:\n\tfunction (parentObj) {\n\t\t//number ^ same number == 0\n\t\tparentObj.registerA = 0;\n\t\tparentObj.FZero = true;\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = false;\n\t},\n\t//OR B\n\t//#0xB0:\n\tfunction (parentObj) {\n\t\tparentObj.registerA |= parentObj.registerB;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FCarry = parentObj.FHalfCarry = false;\n\t},\n\t//OR C\n\t//#0xB1:\n\tfunction (parentObj) {\n\t\tparentObj.registerA |= parentObj.registerC;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FCarry = parentObj.FHalfCarry = false;\n\t},\n\t//OR D\n\t//#0xB2:\n\tfunction (parentObj) {\n\t\tparentObj.registerA |= parentObj.registerD;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FCarry = parentObj.FHalfCarry = false;\n\t},\n\t//OR E\n\t//#0xB3:\n\tfunction (parentObj) {\n\t\tparentObj.registerA |= parentObj.registerE;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FCarry = parentObj.FHalfCarry = false;\n\t},\n\t//OR H\n\t//#0xB4:\n\tfunction (parentObj) {\n\t\tparentObj.registerA |= (parentObj.registersHL >> 8);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FCarry = parentObj.FHalfCarry = false;\n\t},\n\t//OR L\n\t//#0xB5:\n\tfunction (parentObj) {\n\t\tparentObj.registerA |= (parentObj.registersHL & 0xFF);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FCarry = parentObj.FHalfCarry = false;\n\t},\n\t//OR (HL)\n\t//#0xB6:\n\tfunction (parentObj) {\n\t\tparentObj.registerA |= parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FCarry = parentObj.FHalfCarry = false;\n\t},\n\t//OR A\n\t//#0xB7:\n\tfunction (parentObj) {\n\t\t//number | same number == same number\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FCarry = parentObj.FHalfCarry = false;\n\t},\n\t//CP B\n\t//#0xB8:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerB;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) > (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//CP C\n\t//#0xB9:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerC;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) > (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//CP D\n\t//#0xBA:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerD;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) > (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//CP E\n\t//#0xBB:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.registerE;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) > (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//CP H\n\t//#0xBC:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - (parentObj.registersHL >> 8);\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) > (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//CP L\n\t//#0xBD:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - (parentObj.registersHL & 0xFF);\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) > (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//CP (HL)\n\t//#0xBE:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) > (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//CP A\n\t//#0xBF:\n\tfunction (parentObj) {\n\t\tparentObj.FHalfCarry = parentObj.FCarry = false;\n\t\tparentObj.FZero = parentObj.FSubtract = true;\n\t},\n\t//RET !FZ\n\t//#0xC0:\n\tfunction (parentObj) {\n\t\tif (!parentObj.FZero) {\n\t\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t\t\tparentObj.CPUTicks += 12;\n\t\t}\n\t},\n\t//POP BC\n\t//#0xC1:\n\tfunction (parentObj) {\n\t\tparentObj.registerC = parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\tparentObj.registerB = parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF);\n\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t},\n\t//JP !FZ, nn\n\t//#0xC2:\n\tfunction (parentObj) {\n\t\tif (!parentObj.FZero) {\n\t\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\t\tparentObj.CPUTicks += 4;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t}\n\t},\n\t//JP nn\n\t//#0xC3:\n\tfunction (parentObj) {\n\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t},\n\t//CALL !FZ, nn\n\t//#0xC4:\n\tfunction (parentObj) {\n\t\tif (!parentObj.FZero) {\n\t\t\tvar temp_pc = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\t\tparentObj.programCounter = temp_pc;\n\t\t\tparentObj.CPUTicks += 12;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t}\n\t},\n\t//PUSH BC\n\t//#0xC5:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.registerB);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.registerC);\n\t},\n\t//ADD, n\n\t//#0xC6:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA + parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) < (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//RST 0\n\t//#0xC7:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\tparentObj.programCounter = 0;\n\t},\n\t//RET FZ\n\t//#0xC8:\n\tfunction (parentObj) {\n\t\tif (parentObj.FZero) {\n\t\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t\t\tparentObj.CPUTicks += 12;\n\t\t}\n\t},\n\t//RET\n\t//#0xC9:\n\tfunction (parentObj) {\n\t\tparentObj.programCounter =  (parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t},\n\t//JP FZ, nn\n\t//#0xCA:\n\tfunction (parentObj) {\n\t\tif (parentObj.FZero) {\n\t\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\t\tparentObj.CPUTicks += 4;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t}\n\t},\n\t//Secondary OP Code Set:\n\t//#0xCB:\n\tfunction (parentObj) {\n\t\tvar opcode = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\t//Increment the program counter to the next instruction:\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\t//Get how many CPU cycles the current 0xCBXX op code counts for:\n\t\tparentObj.CPUTicks += parentObj.SecondaryTICKTable[opcode];\n\t\t//Execute secondary OP codes for the 0xCB OP code call.\n\t\tparentObj.CBOPCODE[opcode](parentObj);\n\t},\n\t//CALL FZ, nn\n\t//#0xCC:\n\tfunction (parentObj) {\n\t\tif (parentObj.FZero) {\n\t\t\tvar temp_pc = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\t\tparentObj.programCounter = temp_pc;\n\t\t\tparentObj.CPUTicks += 12;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t}\n\t},\n\t//CALL nn\n\t//#0xCD:\n\tfunction (parentObj) {\n\t\tvar temp_pc = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\tparentObj.programCounter = temp_pc;\n\t},\n\t//ADC A, n\n\t//#0xCE:\n\tfunction (parentObj) {\n\t\tvar tempValue = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tvar dirtySum = parentObj.registerA + tempValue + ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) + (tempValue & 0xF) + ((parentObj.FCarry) ? 1 : 0) > 0xF);\n\t\tparentObj.FCarry = (dirtySum > 0xFF);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = false;\n\t},\n\t//RST 0x8\n\t//#0xCF:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\tparentObj.programCounter = 0x8;\n\t},\n\t//RET !FC\n\t//#0xD0:\n\tfunction (parentObj) {\n\t\tif (!parentObj.FCarry) {\n\t\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t\t\tparentObj.CPUTicks += 12;\n\t\t}\n\t},\n\t//POP DE\n\t//#0xD1:\n\tfunction (parentObj) {\n\t\tparentObj.registerE = parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\tparentObj.registerD = parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF);\n\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t},\n\t//JP !FC, nn\n\t//#0xD2:\n\tfunction (parentObj) {\n\t\tif (!parentObj.FCarry) {\n\t\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\t\tparentObj.CPUTicks += 4;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t}\n\t},\n\t//0xD3 - Illegal\n\t//#0xD3:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xD3 called, pausing emulation.\");\n\t\t//pause();\n\t},\n\t//CALL !FC, nn\n\t//#0xD4:\n\tfunction (parentObj) {\n\t\tif (!parentObj.FCarry) {\n\t\t\tvar temp_pc = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\t\tparentObj.programCounter = temp_pc;\n\t\t\tparentObj.CPUTicks += 12;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t}\n\t},\n\t//PUSH DE\n\t//#0xD5:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.registerD);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.registerE);\n\t},\n\t//SUB A, n\n\t//#0xD6:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) < (dirtySum & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//RST 0x10\n\t//#0xD7:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\tparentObj.programCounter = 0x10;\n\t},\n\t//RET FC\n\t//#0xD8:\n\tfunction (parentObj) {\n\t\tif (parentObj.FCarry) {\n\t\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t\t\tparentObj.CPUTicks += 12;\n\t\t}\n\t},\n\t//RETI\n\t//#0xD9:\n\tfunction (parentObj) {\n\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t\t//Immediate for HALT:\n\t\tparentObj.IRQEnableDelay = (parentObj.IRQEnableDelay == 2 || parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) == 0x76) ? 1 : 2;\n\t},\n\t//JP FC, nn\n\t//#0xDA:\n\tfunction (parentObj) {\n\t\tif (parentObj.FCarry) {\n\t\t\tparentObj.programCounter = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\t\tparentObj.CPUTicks += 4;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t}\n\t},\n\t//0xDB - Illegal\n\t//#0xDB:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xDB called, pausing emulation.\");\n\t\t//pause();\n\t},\n\t//CALL FC, nn\n\t//#0xDC:\n\tfunction (parentObj) {\n\t\tif (parentObj.FCarry) {\n\t\t\tvar temp_pc = (parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\t\tparentObj.programCounter = temp_pc;\n\t\t\tparentObj.CPUTicks += 12;\n\t\t}\n\t\telse {\n\t\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t\t}\n\t},\n\t//0xDD - Illegal\n\t//#0xDD:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xDD called, pausing emulation.\");\n\t\t//pause();\n\t},\n\t//SBC A, n\n\t//#0xDE:\n\tfunction (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tvar dirtySum = parentObj.registerA - temp_var - ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = ((parentObj.registerA & 0xF) - (temp_var & 0xF) - ((parentObj.FCarry) ? 1 : 0) < 0);\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.registerA = dirtySum & 0xFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//RST 0x18\n\t//#0xDF:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\tparentObj.programCounter = 0x18;\n\t},\n\t//LDH (n), A\n\t//#0xE0:\n\tfunction (parentObj) {\n\t\tparentObj.memoryHighWrite(parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter), parentObj.registerA);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//POP HL\n\t//#0xE1:\n\tfunction (parentObj) {\n\t\tparentObj.registersHL = (parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t},\n\t//LD (0xFF00 + C), A\n\t//#0xE2:\n\tfunction (parentObj) {\n\t\tparentObj.memoryHighWriter[parentObj.registerC](parentObj, parentObj.registerC, parentObj.registerA);\n\t},\n\t//0xE3 - Illegal\n\t//#0xE3:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xE3 called, pausing emulation.\", 2);\n\t\t//pause();\n\t},\n\t//0xE4 - Illegal\n\t//#0xE4:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xE4 called, pausing emulation.\", 2);\n\t\t//pause();\n\t},\n\t//PUSH HL\n\t//#0xE5:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.registersHL >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.registersHL & 0xFF);\n\t},\n\t//AND n\n\t//#0xE6:\n\tfunction (parentObj) {\n\t\tparentObj.registerA &= parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = parentObj.FCarry = false;\n\t},\n\t//RST 0x20\n\t//#0xE7:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\tparentObj.programCounter = 0x20;\n\t},\n\t//ADD SP, n\n\t//#0xE8:\n\tfunction (parentObj) {\n\t\tvar temp_value2 = (parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) << 24) >> 24;\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tvar temp_value = (parentObj.stackPointer + temp_value2) & 0xFFFF;\n\t\ttemp_value2 = parentObj.stackPointer ^ temp_value2 ^ temp_value;\n\t\tparentObj.stackPointer = temp_value;\n\t\tparentObj.FCarry = ((temp_value2 & 0x100) == 0x100);\n\t\tparentObj.FHalfCarry = ((temp_value2 & 0x10) == 0x10);\n\t\tparentObj.FZero = parentObj.FSubtract = false;\n\t},\n\t//JP, (HL)\n\t//#0xE9:\n\tfunction (parentObj) {\n\t\tparentObj.programCounter = parentObj.registersHL;\n\t},\n\t//LD n, A\n\t//#0xEA:\n\tfunction (parentObj) {\n\t\tparentObj.memoryWrite((parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter), parentObj.registerA);\n\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t},\n\t//0xEB - Illegal\n\t//#0xEB:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xEB called, pausing emulation.\", 2);\n\t\t//pause();\n\t},\n\t//0xEC - Illegal\n\t//#0xEC:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xEC called, pausing emulation.\", 2);\n\t\t//pause();\n\t},\n\t//0xED - Illegal\n\t//#0xED:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xED called, pausing emulation.\", 2);\n\t\t//pause();\n\t},\n\t//XOR n\n\t//#0xEE:\n\tfunction (parentObj) {\n\t\tparentObj.registerA ^= parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FSubtract = parentObj.FHalfCarry = parentObj.FCarry = false;\n\t},\n\t//RST 0x28\n\t//#0xEF:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\tparentObj.programCounter = 0x28;\n\t},\n\t//LDH A, (n)\n\t//#0xF0:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.memoryHighRead(parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter));\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t},\n\t//POP AF\n\t//#0xF1:\n\tfunction (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.stackPointer](parentObj, parentObj.stackPointer);\n\t\tparentObj.FZero = (temp_var > 0x7F);\n\t\tparentObj.FSubtract = ((temp_var & 0x40) == 0x40);\n\t\tparentObj.FHalfCarry = ((temp_var & 0x20) == 0x20);\n\t\tparentObj.FCarry = ((temp_var & 0x10) == 0x10);\n\t\tparentObj.registerA = parentObj.memoryRead((parentObj.stackPointer + 1) & 0xFFFF);\n\t\tparentObj.stackPointer = (parentObj.stackPointer + 2) & 0xFFFF;\n\t},\n\t//LD A, (0xFF00 + C)\n\t//#0xF2:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.memoryHighReader[parentObj.registerC](parentObj, parentObj.registerC);\n\t},\n\t//DI\n\t//#0xF3:\n\tfunction (parentObj) {\n\t\tparentObj.IME = false;\n\t\tparentObj.IRQEnableDelay = 0;\n\t},\n\t//0xF4 - Illegal\n\t//#0xF4:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xF4 called, pausing emulation.\", 2);\n\t\t//pause();\n\t},\n\t//PUSH AF\n\t//#0xF5:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.registerA);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, ((parentObj.FZero) ? 0x80 : 0) | ((parentObj.FSubtract) ? 0x40 : 0) | ((parentObj.FHalfCarry) ? 0x20 : 0) | ((parentObj.FCarry) ? 0x10 : 0));\n\t},\n\t//OR n\n\t//#0xF6:\n\tfunction (parentObj) {\n\t\tparentObj.registerA |= parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tparentObj.FSubtract = parentObj.FCarry = parentObj.FHalfCarry = false;\n\t},\n\t//RST 0x30\n\t//#0xF7:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\tparentObj.programCounter = 0x30;\n\t},\n\t//LDHL SP, n\n\t//#0xF8:\n\tfunction (parentObj) {\n\t\tvar temp_var = (parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) << 24) >> 24;\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tparentObj.registersHL = (parentObj.stackPointer + temp_var) & 0xFFFF;\n\t\ttemp_var = parentObj.stackPointer ^ temp_var ^ parentObj.registersHL;\n\t\tparentObj.FCarry = ((temp_var & 0x100) == 0x100);\n\t\tparentObj.FHalfCarry = ((temp_var & 0x10) == 0x10);\n\t\tparentObj.FZero = parentObj.FSubtract = false;\n\t},\n\t//LD SP, HL\n\t//#0xF9:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = parentObj.registersHL;\n\t},\n\t//LD A, (nn)\n\t//#0xFA:\n\tfunction (parentObj) {\n\t\tparentObj.registerA = parentObj.memoryRead((parentObj.memoryRead((parentObj.programCounter + 1) & 0xFFFF) << 8) | parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter));\n\t\tparentObj.programCounter = (parentObj.programCounter + 2) & 0xFFFF;\n\t},\n\t//EI\n\t//#0xFB:\n\tfunction (parentObj) {\n\t\t//Immediate for HALT:\n\t\tparentObj.IRQEnableDelay = (parentObj.IRQEnableDelay == 2 || parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter) == 0x76) ? 1 : 2;\n\t},\n\t//0xFC - Illegal\n\t//#0xFC:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xFC called, pausing emulation.\", 2);\n\t\t//pause();\n\t},\n\t//0xFD - Illegal\n\t//#0xFD:\n\tfunction (parentObj) {\n\t\tconsole.log(\"Illegal op code 0xFD called, pausing emulation.\", 2);\n\t\t//pause();\n\t},\n\t//CP n\n\t//#0xFE:\n\tfunction (parentObj) {\n\t\tvar dirtySum = parentObj.registerA - parentObj.memoryReader[parentObj.programCounter](parentObj, parentObj.programCounter);\n\t\tparentObj.programCounter = (parentObj.programCounter + 1) & 0xFFFF;\n\t\tparentObj.FHalfCarry = ((dirtySum & 0xF) > (parentObj.registerA & 0xF));\n\t\tparentObj.FCarry = (dirtySum < 0);\n\t\tparentObj.FZero = (dirtySum == 0);\n\t\tparentObj.FSubtract = true;\n\t},\n\t//RST 0x38\n\t//#0xFF:\n\tfunction (parentObj) {\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter >> 8);\n\t\tparentObj.stackPointer = (parentObj.stackPointer - 1) & 0xFFFF;\n\t\tparentObj.memoryWriter[parentObj.stackPointer](parentObj, parentObj.stackPointer, parentObj.programCounter & 0xFF);\n\t\tparentObj.programCounter = 0x38;\n\t}\n];\n\n\nmodule.exports = OPCODE;\n","var CBOPCODE = [\n\t//RLC B\n\t//#0x00:\n\tfunction (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerB > 0x7F);\n\t\tparentObj.registerB = ((parentObj.registerB << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t}\n\t//RLC C\n\t//#0x01:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerC > 0x7F);\n\t\tparentObj.registerC = ((parentObj.registerC << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t}\n\t//RLC D\n\t//#0x02:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerD > 0x7F);\n\t\tparentObj.registerD = ((parentObj.registerD << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t}\n\t//RLC E\n\t//#0x03:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerE > 0x7F);\n\t\tparentObj.registerE = ((parentObj.registerE << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t}\n\t//RLC H\n\t//#0x04:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registersHL > 0x7FFF);\n\t\tparentObj.registersHL = ((parentObj.registersHL << 1) & 0xFE00) | ((parentObj.FCarry) ? 0x100 : 0) | (parentObj.registersHL & 0xFF);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registersHL < 0x100);\n\t}\n\t//RLC L\n\t//#0x05:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registersHL & 0x80) == 0x80);\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | ((parentObj.registersHL << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0xFF) == 0);\n\t}\n\t//RLC (HL)\n\t//#0x06:\n\t,function (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FCarry = (temp_var > 0x7F);\n\t\ttemp_var = ((temp_var << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (temp_var == 0);\n\t}\n\t//RLC A\n\t//#0x07:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerA > 0x7F);\n\t\tparentObj.registerA = ((parentObj.registerA << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t}\n\t//RRC B\n\t//#0x08:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerB & 0x01) == 0x01);\n\t\tparentObj.registerB = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerB >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t}\n\t//RRC C\n\t//#0x09:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerC & 0x01) == 0x01);\n\t\tparentObj.registerC = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerC >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t}\n\t//RRC D\n\t//#0x0A:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerD & 0x01) == 0x01);\n\t\tparentObj.registerD = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerD >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t}\n\t//RRC E\n\t//#0x0B:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerE & 0x01) == 0x01);\n\t\tparentObj.registerE = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerE >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t}\n\t//RRC H\n\t//#0x0C:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registersHL & 0x0100) == 0x0100);\n\t\tparentObj.registersHL = ((parentObj.FCarry) ? 0x8000 : 0) | ((parentObj.registersHL >> 1) & 0xFF00) | (parentObj.registersHL & 0xFF);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registersHL < 0x100);\n\t}\n\t//RRC L\n\t//#0x0D:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registersHL & 0x01) == 0x01);\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | ((parentObj.FCarry) ? 0x80 : 0) | ((parentObj.registersHL & 0xFF) >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0xFF) == 0);\n\t}\n\t//RRC (HL)\n\t//#0x0E:\n\t,function (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FCarry = ((temp_var & 0x01) == 0x01);\n\t\ttemp_var = ((parentObj.FCarry) ? 0x80 : 0) | (temp_var >> 1);\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (temp_var == 0);\n\t}\n\t//RRC A\n\t//#0x0F:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerA & 0x01) == 0x01);\n\t\tparentObj.registerA = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerA >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t}\n\t//RL B\n\t//#0x10:\n\t,function (parentObj) {\n\t\tvar newFCarry = (parentObj.registerB > 0x7F);\n\t\tparentObj.registerB = ((parentObj.registerB << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t}\n\t//RL C\n\t//#0x11:\n\t,function (parentObj) {\n\t\tvar newFCarry = (parentObj.registerC > 0x7F);\n\t\tparentObj.registerC = ((parentObj.registerC << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t}\n\t//RL D\n\t//#0x12:\n\t,function (parentObj) {\n\t\tvar newFCarry = (parentObj.registerD > 0x7F);\n\t\tparentObj.registerD = ((parentObj.registerD << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t}\n\t//RL E\n\t//#0x13:\n\t,function (parentObj) {\n\t\tvar newFCarry = (parentObj.registerE > 0x7F);\n\t\tparentObj.registerE = ((parentObj.registerE << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t}\n\t//RL H\n\t//#0x14:\n\t,function (parentObj) {\n\t\tvar newFCarry = (parentObj.registersHL > 0x7FFF);\n\t\tparentObj.registersHL = ((parentObj.registersHL << 1) & 0xFE00) | ((parentObj.FCarry) ? 0x100 : 0) | (parentObj.registersHL & 0xFF);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registersHL < 0x100);\n\t}\n\t//RL L\n\t//#0x15:\n\t,function (parentObj) {\n\t\tvar newFCarry = ((parentObj.registersHL & 0x80) == 0x80);\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | ((parentObj.registersHL << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0xFF) == 0);\n\t}\n\t//RL (HL)\n\t//#0x16:\n\t,function (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tvar newFCarry = (temp_var > 0x7F);\n\t\ttemp_var = ((temp_var << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (temp_var == 0);\n\t}\n\t//RL A\n\t//#0x17:\n\t,function (parentObj) {\n\t\tvar newFCarry = (parentObj.registerA > 0x7F);\n\t\tparentObj.registerA = ((parentObj.registerA << 1) & 0xFF) | ((parentObj.FCarry) ? 1 : 0);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t}\n\t//RR B\n\t//#0x18:\n\t,function (parentObj) {\n\t\tvar newFCarry = ((parentObj.registerB & 0x01) == 0x01);\n\t\tparentObj.registerB = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerB >> 1);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t}\n\t//RR C\n\t//#0x19:\n\t,function (parentObj) {\n\t\tvar newFCarry = ((parentObj.registerC & 0x01) == 0x01);\n\t\tparentObj.registerC = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerC >> 1);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t}\n\t//RR D\n\t//#0x1A:\n\t,function (parentObj) {\n\t\tvar newFCarry = ((parentObj.registerD & 0x01) == 0x01);\n\t\tparentObj.registerD = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerD >> 1);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t}\n\t//RR E\n\t//#0x1B:\n\t,function (parentObj) {\n\t\tvar newFCarry = ((parentObj.registerE & 0x01) == 0x01);\n\t\tparentObj.registerE = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerE >> 1);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t}\n\t//RR H\n\t//#0x1C:\n\t,function (parentObj) {\n\t\tvar newFCarry = ((parentObj.registersHL & 0x0100) == 0x0100);\n\t\tparentObj.registersHL = ((parentObj.FCarry) ? 0x8000 : 0) | ((parentObj.registersHL >> 1) & 0xFF00) | (parentObj.registersHL & 0xFF);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registersHL < 0x100);\n\t}\n\t//RR L\n\t//#0x1D:\n\t,function (parentObj) {\n\t\tvar newFCarry = ((parentObj.registersHL & 0x01) == 0x01);\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | ((parentObj.FCarry) ? 0x80 : 0) | ((parentObj.registersHL & 0xFF) >> 1);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0xFF) == 0);\n\t}\n\t//RR (HL)\n\t//#0x1E:\n\t,function (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tvar newFCarry = ((temp_var & 0x01) == 0x01);\n\t\ttemp_var = ((parentObj.FCarry) ? 0x80 : 0) | (temp_var >> 1);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (temp_var == 0);\n\t}\n\t//RR A\n\t//#0x1F:\n\t,function (parentObj) {\n\t\tvar newFCarry = ((parentObj.registerA & 0x01) == 0x01);\n\t\tparentObj.registerA = ((parentObj.FCarry) ? 0x80 : 0) | (parentObj.registerA >> 1);\n\t\tparentObj.FCarry = newFCarry;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t}\n\t//SLA B\n\t//#0x20:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerB > 0x7F);\n\t\tparentObj.registerB = (parentObj.registerB << 1) & 0xFF;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t}\n\t//SLA C\n\t//#0x21:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerC > 0x7F);\n\t\tparentObj.registerC = (parentObj.registerC << 1) & 0xFF;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t}\n\t//SLA D\n\t//#0x22:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerD > 0x7F);\n\t\tparentObj.registerD = (parentObj.registerD << 1) & 0xFF;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t}\n\t//SLA E\n\t//#0x23:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerE > 0x7F);\n\t\tparentObj.registerE = (parentObj.registerE << 1) & 0xFF;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t}\n\t//SLA H\n\t//#0x24:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registersHL > 0x7FFF);\n\t\tparentObj.registersHL = ((parentObj.registersHL << 1) & 0xFE00) | (parentObj.registersHL & 0xFF);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registersHL < 0x100);\n\t}\n\t//SLA L\n\t//#0x25:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registersHL & 0x0080) == 0x0080);\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | ((parentObj.registersHL << 1) & 0xFF);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0xFF) == 0);\n\t}\n\t//SLA (HL)\n\t//#0x26:\n\t,function (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FCarry = (temp_var > 0x7F);\n\t\ttemp_var = (temp_var << 1) & 0xFF;\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (temp_var == 0);\n\t}\n\t//SLA A\n\t//#0x27:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = (parentObj.registerA > 0x7F);\n\t\tparentObj.registerA = (parentObj.registerA << 1) & 0xFF;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t}\n\t//SRA B\n\t//#0x28:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerB & 0x01) == 0x01);\n\t\tparentObj.registerB = (parentObj.registerB & 0x80) | (parentObj.registerB >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t}\n\t//SRA C\n\t//#0x29:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerC & 0x01) == 0x01);\n\t\tparentObj.registerC = (parentObj.registerC & 0x80) | (parentObj.registerC >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t}\n\t//SRA D\n\t//#0x2A:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerD & 0x01) == 0x01);\n\t\tparentObj.registerD = (parentObj.registerD & 0x80) | (parentObj.registerD >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t}\n\t//SRA E\n\t//#0x2B:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerE & 0x01) == 0x01);\n\t\tparentObj.registerE = (parentObj.registerE & 0x80) | (parentObj.registerE >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t}\n\t//SRA H\n\t//#0x2C:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registersHL & 0x0100) == 0x0100);\n\t\tparentObj.registersHL = ((parentObj.registersHL >> 1) & 0xFF00) | (parentObj.registersHL & 0x80FF);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registersHL < 0x100);\n\t}\n\t//SRA L\n\t//#0x2D:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registersHL & 0x0001) == 0x0001);\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF80) | ((parentObj.registersHL & 0xFF) >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0xFF) == 0);\n\t}\n\t//SRA (HL)\n\t//#0x2E:\n\t,function (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FCarry = ((temp_var & 0x01) == 0x01);\n\t\ttemp_var = (temp_var & 0x80) | (temp_var >> 1);\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (temp_var == 0);\n\t}\n\t//SRA A\n\t//#0x2F:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerA & 0x01) == 0x01);\n\t\tparentObj.registerA = (parentObj.registerA & 0x80) | (parentObj.registerA >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t}\n\t//SWAP B\n\t//#0x30:\n\t,function (parentObj) {\n\t\tparentObj.registerB = ((parentObj.registerB & 0xF) << 4) | (parentObj.registerB >> 4);\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t\tparentObj.FCarry = parentObj.FHalfCarry = parentObj.FSubtract = false;\n\t}\n\t//SWAP C\n\t//#0x31:\n\t,function (parentObj) {\n\t\tparentObj.registerC = ((parentObj.registerC & 0xF) << 4) | (parentObj.registerC >> 4);\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t\tparentObj.FCarry = parentObj.FHalfCarry = parentObj.FSubtract = false;\n\t}\n\t//SWAP D\n\t//#0x32:\n\t,function (parentObj) {\n\t\tparentObj.registerD = ((parentObj.registerD & 0xF) << 4) | (parentObj.registerD >> 4);\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t\tparentObj.FCarry = parentObj.FHalfCarry = parentObj.FSubtract = false;\n\t}\n\t//SWAP E\n\t//#0x33:\n\t,function (parentObj) {\n\t\tparentObj.registerE = ((parentObj.registerE & 0xF) << 4) | (parentObj.registerE >> 4);\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t\tparentObj.FCarry = parentObj.FHalfCarry = parentObj.FSubtract = false;\n\t}\n\t//SWAP H\n\t//#0x34:\n\t,function (parentObj) {\n\t\tparentObj.registersHL = ((parentObj.registersHL & 0xF00) << 4) | ((parentObj.registersHL & 0xF000) >> 4) | (parentObj.registersHL & 0xFF);\n\t\tparentObj.FZero = (parentObj.registersHL < 0x100);\n\t\tparentObj.FCarry = parentObj.FHalfCarry = parentObj.FSubtract = false;\n\t}\n\t//SWAP L\n\t//#0x35:\n\t,function (parentObj) {\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | ((parentObj.registersHL & 0xF) << 4) | ((parentObj.registersHL & 0xF0) >> 4);\n\t\tparentObj.FZero = ((parentObj.registersHL & 0xFF) == 0);\n\t\tparentObj.FCarry = parentObj.FHalfCarry = parentObj.FSubtract = false;\n\t}\n\t//SWAP (HL)\n\t//#0x36:\n\t,function (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\ttemp_var = ((temp_var & 0xF) << 4) | (temp_var >> 4);\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var);\n\t\tparentObj.FZero = (temp_var == 0);\n\t\tparentObj.FCarry = parentObj.FHalfCarry = parentObj.FSubtract = false;\n\t}\n\t//SWAP A\n\t//#0x37:\n\t,function (parentObj) {\n\t\tparentObj.registerA = ((parentObj.registerA & 0xF) << 4) | (parentObj.registerA >> 4);\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t\tparentObj.FCarry = parentObj.FHalfCarry = parentObj.FSubtract = false;\n\t}\n\t//SRL B\n\t//#0x38:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerB & 0x01) == 0x01);\n\t\tparentObj.registerB >>= 1;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerB == 0);\n\t}\n\t//SRL C\n\t//#0x39:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerC & 0x01) == 0x01);\n\t\tparentObj.registerC >>= 1;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerC == 0);\n\t}\n\t//SRL D\n\t//#0x3A:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerD & 0x01) == 0x01);\n\t\tparentObj.registerD >>= 1;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerD == 0);\n\t}\n\t//SRL E\n\t//#0x3B:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerE & 0x01) == 0x01);\n\t\tparentObj.registerE >>= 1;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerE == 0);\n\t}\n\t//SRL H\n\t//#0x3C:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registersHL & 0x0100) == 0x0100);\n\t\tparentObj.registersHL = ((parentObj.registersHL >> 1) & 0xFF00) | (parentObj.registersHL & 0xFF);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registersHL < 0x100);\n\t}\n\t//SRL L\n\t//#0x3D:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registersHL & 0x0001) == 0x0001);\n\t\tparentObj.registersHL = (parentObj.registersHL & 0xFF00) | ((parentObj.registersHL & 0xFF) >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0xFF) == 0);\n\t}\n\t//SRL (HL)\n\t//#0x3E:\n\t,function (parentObj) {\n\t\tvar temp_var = parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL);\n\t\tparentObj.FCarry = ((temp_var & 0x01) == 0x01);\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, temp_var >> 1);\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (temp_var < 2);\n\t}\n\t//SRL A\n\t//#0x3F:\n\t,function (parentObj) {\n\t\tparentObj.FCarry = ((parentObj.registerA & 0x01) == 0x01);\n\t\tparentObj.registerA >>= 1;\n\t\tparentObj.FHalfCarry = parentObj.FSubtract = false;\n\t\tparentObj.FZero = (parentObj.registerA == 0);\n\t}\n\t//BIT 0, B\n\t//#0x40:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerB & 0x01) == 0);\n\t}\n\t//BIT 0, C\n\t//#0x41:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerC & 0x01) == 0);\n\t}\n\t//BIT 0, D\n\t//#0x42:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerD & 0x01) == 0);\n\t}\n\t//BIT 0, E\n\t//#0x43:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerE & 0x01) == 0);\n\t}\n\t//BIT 0, H\n\t//#0x44:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0100) == 0);\n\t}\n\t//BIT 0, L\n\t//#0x45:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0001) == 0);\n\t}\n\t//BIT 0, (HL)\n\t//#0x46:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0x01) == 0);\n\t}\n\t//BIT 0, A\n\t//#0x47:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerA & 0x01) == 0);\n\t}\n\t//BIT 1, B\n\t//#0x48:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerB & 0x02) == 0);\n\t}\n\t//BIT 1, C\n\t//#0x49:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerC & 0x02) == 0);\n\t}\n\t//BIT 1, D\n\t//#0x4A:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerD & 0x02) == 0);\n\t}\n\t//BIT 1, E\n\t//#0x4B:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerE & 0x02) == 0);\n\t}\n\t//BIT 1, H\n\t//#0x4C:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0200) == 0);\n\t}\n\t//BIT 1, L\n\t//#0x4D:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0002) == 0);\n\t}\n\t//BIT 1, (HL)\n\t//#0x4E:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0x02) == 0);\n\t}\n\t//BIT 1, A\n\t//#0x4F:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerA & 0x02) == 0);\n\t}\n\t//BIT 2, B\n\t//#0x50:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerB & 0x04) == 0);\n\t}\n\t//BIT 2, C\n\t//#0x51:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerC & 0x04) == 0);\n\t}\n\t//BIT 2, D\n\t//#0x52:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerD & 0x04) == 0);\n\t}\n\t//BIT 2, E\n\t//#0x53:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerE & 0x04) == 0);\n\t}\n\t//BIT 2, H\n\t//#0x54:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0400) == 0);\n\t}\n\t//BIT 2, L\n\t//#0x55:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0004) == 0);\n\t}\n\t//BIT 2, (HL)\n\t//#0x56:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0x04) == 0);\n\t}\n\t//BIT 2, A\n\t//#0x57:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerA & 0x04) == 0);\n\t}\n\t//BIT 3, B\n\t//#0x58:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerB & 0x08) == 0);\n\t}\n\t//BIT 3, C\n\t//#0x59:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerC & 0x08) == 0);\n\t}\n\t//BIT 3, D\n\t//#0x5A:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerD & 0x08) == 0);\n\t}\n\t//BIT 3, E\n\t//#0x5B:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerE & 0x08) == 0);\n\t}\n\t//BIT 3, H\n\t//#0x5C:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0800) == 0);\n\t}\n\t//BIT 3, L\n\t//#0x5D:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0008) == 0);\n\t}\n\t//BIT 3, (HL)\n\t//#0x5E:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0x08) == 0);\n\t}\n\t//BIT 3, A\n\t//#0x5F:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerA & 0x08) == 0);\n\t}\n\t//BIT 4, B\n\t//#0x60:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerB & 0x10) == 0);\n\t}\n\t//BIT 4, C\n\t//#0x61:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerC & 0x10) == 0);\n\t}\n\t//BIT 4, D\n\t//#0x62:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerD & 0x10) == 0);\n\t}\n\t//BIT 4, E\n\t//#0x63:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerE & 0x10) == 0);\n\t}\n\t//BIT 4, H\n\t//#0x64:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x1000) == 0);\n\t}\n\t//BIT 4, L\n\t//#0x65:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0010) == 0);\n\t}\n\t//BIT 4, (HL)\n\t//#0x66:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0x10) == 0);\n\t}\n\t//BIT 4, A\n\t//#0x67:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerA & 0x10) == 0);\n\t}\n\t//BIT 5, B\n\t//#0x68:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerB & 0x20) == 0);\n\t}\n\t//BIT 5, C\n\t//#0x69:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerC & 0x20) == 0);\n\t}\n\t//BIT 5, D\n\t//#0x6A:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerD & 0x20) == 0);\n\t}\n\t//BIT 5, E\n\t//#0x6B:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerE & 0x20) == 0);\n\t}\n\t//BIT 5, H\n\t//#0x6C:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x2000) == 0);\n\t}\n\t//BIT 5, L\n\t//#0x6D:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0020) == 0);\n\t}\n\t//BIT 5, (HL)\n\t//#0x6E:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0x20) == 0);\n\t}\n\t//BIT 5, A\n\t//#0x6F:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerA & 0x20) == 0);\n\t}\n\t//BIT 6, B\n\t//#0x70:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerB & 0x40) == 0);\n\t}\n\t//BIT 6, C\n\t//#0x71:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerC & 0x40) == 0);\n\t}\n\t//BIT 6, D\n\t//#0x72:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerD & 0x40) == 0);\n\t}\n\t//BIT 6, E\n\t//#0x73:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerE & 0x40) == 0);\n\t}\n\t//BIT 6, H\n\t//#0x74:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x4000) == 0);\n\t}\n\t//BIT 6, L\n\t//#0x75:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0040) == 0);\n\t}\n\t//BIT 6, (HL)\n\t//#0x76:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0x40) == 0);\n\t}\n\t//BIT 6, A\n\t//#0x77:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerA & 0x40) == 0);\n\t}\n\t//BIT 7, B\n\t//#0x78:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerB & 0x80) == 0);\n\t}\n\t//BIT 7, C\n\t//#0x79:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerC & 0x80) == 0);\n\t}\n\t//BIT 7, D\n\t//#0x7A:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerD & 0x80) == 0);\n\t}\n\t//BIT 7, E\n\t//#0x7B:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerE & 0x80) == 0);\n\t}\n\t//BIT 7, H\n\t//#0x7C:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x8000) == 0);\n\t}\n\t//BIT 7, L\n\t//#0x7D:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registersHL & 0x0080) == 0);\n\t}\n\t//BIT 7, (HL)\n\t//#0x7E:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0x80) == 0);\n\t}\n\t//BIT 7, A\n\t//#0x7F:\n\t,function (parentObj) {\n\t\tparentObj.FHalfCarry = true;\n\t\tparentObj.FSubtract = false;\n\t\tparentObj.FZero = ((parentObj.registerA & 0x80) == 0);\n\t}\n\t//RES 0, B\n\t//#0x80:\n\t,function (parentObj) {\n\t\tparentObj.registerB &= 0xFE;\n\t}\n\t//RES 0, C\n\t//#0x81:\n\t,function (parentObj) {\n\t\tparentObj.registerC &= 0xFE;\n\t}\n\t//RES 0, D\n\t//#0x82:\n\t,function (parentObj) {\n\t\tparentObj.registerD &= 0xFE;\n\t}\n\t//RES 0, E\n\t//#0x83:\n\t,function (parentObj) {\n\t\tparentObj.registerE &= 0xFE;\n\t}\n\t//RES 0, H\n\t//#0x84:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFEFF;\n\t}\n\t//RES 0, L\n\t//#0x85:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFFFE;\n\t}\n\t//RES 0, (HL)\n\t//#0x86:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0xFE);\n\t}\n\t//RES 0, A\n\t//#0x87:\n\t,function (parentObj) {\n\t\tparentObj.registerA &= 0xFE;\n\t}\n\t//RES 1, B\n\t//#0x88:\n\t,function (parentObj) {\n\t\tparentObj.registerB &= 0xFD;\n\t}\n\t//RES 1, C\n\t//#0x89:\n\t,function (parentObj) {\n\t\tparentObj.registerC &= 0xFD;\n\t}\n\t//RES 1, D\n\t//#0x8A:\n\t,function (parentObj) {\n\t\tparentObj.registerD &= 0xFD;\n\t}\n\t//RES 1, E\n\t//#0x8B:\n\t,function (parentObj) {\n\t\tparentObj.registerE &= 0xFD;\n\t}\n\t//RES 1, H\n\t//#0x8C:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFDFF;\n\t}\n\t//RES 1, L\n\t//#0x8D:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFFFD;\n\t}\n\t//RES 1, (HL)\n\t//#0x8E:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0xFD);\n\t}\n\t//RES 1, A\n\t//#0x8F:\n\t,function (parentObj) {\n\t\tparentObj.registerA &= 0xFD;\n\t}\n\t//RES 2, B\n\t//#0x90:\n\t,function (parentObj) {\n\t\tparentObj.registerB &= 0xFB;\n\t}\n\t//RES 2, C\n\t//#0x91:\n\t,function (parentObj) {\n\t\tparentObj.registerC &= 0xFB;\n\t}\n\t//RES 2, D\n\t//#0x92:\n\t,function (parentObj) {\n\t\tparentObj.registerD &= 0xFB;\n\t}\n\t//RES 2, E\n\t//#0x93:\n\t,function (parentObj) {\n\t\tparentObj.registerE &= 0xFB;\n\t}\n\t//RES 2, H\n\t//#0x94:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFBFF;\n\t}\n\t//RES 2, L\n\t//#0x95:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFFFB;\n\t}\n\t//RES 2, (HL)\n\t//#0x96:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0xFB);\n\t}\n\t//RES 2, A\n\t//#0x97:\n\t,function (parentObj) {\n\t\tparentObj.registerA &= 0xFB;\n\t}\n\t//RES 3, B\n\t//#0x98:\n\t,function (parentObj) {\n\t\tparentObj.registerB &= 0xF7;\n\t}\n\t//RES 3, C\n\t//#0x99:\n\t,function (parentObj) {\n\t\tparentObj.registerC &= 0xF7;\n\t}\n\t//RES 3, D\n\t//#0x9A:\n\t,function (parentObj) {\n\t\tparentObj.registerD &= 0xF7;\n\t}\n\t//RES 3, E\n\t//#0x9B:\n\t,function (parentObj) {\n\t\tparentObj.registerE &= 0xF7;\n\t}\n\t//RES 3, H\n\t//#0x9C:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xF7FF;\n\t}\n\t//RES 3, L\n\t//#0x9D:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFFF7;\n\t}\n\t//RES 3, (HL)\n\t//#0x9E:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0xF7);\n\t}\n\t//RES 3, A\n\t//#0x9F:\n\t,function (parentObj) {\n\t\tparentObj.registerA &= 0xF7;\n\t}\n\t//RES 3, B\n\t//#0xA0:\n\t,function (parentObj) {\n\t\tparentObj.registerB &= 0xEF;\n\t}\n\t//RES 4, C\n\t//#0xA1:\n\t,function (parentObj) {\n\t\tparentObj.registerC &= 0xEF;\n\t}\n\t//RES 4, D\n\t//#0xA2:\n\t,function (parentObj) {\n\t\tparentObj.registerD &= 0xEF;\n\t}\n\t//RES 4, E\n\t//#0xA3:\n\t,function (parentObj) {\n\t\tparentObj.registerE &= 0xEF;\n\t}\n\t//RES 4, H\n\t//#0xA4:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xEFFF;\n\t}\n\t//RES 4, L\n\t//#0xA5:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFFEF;\n\t}\n\t//RES 4, (HL)\n\t//#0xA6:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0xEF);\n\t}\n\t//RES 4, A\n\t//#0xA7:\n\t,function (parentObj) {\n\t\tparentObj.registerA &= 0xEF;\n\t}\n\t//RES 5, B\n\t//#0xA8:\n\t,function (parentObj) {\n\t\tparentObj.registerB &= 0xDF;\n\t}\n\t//RES 5, C\n\t//#0xA9:\n\t,function (parentObj) {\n\t\tparentObj.registerC &= 0xDF;\n\t}\n\t//RES 5, D\n\t//#0xAA:\n\t,function (parentObj) {\n\t\tparentObj.registerD &= 0xDF;\n\t}\n\t//RES 5, E\n\t//#0xAB:\n\t,function (parentObj) {\n\t\tparentObj.registerE &= 0xDF;\n\t}\n\t//RES 5, H\n\t//#0xAC:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xDFFF;\n\t}\n\t//RES 5, L\n\t//#0xAD:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFFDF;\n\t}\n\t//RES 5, (HL)\n\t//#0xAE:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0xDF);\n\t}\n\t//RES 5, A\n\t//#0xAF:\n\t,function (parentObj) {\n\t\tparentObj.registerA &= 0xDF;\n\t}\n\t//RES 6, B\n\t//#0xB0:\n\t,function (parentObj) {\n\t\tparentObj.registerB &= 0xBF;\n\t}\n\t//RES 6, C\n\t//#0xB1:\n\t,function (parentObj) {\n\t\tparentObj.registerC &= 0xBF;\n\t}\n\t//RES 6, D\n\t//#0xB2:\n\t,function (parentObj) {\n\t\tparentObj.registerD &= 0xBF;\n\t}\n\t//RES 6, E\n\t//#0xB3:\n\t,function (parentObj) {\n\t\tparentObj.registerE &= 0xBF;\n\t}\n\t//RES 6, H\n\t//#0xB4:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xBFFF;\n\t}\n\t//RES 6, L\n\t//#0xB5:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFFBF;\n\t}\n\t//RES 6, (HL)\n\t//#0xB6:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0xBF);\n\t}\n\t//RES 6, A\n\t//#0xB7:\n\t,function (parentObj) {\n\t\tparentObj.registerA &= 0xBF;\n\t}\n\t//RES 7, B\n\t//#0xB8:\n\t,function (parentObj) {\n\t\tparentObj.registerB &= 0x7F;\n\t}\n\t//RES 7, C\n\t//#0xB9:\n\t,function (parentObj) {\n\t\tparentObj.registerC &= 0x7F;\n\t}\n\t//RES 7, D\n\t//#0xBA:\n\t,function (parentObj) {\n\t\tparentObj.registerD &= 0x7F;\n\t}\n\t//RES 7, E\n\t//#0xBB:\n\t,function (parentObj) {\n\t\tparentObj.registerE &= 0x7F;\n\t}\n\t//RES 7, H\n\t//#0xBC:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0x7FFF;\n\t}\n\t//RES 7, L\n\t//#0xBD:\n\t,function (parentObj) {\n\t\tparentObj.registersHL &= 0xFF7F;\n\t}\n\t//RES 7, (HL)\n\t//#0xBE:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) & 0x7F);\n\t}\n\t//RES 7, A\n\t//#0xBF:\n\t,function (parentObj) {\n\t\tparentObj.registerA &= 0x7F;\n\t}\n\t//SET 0, B\n\t//#0xC0:\n\t,function (parentObj) {\n\t\tparentObj.registerB |= 0x01;\n\t}\n\t//SET 0, C\n\t//#0xC1:\n\t,function (parentObj) {\n\t\tparentObj.registerC |= 0x01;\n\t}\n\t//SET 0, D\n\t//#0xC2:\n\t,function (parentObj) {\n\t\tparentObj.registerD |= 0x01;\n\t}\n\t//SET 0, E\n\t//#0xC3:\n\t,function (parentObj) {\n\t\tparentObj.registerE |= 0x01;\n\t}\n\t//SET 0, H\n\t//#0xC4:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x0100;\n\t}\n\t//SET 0, L\n\t//#0xC5:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x01;\n\t}\n\t//SET 0, (HL)\n\t//#0xC6:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) | 0x01);\n\t}\n\t//SET 0, A\n\t//#0xC7:\n\t,function (parentObj) {\n\t\tparentObj.registerA |= 0x01;\n\t}\n\t//SET 1, B\n\t//#0xC8:\n\t,function (parentObj) {\n\t\tparentObj.registerB |= 0x02;\n\t}\n\t//SET 1, C\n\t//#0xC9:\n\t,function (parentObj) {\n\t\tparentObj.registerC |= 0x02;\n\t}\n\t//SET 1, D\n\t//#0xCA:\n\t,function (parentObj) {\n\t\tparentObj.registerD |= 0x02;\n\t}\n\t//SET 1, E\n\t//#0xCB:\n\t,function (parentObj) {\n\t\tparentObj.registerE |= 0x02;\n\t}\n\t//SET 1, H\n\t//#0xCC:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x0200;\n\t}\n\t//SET 1, L\n\t//#0xCD:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x02;\n\t}\n\t//SET 1, (HL)\n\t//#0xCE:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) | 0x02);\n\t}\n\t//SET 1, A\n\t//#0xCF:\n\t,function (parentObj) {\n\t\tparentObj.registerA |= 0x02;\n\t}\n\t//SET 2, B\n\t//#0xD0:\n\t,function (parentObj) {\n\t\tparentObj.registerB |= 0x04;\n\t}\n\t//SET 2, C\n\t//#0xD1:\n\t,function (parentObj) {\n\t\tparentObj.registerC |= 0x04;\n\t}\n\t//SET 2, D\n\t//#0xD2:\n\t,function (parentObj) {\n\t\tparentObj.registerD |= 0x04;\n\t}\n\t//SET 2, E\n\t//#0xD3:\n\t,function (parentObj) {\n\t\tparentObj.registerE |= 0x04;\n\t}\n\t//SET 2, H\n\t//#0xD4:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x0400;\n\t}\n\t//SET 2, L\n\t//#0xD5:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x04;\n\t}\n\t//SET 2, (HL)\n\t//#0xD6:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) | 0x04);\n\t}\n\t//SET 2, A\n\t//#0xD7:\n\t,function (parentObj) {\n\t\tparentObj.registerA |= 0x04;\n\t}\n\t//SET 3, B\n\t//#0xD8:\n\t,function (parentObj) {\n\t\tparentObj.registerB |= 0x08;\n\t}\n\t//SET 3, C\n\t//#0xD9:\n\t,function (parentObj) {\n\t\tparentObj.registerC |= 0x08;\n\t}\n\t//SET 3, D\n\t//#0xDA:\n\t,function (parentObj) {\n\t\tparentObj.registerD |= 0x08;\n\t}\n\t//SET 3, E\n\t//#0xDB:\n\t,function (parentObj) {\n\t\tparentObj.registerE |= 0x08;\n\t}\n\t//SET 3, H\n\t//#0xDC:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x0800;\n\t}\n\t//SET 3, L\n\t//#0xDD:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x08;\n\t}\n\t//SET 3, (HL)\n\t//#0xDE:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) | 0x08);\n\t}\n\t//SET 3, A\n\t//#0xDF:\n\t,function (parentObj) {\n\t\tparentObj.registerA |= 0x08;\n\t}\n\t//SET 4, B\n\t//#0xE0:\n\t,function (parentObj) {\n\t\tparentObj.registerB |= 0x10;\n\t}\n\t//SET 4, C\n\t//#0xE1:\n\t,function (parentObj) {\n\t\tparentObj.registerC |= 0x10;\n\t}\n\t//SET 4, D\n\t//#0xE2:\n\t,function (parentObj) {\n\t\tparentObj.registerD |= 0x10;\n\t}\n\t//SET 4, E\n\t//#0xE3:\n\t,function (parentObj) {\n\t\tparentObj.registerE |= 0x10;\n\t}\n\t//SET 4, H\n\t//#0xE4:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x1000;\n\t}\n\t//SET 4, L\n\t//#0xE5:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x10;\n\t}\n\t//SET 4, (HL)\n\t//#0xE6:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) | 0x10);\n\t}\n\t//SET 4, A\n\t//#0xE7:\n\t,function (parentObj) {\n\t\tparentObj.registerA |= 0x10;\n\t}\n\t//SET 5, B\n\t//#0xE8:\n\t,function (parentObj) {\n\t\tparentObj.registerB |= 0x20;\n\t}\n\t//SET 5, C\n\t//#0xE9:\n\t,function (parentObj) {\n\t\tparentObj.registerC |= 0x20;\n\t}\n\t//SET 5, D\n\t//#0xEA:\n\t,function (parentObj) {\n\t\tparentObj.registerD |= 0x20;\n\t}\n\t//SET 5, E\n\t//#0xEB:\n\t,function (parentObj) {\n\t\tparentObj.registerE |= 0x20;\n\t}\n\t//SET 5, H\n\t//#0xEC:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x2000;\n\t}\n\t//SET 5, L\n\t//#0xED:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x20;\n\t}\n\t//SET 5, (HL)\n\t//#0xEE:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) | 0x20);\n\t}\n\t//SET 5, A\n\t//#0xEF:\n\t,function (parentObj) {\n\t\tparentObj.registerA |= 0x20;\n\t}\n\t//SET 6, B\n\t//#0xF0:\n\t,function (parentObj) {\n\t\tparentObj.registerB |= 0x40;\n\t}\n\t//SET 6, C\n\t//#0xF1:\n\t,function (parentObj) {\n\t\tparentObj.registerC |= 0x40;\n\t}\n\t//SET 6, D\n\t//#0xF2:\n\t,function (parentObj) {\n\t\tparentObj.registerD |= 0x40;\n\t}\n\t//SET 6, E\n\t//#0xF3:\n\t,function (parentObj) {\n\t\tparentObj.registerE |= 0x40;\n\t}\n\t//SET 6, H\n\t//#0xF4:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x4000;\n\t}\n\t//SET 6, L\n\t//#0xF5:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x40;\n\t}\n\t//SET 6, (HL)\n\t//#0xF6:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) | 0x40);\n\t}\n\t//SET 6, A\n\t//#0xF7:\n\t,function (parentObj) {\n\t\tparentObj.registerA |= 0x40;\n\t}\n\t//SET 7, B\n\t//#0xF8:\n\t,function (parentObj) {\n\t\tparentObj.registerB |= 0x80;\n\t}\n\t//SET 7, C\n\t//#0xF9:\n\t,function (parentObj) {\n\t\tparentObj.registerC |= 0x80;\n\t}\n\t//SET 7, D\n\t//#0xFA:\n\t,function (parentObj) {\n\t\tparentObj.registerD |= 0x80;\n\t}\n\t//SET 7, E\n\t//#0xFB:\n\t,function (parentObj) {\n\t\tparentObj.registerE |= 0x80;\n\t}\n\t//SET 7, H\n\t//#0xFC:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x8000;\n\t}\n\t//SET 7, L\n\t//#0xFD:\n\t,function (parentObj) {\n\t\tparentObj.registersHL |= 0x80;\n\t}\n\t//SET 7, (HL)\n\t//#0xFE:\n\t,function (parentObj) {\n\t\tparentObj.memoryWriter[parentObj.registersHL](parentObj, parentObj.registersHL, parentObj.memoryReader[parentObj.registersHL](parentObj, parentObj.registersHL) | 0x80);\n\t}\n\t//SET 7, A\n\t//#0xFF:\n\t,function (parentObj) {\n\t\tparentObj.registerA |= 0x80;\n\t}\n];\n\nmodule.exports = CBOPCODE;","//Number of machine cycles for each instruction:\nmodule.exports = [\n   /*   0,  1,  2,  3,  4,  5,  6,  7,      8,  9,  A, B,  C,  D, E,  F*/\n    4, 12,  8,  8,  4,  4,  8,  4,     20,  8,  8, 8,  4,  4, 8,  4,  //0\n    4, 12,  8,  8,  4,  4,  8,  4,     12,  8,  8, 8,  4,  4, 8,  4,  //1\n    8, 12,  8,  8,  4,  4,  8,  4,      8,  8,  8, 8,  4,  4, 8,  4,  //2\n    8, 12,  8,  8, 12, 12, 12,  4,      8,  8,  8, 8,  4,  4, 8,  4,  //3\n\n    4,  4,  4,  4,  4,  4,  8,  4,      4,  4,  4, 4,  4,  4, 8,  4,  //4\n    4,  4,  4,  4,  4,  4,  8,  4,      4,  4,  4, 4,  4,  4, 8,  4,  //5\n    4,  4,  4,  4,  4,  4,  8,  4,      4,  4,  4, 4,  4,  4, 8,  4,  //6\n    8,  8,  8,  8,  8,  8,  4,  8,      4,  4,  4, 4,  4,  4, 8,  4,  //7\n\n    4,  4,  4,  4,  4,  4,  8,  4,      4,  4,  4, 4,  4,  4, 8,  4,  //8\n    4,  4,  4,  4,  4,  4,  8,  4,      4,  4,  4, 4,  4,  4, 8,  4,  //9\n    4,  4,  4,  4,  4,  4,  8,  4,      4,  4,  4, 4,  4,  4, 8,  4,  //A\n    4,  4,  4,  4,  4,  4,  8,  4,      4,  4,  4, 4,  4,  4, 8,  4,  //B\n\n    8, 12, 12, 16, 12, 16,  8, 16,      8, 16, 12, 0, 12, 24, 8, 16,  //C\n    8, 12, 12,  4, 12, 16,  8, 16,      8, 16, 12, 4, 12,  4, 8, 16,  //D\n   12, 12,  8,  4,  4, 16,  8, 16,     16,  4, 16, 4,  4,  4, 8, 16,  //E\n   12, 12,  8,  4,  4, 16,  8, 16,     12,  8, 16, 4,  0,  4, 8, 16   //F\n];\n","//Number of machine cycles for each 0xCBXX instruction:\nmodule.exports = [\n/*  0, 1, 2, 3, 4, 5,  6, 7,        8, 9, A, B, C, D,  E, F*/\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //0\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //1\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //2\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //3\n\n    8, 8, 8, 8, 8, 8, 12, 8,        8, 8, 8, 8, 8, 8, 12, 8,  //4\n    8, 8, 8, 8, 8, 8, 12, 8,        8, 8, 8, 8, 8, 8, 12, 8,  //5\n    8, 8, 8, 8, 8, 8, 12, 8,        8, 8, 8, 8, 8, 8, 12, 8,  //6\n    8, 8, 8, 8, 8, 8, 12, 8,        8, 8, 8, 8, 8, 8, 12, 8,  //7\n\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //8\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //9\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //A\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //B\n\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //C\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //D\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8,  //E\n    8, 8, 8, 8, 8, 8, 16, 8,        8, 8, 8, 8, 8, 8, 16, 8   //F\n];\n","\"use-strict\";\nvar GameBoyCore = require(\"./gameboy_core/gameboy.js\");\n\nconst KEYMAP = {\n  RIGHT: 0,\n  LEFT: 1,\n  UP: 2,\n  DOWN: 3,\n  A: 4,\n  B: 5,\n  SELECT: 6,\n  START: 7,\n};\n\nconst PRIVATE = \"_\";\nfunction Interface() {\n  let _that = (this[PRIVATE] = {\n    __proto__: Interface._prototype,\n    gameboy: null, //Core emulator\n    frames: 0, //Number of elapsed frames\n    pressed: new Array(Object.keys(KEYMAP).length), //Which keys are currently being held down\n  });\n  _that[PRIVATE] = _that;\n}\n\nInterface._prototype = {\n  //Check to make sure the gameboy object has been created.\n  initialized: function () {\n    let _that = this[PRIVATE];\n    return typeof _that.gameboy === \"object\" && _that.gameboy != null;\n  },\n\n  /*\n   *Make sure that the emulator is \"running\" (note that this is different than play/pause)\n   *Think of it like turning the key in your ignition before you start driving your car\n   *TODO: does `true` mean it's running or does `true` mean it's stopped?\n   */\n  running: function () {\n    let _that = this[PRIVATE];\n    return (_that.gameboy.stopEmulator & 2) == 0;\n  },\n\n  /*\n   * Presses or releases a key\n   * - note that in the gameboy core, a key will stay pressed until it has been explicitly released.\n   * - will do nothing if the emulator is running\n   *\n   * @param keycode 1-8 number of the key to press (see Interface.KEYCODES)\n   * @param `true` to press key, `false` to release\n   */\n  sendKey: function (keycode, down) {\n    let _that = this[PRIVATE];\n    if (_that.initialized() && _that.running()) {\n      _that.gameboy.JoyPadEvent(keycode, down);\n    }\n  },\n\n  //Stop emulator, reset relevant variables\n  shutdownEmulation: function () {\n    let _that = this[PRIVATE];\n    if (_that.initialized() && _that.running()) {\n      _that.gameboy.stopEmulator |= 2;\n      _that.frames = 0; //Reset internal variables\n    }\n  },\n};\n\nInterface.prototype = {\n  constructor: Interface,\n\n  /*\n   * Load a ROM - like popping in a new cartridge\n   * - Won't do anything if the emulator hasn't been initialized.\n   *\n   * TODO: better documentation on what ROMs are and how they should be formatted.\n   */\n  loadRom: function (ROM, saveData) {\n    let that = this;\n    let _that = this[PRIVATE];\n\n    // if (!_that.initialized()) {\n    //     return false;\n    // }\n\n    //TODO: autosave last state?\n    _that.shutdownEmulation(); //Will shut down emulator if it's still running.\n\n    _that.gameboy = new GameBoyCore(ROM);\n    _that.gameboy.openMBC = function (title) {\n      /* TODO: you can load in from a specific title? Kind of cool, I guess. */\n      return saveData || [];\n    };\n\n    //Start emulator (some logic in here that needs to be documented)\n    _that.gameboy.start();\n    _that.gameboy.stopEmulator &= 1;\n    _that.gameboy.iterations = 0;\n\n    return true;\n  },\n\n  /*\n   * Emulates a single frame\n   *\n   * TODO: add documentation for imageData\n   * @param partial - DEPRECATED - whether or not to render the entire screen or just the changed bits\n   * @returns Array - image data for that frame, which can later be converted into a canvas writeable format\n   */\n  doFrame: function (partial) {\n    let _that = this[PRIVATE];\n    //Press required keys\n    for (let i = _that.pressed.length - 1; i >= 0; i--) {\n      if (_that.pressed[i]) {\n        _that.sendKey(i, true);\n      }\n    }\n\n    _that.gameboy.frameDone = false;\n    while (!_that.gameboy.frameDone) {\n      _that.gameboy.run(); //Run internal logic until the entire frame as finished.\n    }\n\n    //Release all keys\n    for (let i = _that.pressed.length - 1; i >= 0; i--) {\n      _that.pressed[i] = false;\n      _that.sendKey(i, false);\n    }\n\n    ++_that.frames;\n\n    return partial ? _that.gameboy.partialScreen : _that.gameboy.currentScreen;\n  },\n\n  /*\n   * Pass in an array of keys you want pressed\n   * - this array should be propogated with values from ``Interface.KEYMAP``\n   * - you can not undo a press. Once a key is pressed it stays pressed until the end of the frame.\n   */\n  pressKeys: function (keys) {\n    keys = keys || [];\n\n    let that = this;\n    for (let i = keys.length - 1; i >= 0; i--) {\n      that.pressKey(keys[i]);\n    }\n  },\n\n  /*\n   * Presses a key corresponding with ``Interface.KEYMAP``\n   * - you can not undo a press. Once a key is pressed it stays pressed until the end of the frame.\n   */\n  pressKey: function (key) {\n    let _that = this[PRIVATE];\n\n    key = KEYMAP[key.toUpperCase()];\n    if (key < _that.pressed.length && key != null) {\n      _that.pressed[key] = true;\n    }\n  },\n\n  /*\n   * Returns an array of all currently pressed keys\n   * - built using the enum ``Interface.KEYMAP``\n   */\n  getKeys: function () {\n    let _that = this[PRIVATE];\n    return _that.pressed.slice(0);\n  },\n\n  getScreen: function () {\n    var _that = this[PRIVATE];\n    return _that.gameboy.currentScreen;\n  },\n\n  /*\n   * Gets a block of memory, you can specify a start and an end if you want\n   * - this is an expensive operation and should be called sparingly\n   *\n   * TODO perf test ``slice`` vs a ``for`` loop\n   */\n  getMemory: function (start, end) {\n    let _that = this[PRIVATE];\n    start = start || 0;\n    end = end || _that.gameboy.memory.length - 1;\n\n    start = Math.max(start, 0);\n    end = Math.min(end, _that.gameboy.memory.length - 1);\n\n    if (start === 0 && end === _that.gameboy.memory.length - 1) {\n      return _that.gameboy.memory;\n    }\n\n    return _that.gameboy.memory.slice(start, end); //Why are you doing this functionally instead of just returning the entire object?\n    //Is it for speed?\n  },\n\n  getAudio: function () {\n    let _that = this[PRIVATE];\n    return _that.gameboy.audioBuffer;\n  },\n\n  getSaveData: function () {\n    let _that = this[PRIVATE];\n    return _that.gameboy.saveSRAMState();\n  },\n\n  setMemory: function (start, data) {\n    let _that = this[PRIVATE];\n    start = Math.max(start, 0);\n\n    for (let i = 0; i < start.length; i++) {\n      _that.gameboy.memory[start + i] = data[i];\n    }\n  },\n};\n\nInterface.KEYMAP = KEYMAP;\nmodule.exports = Interface;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import Gameboy from \"./interface\";\nimport rom from \"data-url:./mario.gb\";\n\nfunction dataUriToBuffer(uri) {\n  if (!/^data:/i.test(uri)) {\n    throw new TypeError(\n      '`uri` does not appear to be a Data URI (must begin with \"data:\")'\n    );\n  }\n\n  // strip newlines\n  uri = uri.replace(/\\r?\\n/g, \"\");\n\n  // split the URI up into the \"metadata\" and the \"data\" portions\n  const firstComma = uri.indexOf(\",\");\n  if (firstComma === -1 || firstComma <= 4) {\n    throw new TypeError(\"malformed data: URI\");\n  }\n\n  // remove the \"data:\" scheme and parse the metadata\n  const meta = uri.substring(5, firstComma).split(\";\");\n\n  let charset = \"\";\n  let base64 = false;\n  const type = meta[0] || \"text/plain\";\n  let typeFull = type;\n  for (let i = 1; i < meta.length; i++) {\n    if (meta[i] === \"base64\") {\n      base64 = true;\n    } else {\n      typeFull += `;${meta[i]}`;\n      if (meta[i].indexOf(\"charset=\") === 0) {\n        charset = meta[i].substring(8);\n      }\n    }\n  }\n  // defaults to US-ASCII only if type is not provided\n  if (!meta[0] && !charset.length) {\n    typeFull += \";charset=US-ASCII\";\n    charset = \"US-ASCII\";\n  }\n\n  // get the encoded data portion and decode URI-encoded chars\n  const encoding = base64 ? \"base64\" : \"ascii\";\n  const data = unescape(uri.substring(firstComma + 1));\n  const buffer = Buffer.from(data, encoding);\n\n  // set `.type` and `.typeFull` properties to MIME type\n  buffer.type = type;\n  buffer.typeFull = typeFull;\n\n  // set the `.charset` property\n  buffer.charset = charset;\n\n  return buffer;\n}\n\nclass GameboyPainter {\n  constructor() {\n    this.gb = new Gameboy();\n    this.isPainting = false;\n    //console.log(fetch);\n    this.gb.loadRom(dataUriToBuffer(rom));\n  }\n  static get inputProperties() {\n    return [\n      \"--frame\",\n      \"--button-a\",\n      \"--button-b\",\n      \"--button-up\",\n      \"--button-down\",\n      \"--button-left\",\n      \"--button-right\",\n      \"--button-start\",\n      \"--button-select\",\n    ];\n  }\n\n  propToVar(propName) {\n    return propName.substr(2).replace(/-([a-z])/g, function (g) {\n      return g[1].toUpperCase();\n    });\n  }\n\n  parseProps(props) {\n    const parsed = {};\n\n    this.constructor.inputProperties.forEach((propName) => {\n      parsed[this.propToVar(propName)] = this.parseProp(propName, props);\n    });\n\n    return parsed;\n  }\n\n  parseProp(propName, props) {\n    const prop = props.get(propName);\n\n    // Cater for browsers that don't speak CSS Typed OM and\n    // for browsers that do speak it, but haven't registered the props\n    if (\n      typeof CSSUnparsedValue === \"undefined\" ||\n      prop instanceof CSSUnparsedValue\n    ) {\n      if (!prop.length || prop === \"\") {\n        return undefined;\n      }\n      switch (propName) {\n        case \"--frame\":\n          return parseInt(prop.toString());\n\n        case \"--button-a\":\n        case \"--button-b\":\n        case \"--button-up\":\n        case \"--button-down\":\n        case \"--button-left\":\n        case \"--button-right\":\n        case \"--button-start\":\n        case \"--button-select\":\n          return parseInt(prop.toString());\n        default:\n          return prop.toString().trim();\n      }\n    }\n\n    if (prop instanceof CSSUnparsedValue && !prop.length) {\n      return undefined;\n    }\n\n    // Prop is a UnitValue (Number, Percentage, Integer, …)\n    // ~> Return the value\n    if (prop instanceof CSSUnitValue) {\n      return prop.value;\n    }\n\n    // All others (such as CSSKeywordValue)\n    //~> Return the string\n    return prop.toString().trim();\n  }\n\n  paint(ctx, geom, props) {\n    const SCALE = 2;\n\n    const {\n      buttonA,\n      buttonB,\n      buttonLeft,\n      buttonRight,\n      buttonUp,\n      buttonDown,\n      buttonStart,\n      buttonSelect,\n      frame: frameNumber,\n    } = this.parseProps(props);\n\n    //console.log(this.parseProps(props));\n    const pressed = [];\n    if (buttonA) {\n      pressed.push(\"a\");\n    }\n    if (buttonB) {\n      pressed.push(\"b\");\n    }\n    if (buttonLeft) {\n      pressed.push(\"left\");\n    }\n\n    if (buttonRight) {\n      pressed.push(\"right\");\n    }\n    if (buttonUp) {\n      pressed.push(\"up\");\n    }\n    if (buttonDown) {\n      pressed.push(\"down\");\n    }\n    if (buttonStart) {\n      pressed.push(\"start\");\n    }\n    if (buttonSelect) {\n      pressed.push(\"select\");\n    }\n\n    this.gb.pressKeys(pressed);\n\n    if (!this.isPainting) {\n      this.isPainting = true;\n      const frame = this.gb.doFrame();\n      for (let x = 0; x < 160; x++) {\n        for (let y = 0; y < 144; y++) {\n          const start = (x + y * 160) * 4;\n          const r = frame[start];\n          const b = frame[start + 1];\n          const g = frame[start + 2];\n          ctx.fillStyle = `rgb(${r}, ${g}, ${b})`;\n          ctx.fillRect(x * SCALE, y * SCALE, SCALE, SCALE);\n        }\n      }\n      this.isPainting = false;\n    } else {\n      ctx.clearRect(0, 0, geom.width, geom.height);\n    }\n  }\n}\n\nregisterPaint(\"gameboy\", GameboyPainter);\n","module.exports = \"c0573dc6b21d92c9\";"],"names":["$bebaf8820181bccf$exports","ROMImage","this","frameDone","currentScreen","lastScreen","partialScreen","currentFrame","drawContext","registerA","FZero","FSubtract","FHalfCarry","FCarry","registerB","registerC","registerD","registerE","registersHL","stackPointer","programCounter","CPUCyclesTotal","CPUCyclesTotalBase","CPUCyclesTotalCurrent","CPUCyclesTotalRoundoff","baseCPUCyclesPerIteration","remainingClocks","inBootstrap","usedBootROM","usedGBCBootROM","halt","skipPCIncrement","stopEmulator","IME","IRQLineMatched","interruptsRequested","interruptsEnabled","hdmaRunning","CPUTicks","doubleSpeedShifter","JoyPad","CPUStopped","memoryReader","memoryWriter","memoryHighReader","memoryHighWriter","ROM","memory","MBCRam","VRAM","GBCMemory","MBC1Mode","MBCRAMBanksEnabled","currMBCRAMBank","currMBCRAMBankPosition","cGBC","gbcRamBank","gbcRamBankPosition","gbcRamBankPositionECHO","RAMBanks","ROMBank1offs","currentROMBank","cartridgeType","name","gameCode","fromSaveState","savedStateFileName","STATTracker","modeSTAT","spriteCount","LYCMatchTriggerSTAT","mode2TriggerSTAT","mode1TriggerSTAT","mode0TriggerSTAT","LCDisOn","LINECONTROL","DISPLAYOFFCONTROL","parentObj","LCDCONTROL","initializeLCDController","RTCisLatched","latchedSeconds","latchedMinutes","latchedHours","latchedLDays","latchedHDays","RTCSeconds","RTCMinutes","RTCHours","RTCDays","RTCDayOverFlow","RTCHALT","highX","lowX","highY","lowY","audioHandle","numSamplesTotal","dutyLookup","bufferContainAmount","LSFR15Table","LSFR7Table","noiseSampleTable","initializeAudioStartState","soundMasterEnabled","channel3PCM","VinLeftChannelMasterVolume","VinRightChannelMasterVolume","leftChannel1","leftChannel2","leftChannel3","leftChannel4","rightChannel1","rightChannel2","rightChannel3","rightChannel4","audioClocksUntilNextEvent","audioClocksUntilNextEventCounter","channel1currentSampleLeft","channel1currentSampleRight","channel2currentSampleLeft","channel2currentSampleRight","channel3currentSampleLeft","channel3currentSampleRight","channel4currentSampleLeft","channel4currentSampleRight","channel1currentSampleLeftSecondary","channel1currentSampleRightSecondary","channel2currentSampleLeftSecondary","channel2currentSampleRightSecondary","channel3currentSampleLeftSecondary","channel3currentSampleRightSecondary","channel4currentSampleLeftSecondary","channel4currentSampleRightSecondary","channel1currentSampleLeftTrimary","channel1currentSampleRightTrimary","channel2currentSampleLeftTrimary","channel2currentSampleRightTrimary","mixerOutputCache","emulatorSpeed","initializeTiming","audioTicks","audioIndex","downsampleInput","audioDestinationPosition","rollover","emulatorTicks","DIVTicks","LCDTicks","timerTicks","TIMAEnabled","TACClocker","serialTimer","serialShiftTimer","serialShiftTimerAllocated","IRQEnableDelay","dateVar","Date","lastIteration","getTime","firstIteration","iterations","actualScanLine","lastUnrenderedLine","queuedScanLines","totalLinesPassed","haltPostClocks","cMBC1","cMBC2","cMBC3","cMBC5","cMBC7","cSRAM","cMMMO1","cRUMBLE","cCamera","cTAMA5","cHuC3","cHuC1","cTIMER","ROMBanks","numRAMBanks","currVRAMBank","backgroundX","backgroundY","gfxWindowDisplay","gfxSpriteShow","gfxSpriteNormalHeight","bgEnabled","BGPriorityEnabled","gfxWindowCHRBankPosition","gfxBackgroundCHRBankPosition","gfxBackgroundBankOffset","windowY","windowX","drewBlank","drewFrame","midScanlineOffset","pixelEnd","currentX","BGCHRBank1","BGCHRBank2","BGCHRCurrentBank","tileCache","colors","OBJPalette","BGPalette","gbcOBJRawPalette","gbcBGRawPalette","gbOBJPalette","gbBGPalette","gbcOBJPalette","gbcBGPalette","gbBGColorizedPalette","gbOBJColorizedPalette","cachedBGPaletteConversion","cachedOBJPaletteConversion","updateGBBGPalette","updateGBRegularBGPalette","updateGBOBJPalette","updateGBRegularOBJPalette","colorizedGBPalettes","BGLayerRender","WindowLayerRender","SpriteLayerRender","frameBuffer","swizzledFrame","canvasBuffer","pixelStart","onscreenWidth","offscreenWidth","onscreenHeight","offScreenheight","offscreenRGBCount","resizePathClear","intializeWhiteNoise","$40370769170746b2$export$fb931cd598921492","$40370769170746b2$export$8f9fb363b058ffe1","$ed1b7bd5802424a0$exports","$cf564472984ca7cd$var$GameBoyCore","call","ROMImageIsString","fromTypedArray","channel1FrequencyTracker","channel1FrequencyCounter","channel1totalLength","channel1envelopeVolume","channel1envelopeType","channel1envelopeSweeps","channel1envelopeSweepsLast","channel1consecutive","channel1frequency","channel1SweepFault","channel1ShadowFrequency","channel1timeSweep","channel1lastTimeSweep","channel1Swept","channel1frequencySweepDivider","channel1decreaseSweep","channel2FrequencyTracker","channel2FrequencyCounter","channel2totalLength","channel2envelopeVolume","channel2envelopeType","channel2envelopeSweeps","channel2envelopeSweepsLast","channel2consecutive","channel2frequency","channel3canPlay","channel3totalLength","channel3patternType","channel3frequency","channel3consecutive","channel4FrequencyPeriod","channel4lastSampleLookup","channel4totalLength","channel4envelopeVolume","channel4currentVolume","channel4envelopeType","channel4envelopeSweeps","channel4envelopeSweepsLast","channel4consecutive","channel4BitRange","channel1DutyTracker","channel1CachedDuty","channel2DutyTracker","channel2CachedDuty","channel1Enabled","channel2Enabled","channel3Enabled","channel4Enabled","sequencerClocks","sequencePosition","channel3Counter","channel4Counter","cachedChannel3Sample","cachedChannel4Sample","channel3FrequencyPeriod","channel3lastSampleLookup","returnedFrom","index","state","slice","toTypedArray","ROMBankEdge","Math","floor","length","checkIRQMatching","TICKTable","SecondaryTICKTable","initializeReferencesFromSaveState","memoryReadJumpCompile","memoryWriteJumpCompile","initLCD","initSound","channel4VolumeShifter","module","exports","$1d683daf74511a3a$var$OPCODE","memoryRead","memoryWrite","temp_var","dirtySum","handleSTOP","carry_flag","H","L","calculateHALTPeriod","tempValue","temp_pc","opcode","CBOPCODE","console","log","memoryHighWrite","temp_value2","temp_value","memoryHighRead","newFCarry","prototype","constructor","GBBOOTROM","GBCBOOTROM","ffxxDump","parcelRequire","OPCODE","saveState","saving","saveSRAMState","cBATT","saveRTCState","returnFromRTCState","openRTC","rtcData","start","initMemory","ROMLoad","run","getTypedArray","generateCacheArray","tileAmount","tileArray","tileNumber","initSkipBootstrap","initBootstrap","maxLength","Error","romIndex","charCodeAt","interpretCartridge","getROMImage","String","fromCharCode","numROMBanks","setupRAM","initializeModeSpecificArrays","disableBootROM","recompileBootIOWriteHandling","GBCtoGBModeAdjust","clocksPerSecond","setSpeed","speed","MBCRAMUtilized","openMBC","recomputeDimension","offscreenHeight","compileResizeFrameBufferFunction","resizer","data","Uint8ClampedArray","height","width","error","message","requestDraw","graphicsBlit","currentScreenFixed","i","push","JoyPadEvent","key","down","GyroEvent","x","y","audioResamplerFirstPassFactor","max","min","downSampleInputDivider","initAudioBuffer","changeVolume","audioBuffer","randomFactor","LSFR","LSFRShifted","audioUnderrunAdjustment","underrunAmount","recalculateIterationClockLimitForAudio","channel1canPlay","channel2canPlay","channel4canPlay","channel1OutputLevelCache","channel2OutputLevelCache","channel3OutputLevelCache","channel4OutputLevelCache","outputAudio","generateAudio","numSamples","multiplier","clockUpTo","audioComputeSequencer","computeAudioChannels","generateAudioFake","audioJIT","clockAudioLength","clockAudioSweep","clockAudioEnvelope","channel1EnableCheck","channel2EnableCheck","channel3EnableCheck","channel4EnableCheck","runAudioSweep","channel1AudioSweepPerformDummy","channel4UpdateCache","channel1OutputLevelTrimaryCache","channel2OutputLevelTrimaryCache","channel3UpdateCache","channel1OutputLevelSecondaryCache","channel1VolumeEnableCheck","mixerOutputLevelCache","channel2OutputLevelSecondaryCache","channel2VolumeEnableCheck","channel3OutputLevelSecondaryCache","channel4OutputLevelSecondaryCache","channel4VolumeEnableCheck","channel3WriteRAM","address","clockUpdate","updateCore","iterationEndRoutine","executeIteration","opcodeToExecute","timedTicks","launchIRQ","recalculateIterationClockLimit","endModulus","audioClocking","scanLineMode2","scanLineMode3","scanLineMode0","incrementScanLineQueue","updateSpriteCount","executeHDMA","clocksUntilLYCMatch","clocksUntilMode0","line","lineAdjusted","yoffset","yCap","OAMAddress","matchLYC","updateCoreFull","graphicsJITVBlank","prepareFrame","DisplayShowOff","clearFrameBuffer","DMAWrite","newTime","timeElapsed","swizzleFrameBuffer","dispatchDraw","processDraw","resizeFrameBuffer","canvasRGBALength","canvasData","bufferIndex","canvasIndex","resize","Resize","buffer","renderScanLine","scanlineToRender","pixelLine","defaultColor","pixelPosition","renderMidScanLine","sortBuffer","OAMAddressCache","renderPathBuild","getGBCColor","priorityFlaggingPathRebuild","SpriteGBCLayerRender","BGGBLayerRender","WindowGBLayerRender","SpriteGBLayerRender","BGGBCLayerRender","WindowGBCLayerRender","BGGBCLayerRenderNoPriorityFlagging","WindowGBCLayerRenderNoPriorityFlagging","tileIndex","generateGBCTileBank1","generateGBCTileBank2","updateGBColorizedBGPalette","updateGBColorizedOBJPalette","generateGBOAMTileLine","generateGBTileLine","RGBTint","value","r","g","b","counter","adjustedIndex","updateGBCBGPalette","midScanLineJIT","updateGBCOBJPalette","scrollYAdjusted","tileYLine","tileYDown","scrollXAdjusted","pixelPositionEnd","chrCode","tile","texel","scrollXAdjustedAligned","attrCode","palette","scrollXRangeAdjusted","xcoord","xCoordStart","xCoordEnd","currentPixel","linePixel","findLowestSpriteDrawable","drawableRange","diff","endX","xCounter","lineCopy","tileBlock","generateGBCTileLineBank1","tileBlock1","tileBlock2","tileBlock3","tileBlock4","addressFlipped","vramAddress","generateGBCTileLineBank2","graphicsJIT","graphicsJITScanlineGroup","bitShift","testbit","currentClocks","maxClocks","memoryReadNormal","memoryReadROM","VRAMDATAReadCGBCPU","VRAMDATAReadDMGCPU","VRAMCHRReadCGBCPU","VRAMCHRReadDMGCPU","memoryReadMBC7","memoryReadMBC3","memoryReadMBC","memoryReadBAD","memoryReadGBCMemory","memoryReadECHONormal","memoryReadECHOGBCMemory","memoryReadOAM","memoryHighReadNormal","setCurrentMBC1ROMBank","setCurrentMBC2AND3ROMBank","setCurrentMBC5ROMBank","MBCWriteEnable","MBC1WriteROMBank","MBC1WriteRAMBank","MBC1WriteType","MBC2WriteROMBank","cartIgnoreWrite","MBC3WriteROMBank","MBC3WriteRAMBank","MBC3WriteRTCLatch","MBC5WriteROMBankLow","MBC5WriteROMBankHigh","RUMBLEWriteRAMBank","MBC5WriteRAMBank","HuC3WriteRAMBank","VRAMGBCDATAWrite","VRAMGBDATAWrite","VRAMGBDATAUpperWrite","VRAMGBCCHRMAPWrite","VRAMGBCHRMAPWrite","memoryWriteMBC3RAM","memoryWriteMBCRAM","memoryWriteGBCRAM","memoryWriteNormal","memoryWriteECHOGBCRAM","memoryWriteECHONormal","memoryWriteOAMRAM","memoryHighWriteNormal","registerWriteJumpCompile","RTCHalt","tilesToTransfer","source","destination","pow","nr12","nr22","bitWidth","nr42","recompileModelSpecificIOWriteHandling","stat","newData","next","addressCheck","baseArray","memtype","typedArrayTemp","Uint8Array","Int8Array","Int32Array","Float32Array","arrayTemp","defaultValue","numberType","arrayHandle","$cf564472984ca7cd$exports","$121279a4dfdcc119$var$KEYMAP","RIGHT","LEFT","UP","DOWN","A","B","SELECT","START","$121279a4dfdcc119$var$Interface","_that","__proto__","_prototype","gameboy","frames","pressed","Array","Object","keys","initialized","running","sendKey","keycode","shutdownEmulation","loadRom","saveData","title","doFrame","partial","i1","pressKeys","that","pressKey","toUpperCase","getKeys","getScreen","getMemory","end","getAudio","getSaveData","setMemory","KEYMAP","$121279a4dfdcc119$exports","$0eccba8414e25794$export$a143d493d941bafc","$776c32777f5c3702$export$d622b2ad8d90c771","$776c32777f5c3702$export$6100ba28696e12de","b64","tmp","lens","$776c32777f5c3702$var$getLens","validLen","placeHoldersLen","arr","$776c32777f5c3702$var$Arr","$776c32777f5c3702$var$_byteLength","curByte","len","$776c32777f5c3702$var$revLookup","uint8","extraBytes","parts","maxChunkLength","len2","$776c32777f5c3702$var$encodeChunk","$776c32777f5c3702$var$lookup","join","$14e7e8fb3060b86f$export$aafa59e2e03f2942","$14e7e8fb3060b86f$export$68d8715fc104d294","$776c32777f5c3702$var$code","$776c32777f5c3702$var$i","$776c32777f5c3702$var$len","indexOf","num","output","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","c","rt","abs","isNaN","LN2","$0eccba8414e25794$var$customInspectSymbol","Symbol","$0eccba8414e25794$var$Buffer","$0eccba8414e25794$var$createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","TypeError","$0eccba8414e25794$var$allocUnsafe","$0eccba8414e25794$var$from","string","encoding","isEncoding","$0eccba8414e25794$var$byteLength","actual","write","$0eccba8414e25794$var$fromString","ArrayBuffer","isView","arrayView","$0eccba8414e25794$var$isInstance","copy","$0eccba8414e25794$var$fromArrayBuffer","byteOffset","byteLength","$0eccba8414e25794$var$fromArrayLike","$0eccba8414e25794$var$fromArrayView","SharedArrayBuffer","valueOf","from","obj","isBuffer","$0eccba8414e25794$var$checked","undefined","$0eccba8414e25794$var$numberIsNaN","type","isArray","$0eccba8414e25794$var$fromObject","toPrimitive","$0eccba8414e25794$var$assertSize","size","array","toString","mustMatch","arguments","loweredCase","$0eccba8414e25794$var$utf8ToBytes","$0eccba8414e25794$var$base64ToBytes","toLowerCase","$0eccba8414e25794$var$slowToString","$0eccba8414e25794$var$hexSlice","$0eccba8414e25794$var$utf8Slice","$0eccba8414e25794$var$asciiSlice","$0eccba8414e25794$var$latin1Slice","$0eccba8414e25794$var$base64Slice","$0eccba8414e25794$var$utf16leSlice","$0eccba8414e25794$var$swap","n","$0eccba8414e25794$var$bidirectionalIndexOf","val","dir","$0eccba8414e25794$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","$0eccba8414e25794$var$hexWrite","Number","remaining","strLen","parsed","parseInt","substr","$0eccba8414e25794$var$utf8Write","$0eccba8414e25794$var$blitBuffer","$0eccba8414e25794$var$asciiWrite","str","byteArray","$0eccba8414e25794$var$asciiToBytes","$0eccba8414e25794$var$base64Write","$0eccba8414e25794$var$ucs2Write","units","hi","lo","$0eccba8414e25794$var$utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","apply","$0eccba8414e25794$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$0eccba8414e25794$var$typedArraySupport","defineProperty","enumerable","get","poolSize","alloc","fill","$0eccba8414e25794$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$0eccba8414e25794$var$hexSliceLookupTable","bytes","$0eccba8414e25794$var$checkOffset","ext","$0eccba8414e25794$var$checkInt","$0eccba8414e25794$var$checkIEEE754","$0eccba8414e25794$var$writeFloat","littleEndian","noAssert","$0eccba8414e25794$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$0eccba8414e25794$var$INVALID_BASE64_RE","leadSurrogate","split","$0eccba8414e25794$var$base64clean","src","dst","alphabet","table","i16","registerPaint","gb","$parcel$interopDefault","isPainting","uri","test","firstComma","meta","substring","charset","base64","typeFull","unescape","$299201f8c1b6ad3d$require$Buffer","$299201f8c1b6ad3d$var$dataUriToBuffer","inputProperties","propToVar","propName1","parseProps","props","forEach","propName","parseProp","props1","prop","CSSUnparsedValue","CSSUnitValue","paint","ctx","geom","props2","buttonA","buttonB","buttonLeft","buttonRight","buttonUp","buttonDown","buttonStart","buttonSelect","frame","frameNumber","clearRect","fillStyle","fillRect"],"version":3,"file":"gameboy.c2ff4dfb.js.map"}